<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="358.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="341" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="341" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (1,373,737,360 samples, 9.37%)</title><rect x="1079.5" y="197" width="110.5" height="15.0" fill="rgb(213,9,32)" rx="2" ry="2" />
<text  x="1082.48" y="207.5" >[[kernel.kall..</text>
</g>
<g >
<title>set_copy (30,303,030 samples, 0.21%)</title><rect x="390.3" y="261" width="2.5" height="15.0" fill="rgb(219,97,32)" rx="2" ry="2" />
<text  x="393.33" y="271.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::deallocate (10,101,010 samples, 0.07%)</title><rect x="365.1" y="261" width="0.9" height="15.0" fill="rgb(215,175,9)" rx="2" ry="2" />
<text  x="368.14" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="425.3" y="245" width="1.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="428.28" y="255.5" ></text>
</g>
<g >
<title>[unknown] (1,373,737,360 samples, 9.37%)</title><rect x="1079.5" y="213" width="110.5" height="15.0" fill="rgb(220,100,25)" rx="2" ry="2" />
<text  x="1082.48" y="223.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="601.6" y="213" width="0.8" height="15.0" fill="rgb(221,83,17)" rx="2" ry="2" />
<text  x="604.63" y="223.5" ></text>
</g>
<g >
<title>[unknown] (3,292,929,260 samples, 22.45%)</title><rect x="14.1" y="261" width="264.9" height="15.0" fill="rgb(206,229,19)" rx="2" ry="2" />
<text  x="17.06" y="271.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="261" width="0.8" height="15.0" fill="rgb(221,122,14)" rx="2" ry="2" />
<text  x="14.63" y="271.5" ></text>
</g>
<g >
<title>set_or (10,101,010 samples, 0.07%)</title><rect x="240.0" y="245" width="0.8" height="15.0" fill="rgb(253,29,38)" rx="2" ry="2" />
<text  x="242.99" y="255.5" ></text>
</g>
<g >
<title>realloc (10,101,010 samples, 0.07%)</title><rect x="513.9" y="277" width="0.8" height="15.0" fill="rgb(210,132,36)" rx="2" ry="2" />
<text  x="516.86" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="1078.7" y="117" width="0.8" height="15.0" fill="rgb(245,137,52)" rx="2" ry="2" />
<text  x="1081.66" y="127.5" ></text>
</g>
<g >
<title>sm_insert (60,606,060 samples, 0.41%)</title><rect x="591.9" y="277" width="4.8" height="15.0" fill="rgb(250,129,20)" rx="2" ry="2" />
<text  x="594.87" y="287.5" ></text>
</g>
<g >
<title>essen_raising (10,101,010 samples, 0.07%)</title><rect x="343.2" y="261" width="0.8" height="15.0" fill="rgb(235,201,11)" rx="2" ry="2" />
<text  x="346.20" y="271.5" ></text>
</g>
<g >
<title>sm_row_intersects (30,303,030 samples, 0.21%)</title><rect x="244.9" y="245" width="2.4" height="15.0" fill="rgb(207,164,27)" rx="2" ry="2" />
<text  x="247.86" y="255.5" ></text>
</g>
<g >
<title>unravel_range (10,101,010 samples, 0.07%)</title><rect x="422.0" y="261" width="0.8" height="15.0" fill="rgb(230,146,23)" rx="2" ry="2" />
<text  x="425.02" y="271.5" ></text>
</g>
<g >
<title>sm_minimum_cover (20,202,020 samples, 0.14%)</title><rect x="596.7" y="277" width="1.7" height="15.0" fill="rgb(243,100,41)" rx="2" ry="2" />
<text  x="599.75" y="287.5" ></text>
</g>
<g >
<title>compl_merge (10,101,010 samples, 0.07%)</title><rect x="291.2" y="261" width="0.8" height="15.0" fill="rgb(213,149,6)" rx="2" ry="2" />
<text  x="294.18" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="601.6" y="69" width="0.8" height="15.0" fill="rgb(224,70,28)" rx="2" ry="2" />
<text  x="604.63" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="133" width="0.8" height="15.0" fill="rgb(247,33,13)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>mini_sort (20,202,020 samples, 0.14%)</title><rect x="358.6" y="261" width="1.7" height="15.0" fill="rgb(237,199,41)" rx="2" ry="2" />
<text  x="361.64" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (10,101,010 samples, 0.07%)</title><rect x="600.0" y="261" width="0.8" height="15.0" fill="rgb(212,121,5)" rx="2" ry="2" />
<text  x="603.00" y="271.5" ></text>
</g>
<g >
<title>sm_delrow.part.0 (10,101,010 samples, 0.07%)</title><rect x="584.6" y="277" width="0.8" height="15.0" fill="rgb(214,209,34)" rx="2" ry="2" />
<text  x="587.56" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,303,030,230 samples, 49.79%)</title><rect x="602.4" y="277" width="587.6" height="15.0" fill="rgb(244,131,15)" rx="2" ry="2" />
<text  x="605.44" y="287.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>scudo::HybridMutex::lock (20,202,020 samples, 0.14%)</title><rect x="386.3" y="261" width="1.6" height="15.0" fill="rgb(247,136,20)" rx="2" ry="2" />
<text  x="389.27" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="601.6" y="101" width="0.8" height="15.0" fill="rgb(214,114,22)" rx="2" ry="2" />
<text  x="604.63" y="111.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10,101,010 samples, 0.07%)</title><rect x="423.7" y="277" width="0.8" height="15.0" fill="rgb(219,222,32)" rx="2" ry="2" />
<text  x="426.65" y="287.5" ></text>
</g>
<g >
<title>massive_count (313,131,310 samples, 2.13%)</title><rect x="486.2" y="277" width="25.2" height="15.0" fill="rgb(238,72,17)" rx="2" ry="2" />
<text  x="489.23" y="287.5" >m..</text>
</g>
<g >
<title>set_dist (20,202,020 samples, 0.14%)</title><rect x="392.8" y="261" width="1.6" height="15.0" fill="rgb(216,202,30)" rx="2" ry="2" />
<text  x="395.77" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="101" width="0.8" height="15.0" fill="rgb(221,108,22)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10,101,010 samples, 0.07%)</title><rect x="422.8" y="277" width="0.9" height="15.0" fill="rgb(217,2,6)" rx="2" ry="2" />
<text  x="425.84" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="229" width="0.8" height="15.0" fill="rgb(222,52,13)" rx="2" ry="2" />
<text  x="14.63" y="239.5" ></text>
</g>
<g >
<title>python3 (10,101,010 samples, 0.07%)</title><rect x="600.0" y="293" width="0.8" height="15.0" fill="rgb(249,156,31)" rx="2" ry="2" />
<text  x="603.00" y="303.5" ></text>
</g>
<g >
<title>__libc_read (10,101,010 samples, 0.07%)</title><rect x="601.6" y="277" width="0.8" height="15.0" fill="rgb(216,43,40)" rx="2" ry="2" />
<text  x="604.63" y="287.5" ></text>
</g>
<g >
<title>compl_cube (10,101,010 samples, 0.07%)</title><rect x="287.1" y="261" width="0.8" height="15.0" fill="rgb(207,21,14)" rx="2" ry="2" />
<text  x="290.12" y="271.5" ></text>
</g>
<g >
<title>complement (20,202,020 samples, 0.14%)</title><rect x="292.0" y="261" width="1.6" height="15.0" fill="rgb(207,78,40)" rx="2" ry="2" />
<text  x="295.00" y="271.5" ></text>
</g>
<g >
<title>__tls_get_addr (10,101,010 samples, 0.07%)</title><rect x="44.1" y="229" width="0.8" height="15.0" fill="rgb(211,18,25)" rx="2" ry="2" />
<text  x="47.13" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="601.6" y="229" width="0.8" height="15.0" fill="rgb(237,80,27)" rx="2" ry="2" />
<text  x="604.63" y="239.5" ></text>
</g>
<g >
<title>espresso (7,303,030,230 samples, 49.79%)</title><rect x="12.4" y="293" width="587.6" height="15.0" fill="rgb(216,66,39)" rx="2" ry="2" />
<text  x="15.44" y="303.5" >espresso</text>
</g>
<g >
<title>__tls_get_addr (10,101,010 samples, 0.07%)</title><rect x="279.8" y="261" width="0.8" height="15.0" fill="rgb(232,115,0)" rx="2" ry="2" />
<text  x="282.81" y="271.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::pushBlocksImpl (10,101,010 samples, 0.07%)</title><rect x="561.8" y="277" width="0.8" height="15.0" fill="rgb(242,210,53)" rx="2" ry="2" />
<text  x="564.80" y="287.5" ></text>
</g>
<g >
<title>[unknown] (1,373,737,360 samples, 9.37%)</title><rect x="1079.5" y="245" width="110.5" height="15.0" fill="rgb(218,90,17)" rx="2" ry="2" />
<text  x="1082.48" y="255.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,373,737,360 samples, 9.37%)</title><rect x="1079.5" y="133" width="110.5" height="15.0" fill="rgb(220,57,4)" rx="2" ry="2" />
<text  x="1082.48" y="143.5" >[[kernel.kall..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="601.6" y="181" width="0.8" height="15.0" fill="rgb(250,124,4)" rx="2" ry="2" />
<text  x="604.63" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,929,292,870 samples, 40.43%)</title><rect x="602.4" y="213" width="477.1" height="15.0" fill="rgb(241,194,48)" rx="2" ry="2" />
<text  x="605.44" y="223.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[espresso] (20,202,020 samples, 0.14%)</title><rect x="14.1" y="245" width="1.6" height="15.0" fill="rgb(219,198,0)" rx="2" ry="2" />
<text  x="17.06" y="255.5" ></text>
</g>
<g >
<title>setup_BB_CC (202,020,200 samples, 1.38%)</title><rect x="395.2" y="261" width="16.3" height="15.0" fill="rgb(251,34,44)" rx="2" ry="2" />
<text  x="398.21" y="271.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::allocate (10,101,010 samples, 0.07%)</title><rect x="364.3" y="261" width="0.8" height="15.0" fill="rgb(214,117,51)" rx="2" ry="2" />
<text  x="367.33" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="165" width="0.8" height="15.0" fill="rgb(244,166,19)" rx="2" ry="2" />
<text  x="14.63" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="229" width="0.8" height="15.0" fill="rgb(216,211,6)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::releaseToOSMaybe (10,101,010 samples, 0.07%)</title><rect x="388.7" y="261" width="0.8" height="15.0" fill="rgb(222,35,42)" rx="2" ry="2" />
<text  x="391.71" y="271.5" ></text>
</g>
<g >
<title>sm_col_dominance (20,202,020 samples, 0.14%)</title><rect x="416.3" y="261" width="1.7" height="15.0" fill="rgb(220,128,35)" rx="2" ry="2" />
<text  x="419.34" y="271.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (10,101,010 samples, 0.07%)</title><rect x="10.8" y="261" width="0.8" height="15.0" fill="rgb(209,63,52)" rx="2" ry="2" />
<text  x="13.81" y="271.5" ></text>
</g>
<g >
<title>[libscudo.so] (10,101,010 samples, 0.07%)</title><rect x="457.8" y="261" width="0.8" height="15.0" fill="rgb(209,72,28)" rx="2" ry="2" />
<text  x="460.78" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="601.6" y="197" width="0.8" height="15.0" fill="rgb(245,73,48)" rx="2" ry="2" />
<text  x="604.63" y="207.5" ></text>
</g>
<g >
<title>setp_implies (30,303,030 samples, 0.21%)</title><rect x="241.6" y="245" width="2.4" height="15.0" fill="rgb(248,169,23)" rx="2" ry="2" />
<text  x="244.61" y="255.5" ></text>
</g>
<g >
<title>sm_delcol.part.0 (10,101,010 samples, 0.07%)</title><rect x="20.6" y="229" width="0.8" height="15.0" fill="rgb(225,10,0)" rx="2" ry="2" />
<text  x="23.56" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,373,737,360 samples, 9.37%)</title><rect x="1079.5" y="149" width="110.5" height="15.0" fill="rgb(215,173,9)" rx="2" ry="2" />
<text  x="1082.48" y="159.5" >[[kernel.kall..</text>
</g>
<g >
<title>read_cube (10,101,010 samples, 0.07%)</title><rect x="513.0" y="277" width="0.9" height="15.0" fill="rgb(230,189,0)" rx="2" ry="2" />
<text  x="516.04" y="287.5" ></text>
</g>
<g >
<title>setp_disjoint (10,101,010 samples, 0.07%)</title><rect x="394.4" y="261" width="0.8" height="15.0" fill="rgb(239,77,9)" rx="2" ry="2" />
<text  x="397.39" y="271.5" ></text>
</g>
<g >
<title>mv_reduce (10,101,010 samples, 0.07%)</title><rect x="360.3" y="261" width="0.8" height="15.0" fill="rgb(232,66,32)" rx="2" ry="2" />
<text  x="363.26" y="271.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.07%)</title><rect x="600.8" y="277" width="0.8" height="15.0" fill="rgb(225,181,29)" rx="2" ry="2" />
<text  x="603.81" y="287.5" ></text>
</g>
<g >
<title>force_lower (70,707,070 samples, 0.48%)</title><rect x="344.8" y="261" width="5.7" height="15.0" fill="rgb(212,1,31)" rx="2" ry="2" />
<text  x="347.82" y="271.5" ></text>
</g>
<g >
<title>__tls_get_addr (10,101,010 samples, 0.07%)</title><rect x="16.5" y="229" width="0.8" height="15.0" fill="rgb(252,57,46)" rx="2" ry="2" />
<text  x="19.50" y="239.5" ></text>
</g>
<g >
<title>sm_row_dominance (10,101,010 samples, 0.07%)</title><rect x="599.2" y="277" width="0.8" height="15.0" fill="rgb(207,54,23)" rx="2" ry="2" />
<text  x="602.19" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="601.6" y="165" width="0.8" height="15.0" fill="rgb(205,141,25)" rx="2" ry="2" />
<text  x="604.63" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="133" width="0.8" height="15.0" fill="rgb(212,125,29)" rx="2" ry="2" />
<text  x="14.63" y="143.5" ></text>
</g>
<g >
<title>[libscudo.so] (10,101,010 samples, 0.07%)</title><rect x="13.3" y="261" width="0.8" height="15.0" fill="rgb(209,97,48)" rx="2" ry="2" />
<text  x="16.25" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,373,737,360 samples, 9.37%)</title><rect x="1079.5" y="117" width="110.5" height="15.0" fill="rgb(237,154,0)" rx="2" ry="2" />
<text  x="1082.48" y="127.5" >[[kernel.kall..</text>
</g>
<g >
<title>[libjemalloc.so.2] (10,101,010 samples, 0.07%)</title><rect x="600.8" y="261" width="0.8" height="15.0" fill="rgb(234,163,21)" rx="2" ry="2" />
<text  x="603.81" y="271.5" ></text>
</g>
<g >
<title>__tls_get_addr (30,303,030 samples, 0.21%)</title><rect x="426.9" y="277" width="2.4" height="15.0" fill="rgb(205,99,13)" rx="2" ry="2" />
<text  x="429.90" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="213" width="0.8" height="15.0" fill="rgb(236,158,25)" rx="2" ry="2" />
<text  x="14.63" y="223.5" ></text>
</g>
<g >
<title>read_cube (10,101,010 samples, 0.07%)</title><rect x="361.1" y="261" width="0.8" height="15.0" fill="rgb(230,25,5)" rx="2" ry="2" />
<text  x="364.07" y="271.5" ></text>
</g>
<g >
<title>malloc (383,838,380 samples, 2.62%)</title><rect x="455.3" y="277" width="30.9" height="15.0" fill="rgb(223,104,9)" rx="2" ry="2" />
<text  x="458.34" y="287.5" >ma..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="1189.2" y="85" width="0.8" height="15.0" fill="rgb(230,43,1)" rx="2" ry="2" />
<text  x="1192.19" y="95.5" ></text>
</g>
<g >
<title>sm_dup (80,808,080 samples, 0.55%)</title><rect x="585.4" y="277" width="6.5" height="15.0" fill="rgb(252,29,16)" rx="2" ry="2" />
<text  x="588.37" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="601.6" y="149" width="0.8" height="15.0" fill="rgb(240,165,36)" rx="2" ry="2" />
<text  x="604.63" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="37" width="0.8" height="15.0" fill="rgb(250,188,24)" rx="2" ry="2" />
<text  x="13.00" y="47.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::allocate (20,202,020 samples, 0.14%)</title><rect x="225.4" y="245" width="1.6" height="15.0" fill="rgb(232,4,0)" rx="2" ry="2" />
<text  x="228.36" y="255.5" ></text>
</g>
<g >
<title>__mmap (10,101,010 samples, 0.07%)</title><rect x="11.6" y="277" width="0.8" height="15.0" fill="rgb(247,141,27)" rx="2" ry="2" />
<text  x="14.63" y="287.5" ></text>
</g>
<g >
<title>essen_parts (181,818,180 samples, 1.24%)</title><rect x="328.6" y="261" width="14.6" height="15.0" fill="rgb(210,77,32)" rx="2" ry="2" />
<text  x="331.57" y="271.5" ></text>
</g>
<g >
<title>sccc_special_cases (20,202,020 samples, 0.14%)</title><rect x="223.7" y="245" width="1.7" height="15.0" fill="rgb(218,148,15)" rx="2" ry="2" />
<text  x="226.73" y="255.5" ></text>
</g>
<g >
<title>_dl_relocate_object (10,101,010 samples, 0.07%)</title><rect x="10.8" y="229" width="0.8" height="15.0" fill="rgb(235,179,10)" rx="2" ry="2" />
<text  x="13.81" y="239.5" ></text>
</g>
<g >
<title>taut_special_cases (383,838,380 samples, 2.62%)</title><rect x="247.3" y="245" width="30.9" height="15.0" fill="rgb(232,54,3)" rx="2" ry="2" />
<text  x="250.30" y="255.5" >ta..</text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::deallocate (101,010,100 samples, 0.69%)</title><rect x="550.4" y="277" width="8.2" height="15.0" fill="rgb(221,221,17)" rx="2" ry="2" />
<text  x="553.43" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="1189.2" y="69" width="0.8" height="15.0" fill="rgb(228,227,51)" rx="2" ry="2" />
<text  x="1192.19" y="79.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (10,101,010 samples, 0.07%)</title><rect x="600.8" y="245" width="0.8" height="15.0" fill="rgb(241,129,44)" rx="2" ry="2" />
<text  x="603.81" y="255.5" ></text>
</g>
<g >
<title>[unknown] (5,090,909,040 samples, 34.71%)</title><rect x="13.3" y="277" width="409.5" height="15.0" fill="rgb(217,191,6)" rx="2" ry="2" />
<text  x="16.25" y="287.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="601.6" y="245" width="0.8" height="15.0" fill="rgb(212,177,9)" rx="2" ry="2" />
<text  x="604.63" y="255.5" ></text>
</g>
<g >
<title>full_row (232,323,230 samples, 1.58%)</title><rect x="25.4" y="245" width="18.7" height="15.0" fill="rgb(205,221,51)" rx="2" ry="2" />
<text  x="28.44" y="255.5" ></text>
</g>
<g >
<title>sm_insert (20,202,020 samples, 0.14%)</title><rect x="420.4" y="261" width="1.6" height="15.0" fill="rgb(222,223,2)" rx="2" ry="2" />
<text  x="423.40" y="271.5" ></text>
</g>
<g >
<title>set_and (70,707,070 samples, 0.48%)</title><rect x="566.7" y="277" width="5.7" height="15.0" fill="rgb(247,1,7)" rx="2" ry="2" />
<text  x="569.68" y="287.5" ></text>
</g>
<g >
<title>sm_delrow.part.0 (10,101,010 samples, 0.07%)</title><rect x="419.6" y="261" width="0.8" height="15.0" fill="rgb(240,69,51)" rx="2" ry="2" />
<text  x="422.59" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="245" width="0.8" height="15.0" fill="rgb(207,5,45)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>binate_split_select (70,707,070 samples, 0.48%)</title><rect x="280.6" y="261" width="5.7" height="15.0" fill="rgb(251,159,4)" rx="2" ry="2" />
<text  x="283.62" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="1189.2" y="101" width="0.8" height="15.0" fill="rgb(245,41,36)" rx="2" ry="2" />
<text  x="1192.19" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,929,292,870 samples, 40.43%)</title><rect x="602.4" y="261" width="477.1" height="15.0" fill="rgb(246,121,3)" rx="2" ry="2" />
<text  x="605.44" y="271.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="601.6" y="53" width="0.8" height="15.0" fill="rgb(238,53,35)" rx="2" ry="2" />
<text  x="604.63" y="63.5" ></text>
</g>
<g >
<title>compl_lift (40,404,040 samples, 0.28%)</title><rect x="287.9" y="261" width="3.3" height="15.0" fill="rgb(248,173,19)" rx="2" ry="2" />
<text  x="290.93" y="271.5" ></text>
</g>
<g >
<title>sm_col_remove_element (20,202,020 samples, 0.14%)</title><rect x="418.0" y="261" width="1.6" height="15.0" fill="rgb(240,38,34)" rx="2" ry="2" />
<text  x="420.96" y="271.5" ></text>
</g>
<g >
<title>feasibly_covered (10,101,010 samples, 0.07%)</title><rect x="344.0" y="261" width="0.8" height="15.0" fill="rgb(223,41,27)" rx="2" ry="2" />
<text  x="347.01" y="271.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocatorLocalCache&lt;scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt; &gt;::drain (30,303,030 samples, 0.21%)</title><rect x="562.6" y="277" width="2.5" height="15.0" fill="rgb(208,129,36)" rx="2" ry="2" />
<text  x="565.62" y="287.5" ></text>
</g>
<g >
<title>mv_reduce (10,101,010 samples, 0.07%)</title><rect x="512.2" y="277" width="0.8" height="15.0" fill="rgb(228,42,16)" rx="2" ry="2" />
<text  x="515.23" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="426.1" y="181" width="0.8" height="15.0" fill="rgb(206,17,25)" rx="2" ry="2" />
<text  x="429.09" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="149" width="0.8" height="15.0" fill="rgb(210,168,21)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>__tls_get_addr (20,202,020 samples, 0.14%)</title><rect x="458.6" y="261" width="1.6" height="15.0" fill="rgb(224,82,18)" rx="2" ry="2" />
<text  x="461.60" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_open (10,101,010 samples, 0.07%)</title><rect x="10.0" y="261" width="0.8" height="15.0" fill="rgb(220,156,36)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>scofactor (404,040,400 samples, 2.75%)</title><rect x="514.7" y="277" width="32.5" height="15.0" fill="rgb(212,145,14)" rx="2" ry="2" />
<text  x="517.67" y="287.5" >sc..</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.07%)</title><rect x="10.8" y="277" width="0.8" height="15.0" fill="rgb(243,25,45)" rx="2" ry="2" />
<text  x="13.81" y="287.5" ></text>
</g>
<g >
<title>tautology (10,101,010 samples, 0.07%)</title><rect x="278.2" y="245" width="0.8" height="15.0" fill="rgb(246,46,20)" rx="2" ry="2" />
<text  x="281.18" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,929,292,870 samples, 40.43%)</title><rect x="602.4" y="181" width="477.1" height="15.0" fill="rgb(208,201,44)" rx="2" ry="2" />
<text  x="605.44" y="191.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="1189.2" y="53" width="0.8" height="15.0" fill="rgb(236,19,16)" rx="2" ry="2" />
<text  x="1192.19" y="63.5" ></text>
</g>
<g >
<title>[unknown] (60,606,060 samples, 0.41%)</title><rect x="16.5" y="245" width="4.9" height="15.0" fill="rgb(254,200,14)" rx="2" ry="2" />
<text  x="19.50" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="1078.7" y="133" width="0.8" height="15.0" fill="rgb(241,128,32)" rx="2" ry="2" />
<text  x="1081.66" y="143.5" ></text>
</g>
<g >
<title>[libscudo.so] (10,101,010 samples, 0.07%)</title><rect x="15.7" y="245" width="0.8" height="15.0" fill="rgb(242,134,26)" rx="2" ry="2" />
<text  x="18.69" y="255.5" ></text>
</g>
<g >
<title>swapper (7,303,030,230 samples, 49.79%)</title><rect x="602.4" y="293" width="587.6" height="15.0" fill="rgb(251,141,15)" rx="2" ry="2" />
<text  x="605.44" y="303.5" >swapper</text>
</g>
<g >
<title>sf_addset (10,101,010 samples, 0.07%)</title><rect x="411.5" y="261" width="0.8" height="15.0" fill="rgb(221,189,51)" rx="2" ry="2" />
<text  x="414.46" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="181" width="0.8" height="15.0" fill="rgb(216,115,13)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::quarantineOrDeallocateChunk (40,404,040 samples, 0.28%)</title><rect x="17.3" y="229" width="3.3" height="15.0" fill="rgb(214,70,23)" rx="2" ry="2" />
<text  x="20.31" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="197" width="0.8" height="15.0" fill="rgb(229,110,43)" rx="2" ry="2" />
<text  x="14.63" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,373,737,360 samples, 9.37%)</title><rect x="1079.5" y="165" width="110.5" height="15.0" fill="rgb(242,57,36)" rx="2" ry="2" />
<text  x="1082.48" y="175.5" >[[kernel.kall..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="601.6" y="85" width="0.8" height="15.0" fill="rgb(246,2,28)" rx="2" ry="2" />
<text  x="604.63" y="95.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocatorLocalCache&lt;scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt; &gt;::refill (10,101,010 samples, 0.07%)</title><rect x="389.5" y="261" width="0.8" height="15.0" fill="rgb(245,32,54)" rx="2" ry="2" />
<text  x="392.52" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="426.1" y="229" width="0.8" height="15.0" fill="rgb(224,155,2)" rx="2" ry="2" />
<text  x="429.09" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="245" width="0.8" height="15.0" fill="rgb(216,146,7)" rx="2" ry="2" />
<text  x="14.63" y="255.5" ></text>
</g>
<g >
<title>redis-server (20,202,020 samples, 0.14%)</title><rect x="600.8" y="293" width="1.6" height="15.0" fill="rgb(242,186,32)" rx="2" ry="2" />
<text  x="603.81" y="303.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.07%)</title><rect x="600.0" y="277" width="0.8" height="15.0" fill="rgb(229,165,44)" rx="2" ry="2" />
<text  x="603.00" y="287.5" ></text>
</g>
<g >
<title>elim_lowering (393,939,390 samples, 2.69%)</title><rect x="296.9" y="261" width="31.7" height="15.0" fill="rgb(210,123,42)" rx="2" ry="2" />
<text  x="299.87" y="271.5" >el..</text>
</g>
<g >
<title>dirname (10,101,010 samples, 0.07%)</title><rect x="11.6" y="293" width="0.8" height="15.0" fill="rgb(217,4,20)" rx="2" ry="2" />
<text  x="14.63" y="303.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (50,505,050 samples, 0.34%)</title><rect x="21.4" y="245" width="4.0" height="15.0" fill="rgb(248,146,11)" rx="2" ry="2" />
<text  x="24.38" y="255.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::quarantineOrDeallocateChunk (40,404,040 samples, 0.28%)</title><rect x="558.6" y="277" width="3.2" height="15.0" fill="rgb(217,81,38)" rx="2" ry="2" />
<text  x="561.55" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,929,292,870 samples, 40.43%)</title><rect x="602.4" y="245" width="477.1" height="15.0" fill="rgb(205,53,41)" rx="2" ry="2" />
<text  x="605.44" y="255.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>set_or (70,707,070 samples, 0.48%)</title><rect x="575.6" y="277" width="5.7" height="15.0" fill="rgb(254,77,36)" rx="2" ry="2" />
<text  x="578.62" y="287.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (10,101,010 samples, 0.07%)</title><rect x="511.4" y="277" width="0.8" height="15.0" fill="rgb(239,3,18)" rx="2" ry="2" />
<text  x="514.42" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,373,737,360 samples, 9.37%)</title><rect x="1079.5" y="181" width="110.5" height="15.0" fill="rgb(240,101,48)" rx="2" ry="2" />
<text  x="1082.48" y="191.5" >[[kernel.kall..</text>
</g>
<g >
<title>all (14,666,666,520 samples, 100%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(245,36,2)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>sf_count (10,101,010 samples, 0.07%)</title><rect x="581.3" y="277" width="0.8" height="15.0" fill="rgb(242,75,33)" rx="2" ry="2" />
<text  x="584.31" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="601.6" y="261" width="0.8" height="15.0" fill="rgb(232,108,17)" rx="2" ry="2" />
<text  x="604.63" y="271.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::allocate (40,404,040 samples, 0.28%)</title><rect x="547.2" y="277" width="3.2" height="15.0" fill="rgb(210,140,8)" rx="2" ry="2" />
<text  x="550.18" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,929,292,870 samples, 40.43%)</title><rect x="602.4" y="229" width="477.1" height="15.0" fill="rgb(216,185,12)" rx="2" ry="2" />
<text  x="605.44" y="239.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>set_adjcnt (10,101,010 samples, 0.07%)</title><rect x="565.9" y="277" width="0.8" height="15.0" fill="rgb(216,195,20)" rx="2" ry="2" />
<text  x="568.87" y="287.5" ></text>
</g>
<g >
<title>__times (30,303,030 samples, 0.21%)</title><rect x="424.5" y="277" width="2.4" height="15.0" fill="rgb(226,213,41)" rx="2" ry="2" />
<text  x="427.46" y="287.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="277" width="0.8" height="15.0" fill="rgb(226,115,6)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="213" width="0.8" height="15.0" fill="rgb(217,8,26)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="69" width="0.8" height="15.0" fill="rgb(206,191,14)" rx="2" ry="2" />
<text  x="13.00" y="79.5" ></text>
</g>
<g >
<title>_IO_getc (10,101,010 samples, 0.07%)</title><rect x="279.0" y="261" width="0.8" height="15.0" fill="rgb(228,44,30)" rx="2" ry="2" />
<text  x="281.99" y="271.5" ></text>
</g>
<g >
<title>sm_mincov (10,101,010 samples, 0.07%)</title><rect x="244.0" y="245" width="0.9" height="15.0" fill="rgb(212,222,31)" rx="2" ry="2" />
<text  x="247.05" y="255.5" ></text>
</g>
<g >
<title>sm_col_remove_element (20,202,020 samples, 0.14%)</title><rect x="582.9" y="277" width="1.7" height="15.0" fill="rgb(244,52,26)" rx="2" ry="2" />
<text  x="585.93" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="426.1" y="197" width="0.8" height="15.0" fill="rgb(225,86,8)" rx="2" ry="2" />
<text  x="429.09" y="207.5" ></text>
</g>
<g >
<title>set_diff (40,404,040 samples, 0.28%)</title><rect x="572.4" y="277" width="3.2" height="15.0" fill="rgb(211,135,37)" rx="2" ry="2" />
<text  x="575.37" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="85" width="0.8" height="15.0" fill="rgb(219,202,18)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="601.6" y="117" width="0.8" height="15.0" fill="rgb(239,62,3)" rx="2" ry="2" />
<text  x="604.63" y="127.5" ></text>
</g>
<g >
<title>malloc (90,909,090 samples, 0.62%)</title><rect x="44.1" y="245" width="7.3" height="15.0" fill="rgb(218,135,37)" rx="2" ry="2" />
<text  x="47.13" y="255.5" ></text>
</g>
<g >
<title>full_row (20,202,020 samples, 0.14%)</title><rect x="350.5" y="261" width="1.6" height="15.0" fill="rgb(209,93,1)" rx="2" ry="2" />
<text  x="353.51" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="425.3" y="261" width="1.6" height="15.0" fill="rgb(233,226,26)" rx="2" ry="2" />
<text  x="428.28" y="271.5" ></text>
</g>
<g >
<title>sccc_special_cases (30,303,030 samples, 0.21%)</title><rect x="361.9" y="261" width="2.4" height="15.0" fill="rgb(211,143,35)" rx="2" ry="2" />
<text  x="364.89" y="271.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::allocate (40,404,040 samples, 0.28%)</title><rect x="352.1" y="245" width="3.3" height="15.0" fill="rgb(241,72,30)" rx="2" ry="2" />
<text  x="355.13" y="255.5" ></text>
</g>
<g >
<title>cat (10,101,010 samples, 0.07%)</title><rect x="10.8" y="293" width="0.8" height="15.0" fill="rgb(212,212,19)" rx="2" ry="2" />
<text  x="13.81" y="303.5" ></text>
</g>
<g >
<title>dl_main (10,101,010 samples, 0.07%)</title><rect x="10.8" y="245" width="0.8" height="15.0" fill="rgb(214,166,44)" rx="2" ry="2" />
<text  x="13.81" y="255.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::popBatchImpl (10,101,010 samples, 0.07%)</title><rect x="387.9" y="261" width="0.8" height="15.0" fill="rgb(212,7,43)" rx="2" ry="2" />
<text  x="390.89" y="271.5" ></text>
</g>
<g >
<title>sm_col_contains (50,505,050 samples, 0.34%)</title><rect x="412.3" y="261" width="4.0" height="15.0" fill="rgb(212,175,52)" rx="2" ry="2" />
<text  x="415.27" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="1078.7" y="165" width="0.8" height="15.0" fill="rgb(245,210,33)" rx="2" ry="2" />
<text  x="1081.66" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="601.6" y="133" width="0.8" height="15.0" fill="rgb(216,143,19)" rx="2" ry="2" />
<text  x="604.63" y="143.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::quarantineOrDeallocateChunk (151,515,150 samples, 1.03%)</title><rect x="227.8" y="245" width="12.2" height="15.0" fill="rgb(232,12,34)" rx="2" ry="2" />
<text  x="230.80" y="255.5" ></text>
</g>
<g >
<title>select_feasible (10,101,010 samples, 0.07%)</title><rect x="565.1" y="277" width="0.8" height="15.0" fill="rgb(244,104,36)" rx="2" ry="2" />
<text  x="568.06" y="287.5" ></text>
</g>
<g >
<title>do_sm_minimum_cover (40,404,040 samples, 0.28%)</title><rect x="293.6" y="261" width="3.3" height="15.0" fill="rgb(232,25,49)" rx="2" ry="2" />
<text  x="296.62" y="271.5" ></text>
</g>
<g >
<title>d1_order (20,202,020 samples, 0.14%)</title><rect x="453.7" y="277" width="1.6" height="15.0" fill="rgb(243,177,21)" rx="2" ry="2" />
<text  x="456.72" y="287.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.28%)</title><rect x="352.1" y="261" width="3.3" height="15.0" fill="rgb(227,113,12)" rx="2" ry="2" />
<text  x="355.13" y="271.5" ></text>
</g>
<g >
<title>[espresso] (10,101,010 samples, 0.07%)</title><rect x="12.4" y="277" width="0.9" height="15.0" fill="rgb(241,222,5)" rx="2" ry="2" />
<text  x="15.44" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="1078.7" y="149" width="0.8" height="15.0" fill="rgb(224,141,51)" rx="2" ry="2" />
<text  x="1081.66" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="53" width="0.8" height="15.0" fill="rgb(218,161,8)" rx="2" ry="2" />
<text  x="13.00" y="63.5" ></text>
</g>
<g >
<title>massive_count (2,141,414,120 samples, 14.60%)</title><rect x="51.4" y="245" width="172.3" height="15.0" fill="rgb(236,20,50)" rx="2" ry="2" />
<text  x="54.45" y="255.5" >massive_count</text>
</g>
<g >
<title>[unknown] (1,373,737,360 samples, 9.37%)</title><rect x="1079.5" y="261" width="110.5" height="15.0" fill="rgb(233,25,7)" rx="2" ry="2" />
<text  x="1082.48" y="271.5" >[unknown]</text>
</g>
<g >
<title>sm_row_contains (10,101,010 samples, 0.07%)</title><rect x="598.4" y="277" width="0.8" height="15.0" fill="rgb(207,149,0)" rx="2" ry="2" />
<text  x="601.37" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="181" width="0.8" height="15.0" fill="rgb(244,30,12)" rx="2" ry="2" />
<text  x="14.63" y="191.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::quarantineOrDeallocateChunk (252,525,250 samples, 1.72%)</title><rect x="366.0" y="261" width="20.3" height="15.0" fill="rgb(212,185,35)" rx="2" ry="2" />
<text  x="368.95" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="117" width="0.8" height="15.0" fill="rgb(212,56,53)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::allocate (323,232,320 samples, 2.20%)</title><rect x="460.2" y="261" width="26.0" height="15.0" fill="rgb(235,184,45)" rx="2" ry="2" />
<text  x="463.22" y="271.5" >s..</text>
</g>
<g >
<title>setp_equal (10,101,010 samples, 0.07%)</title><rect x="240.8" y="245" width="0.8" height="15.0" fill="rgb(233,139,2)" rx="2" ry="2" />
<text  x="243.80" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,929,292,870 samples, 40.43%)</title><rect x="602.4" y="197" width="477.1" height="15.0" fill="rgb(242,130,42)" rx="2" ry="2" />
<text  x="605.44" y="207.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>mincov (40,404,040 samples, 0.28%)</title><rect x="355.4" y="261" width="3.2" height="15.0" fill="rgb(225,205,32)" rx="2" ry="2" />
<text  x="358.39" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="426.1" y="213" width="0.8" height="15.0" fill="rgb(211,99,22)" rx="2" ry="2" />
<text  x="429.09" y="223.5" ></text>
</g>
<g >
<title>cdist01 (10,101,010 samples, 0.07%)</title><rect x="286.3" y="261" width="0.8" height="15.0" fill="rgb(254,191,2)" rx="2" ry="2" />
<text  x="289.31" y="271.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::allocate (80,808,080 samples, 0.55%)</title><rect x="44.9" y="229" width="6.5" height="15.0" fill="rgb(244,100,46)" rx="2" ry="2" />
<text  x="47.94" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="165" width="0.8" height="15.0" fill="rgb(213,163,29)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>cofactor (303,030,300 samples, 2.07%)</title><rect x="429.3" y="277" width="24.4" height="15.0" fill="rgb(213,99,12)" rx="2" ry="2" />
<text  x="432.34" y="287.5" >c..</text>
</g>
<g >
<title>bench.sh (10,101,010 samples, 0.07%)</title><rect x="10.0" y="293" width="0.8" height="15.0" fill="rgb(248,45,30)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>sm_col_contains (10,101,010 samples, 0.07%)</title><rect x="582.1" y="277" width="0.8" height="15.0" fill="rgb(207,70,50)" rx="2" ry="2" />
<text  x="585.12" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="149" width="0.8" height="15.0" fill="rgb(211,130,44)" rx="2" ry="2" />
<text  x="14.63" y="159.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::deallocate (10,101,010 samples, 0.07%)</title><rect x="227.0" y="245" width="0.8" height="15.0" fill="rgb(235,68,48)" rx="2" ry="2" />
<text  x="229.98" y="255.5" ></text>
</g>
<g >
<title>[unknown] (1,373,737,360 samples, 9.37%)</title><rect x="1079.5" y="229" width="110.5" height="15.0" fill="rgb(235,137,48)" rx="2" ry="2" />
<text  x="1082.48" y="239.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="197" width="0.8" height="15.0" fill="rgb(233,196,30)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
</g>
</svg>
