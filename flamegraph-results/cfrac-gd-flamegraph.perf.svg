<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="601.7" y="117" width="0.4" height="15.0" fill="rgb(242,100,40)" rx="2" ry="2" />
<text  x="604.66" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.18%)</title><rect x="593.8" y="181" width="2.0" height="15.0" fill="rgb(218,6,41)" rx="2" ry="2" />
<text  x="596.76" y="191.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::markObjectUsed@plt (40,404,040 samples, 0.14%)</title><rect x="131.0" y="213" width="1.7" height="15.0" fill="rgb(254,113,12)" rx="2" ry="2" />
<text  x="133.99" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="276.5" y="181" width="0.4" height="15.0" fill="rgb(243,198,36)" rx="2" ry="2" />
<text  x="279.52" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.18%)</title><rect x="593.8" y="213" width="2.0" height="15.0" fill="rgb(225,220,51)" rx="2" ry="2" />
<text  x="596.76" y="223.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.07%)</title><rect x="600.4" y="261" width="0.8" height="15.0" fill="rgb(216,59,48)" rx="2" ry="2" />
<text  x="603.42" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="11.2" y="85" width="0.5" height="15.0" fill="rgb(252,45,40)" rx="2" ry="2" />
<text  x="14.25" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,262,626,180 samples, 28.82%)</title><rect x="602.5" y="181" width="340.1" height="15.0" fill="rgb(206,141,30)" rx="2" ry="2" />
<text  x="605.49" y="191.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>BibopHeap::BibopObjCache::markObjectUsed (10,101,010 samples, 0.04%)</title><rect x="130.6" y="213" width="0.4" height="15.0" fill="rgb(211,213,48)" rx="2" ry="2" />
<text  x="133.58" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,010,100,950 samples, 20.97%)</title><rect x="942.6" y="117" width="247.4" height="15.0" fill="rgb(243,131,48)" rx="2" ry="2" />
<text  x="945.61" y="127.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>BibopHeap::BibopFreeCache::getNext (50,505,050 samples, 0.18%)</title><rect x="98.1" y="181" width="2.1" height="15.0" fill="rgb(239,66,34)" rx="2" ry="2" />
<text  x="101.15" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="165" width="0.4" height="15.0" fill="rgb(243,219,32)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>xxmalloc (20,202,020 samples, 0.07%)</title><rect x="409.2" y="245" width="0.8" height="15.0" fill="rgb(240,226,21)" rx="2" ry="2" />
<text  x="412.15" y="255.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::getNext (10,101,010 samples, 0.04%)</title><rect x="59.5" y="197" width="0.4" height="15.0" fill="rgb(218,141,25)" rx="2" ry="2" />
<text  x="62.48" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,262,626,180 samples, 28.82%)</title><rect x="602.5" y="197" width="340.1" height="15.0" fill="rgb(243,199,52)" rx="2" ry="2" />
<text  x="605.49" y="207.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.18%)</title><rect x="593.8" y="197" width="2.0" height="15.0" fill="rgb(226,197,51)" rx="2" ry="2" />
<text  x="596.76" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,010,100,950 samples, 20.97%)</title><rect x="942.6" y="101" width="247.4" height="15.0" fill="rgb(254,95,10)" rx="2" ry="2" />
<text  x="945.61" y="111.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="153.0" y="229" width="0.4" height="15.0" fill="rgb(253,96,32)" rx="2" ry="2" />
<text  x="156.03" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.4" y="213" width="0.4" height="15.0" fill="rgb(222,140,33)" rx="2" ry="2" />
<text  x="13.42" y="223.5" ></text>
</g>
<g >
<title>xxmalloc (20,202,020 samples, 0.07%)</title><rect x="599.2" y="261" width="0.8" height="15.0" fill="rgb(217,219,11)" rx="2" ry="2" />
<text  x="602.17" y="271.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::malloc@plt (10,101,010 samples, 0.04%)</title><rect x="412.1" y="245" width="0.4" height="15.0" fill="rgb(219,8,32)" rx="2" ry="2" />
<text  x="415.06" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.11%)</title><rect x="594.6" y="101" width="1.2" height="15.0" fill="rgb(248,31,47)" rx="2" ry="2" />
<text  x="597.59" y="111.5" ></text>
</g>
<g >
<title>all (28,666,666,380 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(205,150,12)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.4" y="149" width="0.4" height="15.0" fill="rgb(236,48,54)" rx="2" ry="2" />
<text  x="13.42" y="159.5" ></text>
</g>
<g >
<title>_nl_find_locale (10,101,010 samples, 0.04%)</title><rect x="600.0" y="245" width="0.4" height="15.0" fill="rgb(241,152,21)" rx="2" ry="2" />
<text  x="603.00" y="255.5" ></text>
</g>
<g >
<title>padd (212,121,210 samples, 0.74%)</title><rect x="18.3" y="245" width="8.7" height="15.0" fill="rgb(215,205,22)" rx="2" ry="2" />
<text  x="21.32" y="255.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::malloc (2,080,808,060 samples, 7.26%)</title><rect x="422.0" y="229" width="85.7" height="15.0" fill="rgb(220,44,19)" rx="2" ry="2" />
<text  x="425.04" y="239.5" >BibopHeap:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,010,100,950 samples, 20.97%)</title><rect x="942.6" y="181" width="247.4" height="15.0" fill="rgb(251,198,19)" rx="2" ry="2" />
<text  x="945.61" y="191.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[cfrac] (60,606,060 samples, 0.21%)</title><rect x="11.7" y="261" width="2.5" height="15.0" fill="rgb(243,35,39)" rx="2" ry="2" />
<text  x="14.66" y="271.5" ></text>
</g>
<g >
<title>__tls_get_addr (10,101,010 samples, 0.04%)</title><rect x="484.8" y="197" width="0.4" height="15.0" fill="rgb(240,123,54)" rx="2" ry="2" />
<text  x="487.83" y="207.5" ></text>
</g>
<g >
<title>__tls_get_addr (10,101,010 samples, 0.04%)</title><rect x="100.2" y="181" width="0.4" height="15.0" fill="rgb(252,228,20)" rx="2" ry="2" />
<text  x="103.23" y="191.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (10,101,010 samples, 0.04%)</title><rect x="601.2" y="245" width="0.5" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="604.25" y="255.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::getRandomObject (1,222,222,210 samples, 4.26%)</title><rect x="59.9" y="197" width="50.3" height="15.0" fill="rgb(223,149,16)" rx="2" ry="2" />
<text  x="62.89" y="207.5" >Bibop..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="551.8" y="229" width="0.4" height="15.0" fill="rgb(217,7,22)" rx="2" ry="2" />
<text  x="554.77" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,262,626,180 samples, 28.82%)</title><rect x="602.5" y="213" width="340.1" height="15.0" fill="rgb(235,101,9)" rx="2" ry="2" />
<text  x="605.49" y="223.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>__tls_get_addr@plt (10,101,010 samples, 0.04%)</title><rect x="100.6" y="181" width="0.5" height="15.0" fill="rgb(234,88,9)" rx="2" ry="2" />
<text  x="103.64" y="191.5" ></text>
</g>
<g >
<title>setlocale (10,101,010 samples, 0.04%)</title><rect x="600.0" y="261" width="0.4" height="15.0" fill="rgb(248,20,3)" rx="2" ry="2" />
<text  x="603.00" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="229" width="0.4" height="15.0" fill="rgb(245,148,37)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.14%)</title><rect x="594.2" y="165" width="1.6" height="15.0" fill="rgb(211,11,15)" rx="2" ry="2" />
<text  x="597.18" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,010,100,950 samples, 20.97%)</title><rect x="942.6" y="133" width="247.4" height="15.0" fill="rgb(221,211,51)" rx="2" ry="2" />
<text  x="945.61" y="143.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.07%)</title><rect x="595.0" y="53" width="0.8" height="15.0" fill="rgb(218,46,27)" rx="2" ry="2" />
<text  x="598.01" y="63.5" ></text>
</g>
<g >
<title>pfree (1,141,414,130 samples, 3.98%)</title><rect x="552.2" y="261" width="47.0" height="15.0" fill="rgb(241,183,17)" rx="2" ry="2" />
<text  x="555.18" y="271.5" >pfree</text>
</g>
<g >
<title>bench.sh (20,202,020 samples, 0.07%)</title><rect x="10.0" y="277" width="0.8" height="15.0" fill="rgb(252,103,37)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::markObjectUsed@plt (20,202,020 samples, 0.07%)</title><rect x="507.7" y="229" width="0.8" height="15.0" fill="rgb(245,55,11)" rx="2" ry="2" />
<text  x="510.70" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="153.0" y="165" width="0.4" height="15.0" fill="rgb(231,190,26)" rx="2" ry="2" />
<text  x="156.03" y="175.5" ></text>
</g>
<g >
<title>[python3.8] (10,101,010 samples, 0.04%)</title><rect x="600.4" y="245" width="0.4" height="15.0" fill="rgb(222,9,28)" rx="2" ry="2" />
<text  x="603.42" y="255.5" ></text>
</g>
<g >
<title>cfrac (14,313,131,170 samples, 49.93%)</title><rect x="10.8" y="277" width="589.2" height="15.0" fill="rgb(212,142,5)" rx="2" ry="2" />
<text  x="13.83" y="287.5" >cfrac</text>
</g>
<g >
<title>palloc (2,565,656,540 samples, 8.95%)</title><rect x="27.0" y="245" width="105.7" height="15.0" fill="rgb(250,56,26)" rx="2" ry="2" />
<text  x="30.05" y="255.5" >palloc</text>
</g>
<g >
<title>__open64_nocancel (10,101,010 samples, 0.04%)</title><rect x="600.0" y="229" width="0.4" height="15.0" fill="rgb(240,192,33)" rx="2" ry="2" />
<text  x="603.00" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="153.0" y="197" width="0.4" height="15.0" fill="rgb(225,84,46)" rx="2" ry="2" />
<text  x="156.03" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.07%)</title><rect x="10.8" y="165" width="0.9" height="15.0" fill="rgb(249,71,40)" rx="2" ry="2" />
<text  x="13.83" y="175.5" ></text>
</g>
<g >
<title>pfactorQ (363,636,360 samples, 1.27%)</title><rect x="170.1" y="245" width="14.9" height="15.0" fill="rgb(208,15,54)" rx="2" ry="2" />
<text  x="173.08" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="11.2" y="69" width="0.5" height="15.0" fill="rgb(216,193,27)" rx="2" ry="2" />
<text  x="14.25" y="79.5" ></text>
</g>
<g >
<title>xxfree (80,808,080 samples, 0.28%)</title><rect x="595.8" y="245" width="3.4" height="15.0" fill="rgb(250,179,42)" rx="2" ry="2" />
<text  x="598.84" y="255.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::markObjectUsed (373,737,370 samples, 1.30%)</title><rect x="491.5" y="213" width="15.4" height="15.0" fill="rgb(208,48,13)" rx="2" ry="2" />
<text  x="494.48" y="223.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::malloc (1,969,696,950 samples, 6.87%)</title><rect x="49.5" y="213" width="81.1" height="15.0" fill="rgb(238,169,39)" rx="2" ry="2" />
<text  x="52.50" y="223.5" >BibopHeap..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="153.0" y="149" width="0.4" height="15.0" fill="rgb(220,91,21)" rx="2" ry="2" />
<text  x="156.03" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="601.7" y="181" width="0.4" height="15.0" fill="rgb(219,32,48)" rx="2" ry="2" />
<text  x="604.66" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,262,626,180 samples, 28.82%)</title><rect x="602.5" y="245" width="340.1" height="15.0" fill="rgb(245,195,11)" rx="2" ry="2" />
<text  x="605.49" y="255.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>BibopHeap::BibopFreeCache::add (181,818,180 samples, 0.63%)</title><rect x="588.4" y="229" width="7.4" height="15.0" fill="rgb(234,76,27)" rx="2" ry="2" />
<text  x="591.36" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.07%)</title><rect x="10.8" y="229" width="0.9" height="15.0" fill="rgb(246,164,5)" rx="2" ry="2" />
<text  x="13.83" y="239.5" ></text>
</g>
<g >
<title>[cfrac] (50,505,050 samples, 0.18%)</title><rect x="15.0" y="245" width="2.1" height="15.0" fill="rgb(239,180,26)" rx="2" ry="2" />
<text  x="17.99" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,010,100,950 samples, 20.97%)</title><rect x="942.6" y="165" width="247.4" height="15.0" fill="rgb(207,211,36)" rx="2" ry="2" />
<text  x="945.61" y="175.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>pcmp (313,131,310 samples, 1.09%)</title><rect x="140.6" y="245" width="12.8" height="15.0" fill="rgb(245,153,11)" rx="2" ry="2" />
<text  x="143.56" y="255.5" ></text>
</g>
<g >
<title>pcfrac (191,919,190 samples, 0.67%)</title><rect x="132.7" y="245" width="7.9" height="15.0" fill="rgb(225,220,46)" rx="2" ry="2" />
<text  x="135.66" y="255.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::malloc@plt (30,303,030 samples, 0.11%)</title><rect x="31.2" y="229" width="1.3" height="15.0" fill="rgb(252,76,20)" rx="2" ry="2" />
<text  x="34.21" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="595.4" y="37" width="0.4" height="15.0" fill="rgb(248,118,43)" rx="2" ry="2" />
<text  x="598.43" y="47.5" ></text>
</g>
<g >
<title>BibopHeap::BibopFreeCache::add (191,919,190 samples, 0.67%)</title><rect x="269.0" y="213" width="7.9" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="272.03" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.4" y="181" width="0.4" height="15.0" fill="rgb(245,226,16)" rx="2" ry="2" />
<text  x="13.42" y="191.5" ></text>
</g>
<g >
<title>xxfree (272,727,270 samples, 0.95%)</title><rect x="276.9" y="229" width="11.3" height="15.0" fill="rgb(217,92,48)" rx="2" ry="2" />
<text  x="279.93" y="239.5" ></text>
</g>
<g >
<title>combineSoln.constprop.0 (10,101,010 samples, 0.04%)</title><rect x="410.0" y="261" width="0.4" height="15.0" fill="rgb(251,188,51)" rx="2" ry="2" />
<text  x="412.99" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.07%)</title><rect x="10.8" y="245" width="0.9" height="15.0" fill="rgb(210,94,34)" rx="2" ry="2" />
<text  x="13.83" y="255.5" ></text>
</g>
<g >
<title>pdivmod (383,838,380 samples, 1.34%)</title><rect x="154.3" y="245" width="15.8" height="15.0" fill="rgb(206,99,29)" rx="2" ry="2" />
<text  x="157.28" y="255.5" ></text>
</g>
<g >
<title>pfree (2,505,050,480 samples, 8.74%)</title><rect x="185.0" y="245" width="103.2" height="15.0" fill="rgb(240,162,2)" rx="2" ry="2" />
<text  x="188.05" y="255.5" >pfree</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="551.8" y="117" width="0.4" height="15.0" fill="rgb(211,173,15)" rx="2" ry="2" />
<text  x="554.77" y="127.5" ></text>
</g>
<g >
<title>pidiv (292,929,290 samples, 1.02%)</title><rect x="288.2" y="245" width="12.0" height="15.0" fill="rgb(230,65,25)" rx="2" ry="2" />
<text  x="291.16" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="551.8" y="165" width="0.4" height="15.0" fill="rgb(247,11,47)" rx="2" ry="2" />
<text  x="554.77" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="11.2" y="101" width="0.5" height="15.0" fill="rgb(227,80,4)" rx="2" ry="2" />
<text  x="14.25" y="111.5" ></text>
</g>
<g >
<title>pmul (222,222,220 samples, 0.78%)</title><rect x="388.8" y="245" width="9.1" height="15.0" fill="rgb(219,110,14)" rx="2" ry="2" />
<text  x="391.78" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,010,100,950 samples, 20.97%)</title><rect x="942.6" y="149" width="247.4" height="15.0" fill="rgb(211,126,33)" rx="2" ry="2" />
<text  x="945.61" y="159.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="133" width="0.4" height="15.0" fill="rgb(233,141,4)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.4" y="133" width="0.4" height="15.0" fill="rgb(223,52,0)" rx="2" ry="2" />
<text  x="13.42" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.07%)</title><rect x="10.8" y="197" width="0.9" height="15.0" fill="rgb(252,192,41)" rx="2" ry="2" />
<text  x="13.83" y="207.5" ></text>
</g>
<g >
<title>palloc (2,383,838,360 samples, 8.32%)</title><rect x="410.4" y="261" width="98.1" height="15.0" fill="rgb(211,197,0)" rx="2" ry="2" />
<text  x="413.40" y="271.5" >palloc</text>
</g>
<g >
<title>discard_unwind_frame (10,101,010 samples, 0.04%)</title><rect x="10.4" y="261" width="0.4" height="15.0" fill="rgb(248,168,19)" rx="2" ry="2" />
<text  x="13.42" y="271.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.04%)</title><rect x="600.8" y="245" width="0.4" height="15.0" fill="rgb(226,88,23)" rx="2" ry="2" />
<text  x="603.83" y="255.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::getRandomObject@plt (20,202,020 samples, 0.07%)</title><rect x="421.2" y="229" width="0.8" height="15.0" fill="rgb(229,50,54)" rx="2" ry="2" />
<text  x="424.21" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="551.8" y="197" width="0.4" height="15.0" fill="rgb(225,146,48)" rx="2" ry="2" />
<text  x="554.77" y="207.5" ></text>
</g>
<g >
<title>[unknown] (6,010,100,950 samples, 20.97%)</title><rect x="942.6" y="245" width="247.4" height="15.0" fill="rgb(206,172,53)" rx="2" ry="2" />
<text  x="945.61" y="255.5" >[unknown]</text>
</g>
<g >
<title>BibopHeap::BibopFreeCache::add@plt (40,404,040 samples, 0.14%)</title><rect x="189.6" y="229" width="1.7" height="15.0" fill="rgb(207,108,5)" rx="2" ry="2" />
<text  x="192.62" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="276.5" y="197" width="0.4" height="15.0" fill="rgb(249,137,32)" rx="2" ry="2" />
<text  x="279.52" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="551.8" y="181" width="0.4" height="15.0" fill="rgb(242,88,27)" rx="2" ry="2" />
<text  x="554.77" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="213" width="0.4" height="15.0" fill="rgb(210,125,49)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="153.0" y="181" width="0.4" height="15.0" fill="rgb(221,7,17)" rx="2" ry="2" />
<text  x="156.03" y="191.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::getRandomObject (1,424,242,410 samples, 4.97%)</title><rect x="432.9" y="213" width="58.6" height="15.0" fill="rgb(254,122,14)" rx="2" ry="2" />
<text  x="435.85" y="223.5" >BibopH..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.4" y="165" width="0.4" height="15.0" fill="rgb(250,110,48)" rx="2" ry="2" />
<text  x="13.42" y="175.5" ></text>
</g>
<g >
<title>pcmpz (20,202,020 samples, 0.07%)</title><rect x="153.4" y="245" width="0.9" height="15.0" fill="rgb(224,125,9)" rx="2" ry="2" />
<text  x="156.45" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="551.8" y="133" width="0.4" height="15.0" fill="rgb(205,214,27)" rx="2" ry="2" />
<text  x="554.77" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.07%)</title><rect x="10.8" y="149" width="0.9" height="15.0" fill="rgb(226,227,13)" rx="2" ry="2" />
<text  x="13.83" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="551.8" y="213" width="0.4" height="15.0" fill="rgb(248,112,54)" rx="2" ry="2" />
<text  x="554.77" y="223.5" ></text>
</g>
<g >
<title>__open64 (10,101,010 samples, 0.04%)</title><rect x="601.7" y="245" width="0.4" height="15.0" fill="rgb(238,190,37)" rx="2" ry="2" />
<text  x="604.66" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="601.7" y="85" width="0.4" height="15.0" fill="rgb(236,207,30)" rx="2" ry="2" />
<text  x="604.66" y="95.5" ></text>
</g>
<g >
<title>BibopHeap::freeSmallObject (1,030,303,020 samples, 3.59%)</title><rect x="553.4" y="245" width="42.4" height="15.0" fill="rgb(252,16,54)" rx="2" ry="2" />
<text  x="556.43" y="255.5" >Bib..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.11%)</title><rect x="594.6" y="133" width="1.2" height="15.0" fill="rgb(212,191,37)" rx="2" ry="2" />
<text  x="597.59" y="143.5" ></text>
</g>
<g >
<title>rand_sse (222,222,220 samples, 0.78%)</title><rect x="101.1" y="181" width="9.1" height="15.0" fill="rgb(236,67,13)" rx="2" ry="2" />
<text  x="104.06" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.07%)</title><rect x="10.8" y="117" width="0.9" height="15.0" fill="rgb(234,146,18)" rx="2" ry="2" />
<text  x="13.83" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="153.0" y="133" width="0.4" height="15.0" fill="rgb(230,18,7)" rx="2" ry="2" />
<text  x="156.03" y="143.5" ></text>
</g>
<g >
<title>[unknown] (6,010,100,950 samples, 20.97%)</title><rect x="942.6" y="213" width="247.4" height="15.0" fill="rgb(249,126,12)" rx="2" ry="2" />
<text  x="945.61" y="223.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="153.0" y="213" width="0.4" height="15.0" fill="rgb(227,195,17)" rx="2" ry="2" />
<text  x="156.03" y="223.5" ></text>
</g>
<g >
<title>[unknown] (6,010,100,950 samples, 20.97%)</title><rect x="942.6" y="229" width="247.4" height="15.0" fill="rgb(212,81,47)" rx="2" ry="2" />
<text  x="945.61" y="239.5" >[unknown]</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (30,303,030 samples, 0.11%)</title><rect x="17.1" y="245" width="1.2" height="15.0" fill="rgb(218,85,11)" rx="2" ry="2" />
<text  x="20.07" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="551.8" y="245" width="0.4" height="15.0" fill="rgb(226,95,48)" rx="2" ry="2" />
<text  x="554.77" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.07%)</title><rect x="10.8" y="133" width="0.9" height="15.0" fill="rgb(222,221,22)" rx="2" ry="2" />
<text  x="13.83" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.07%)</title><rect x="10.8" y="213" width="0.9" height="15.0" fill="rgb(211,1,22)" rx="2" ry="2" />
<text  x="13.83" y="223.5" ></text>
</g>
<g >
<title>BibopHeap::BibopFreeCache::getNext (10,101,010 samples, 0.04%)</title><rect x="432.4" y="213" width="0.5" height="15.0" fill="rgb(223,50,42)" rx="2" ry="2" />
<text  x="435.44" y="223.5" ></text>
</g>
<g >
<title>[unknown] (9,616,161,520 samples, 33.54%)</title><rect x="14.2" y="261" width="395.8" height="15.0" fill="rgb(229,210,42)" rx="2" ry="2" />
<text  x="17.16" y="271.5" >[unknown]</text>
</g>
<g >
<title>xxmalloc (2,434,343,410 samples, 8.49%)</title><rect x="32.5" y="229" width="100.2" height="15.0" fill="rgb(209,120,48)" rx="2" ry="2" />
<text  x="35.45" y="239.5" >xxmalloc</text>
</g>
<g >
<title>rand_sse (111,111,110 samples, 0.39%)</title><rect x="486.9" y="197" width="4.6" height="15.0" fill="rgb(242,155,39)" rx="2" ry="2" />
<text  x="489.91" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.4" y="197" width="0.4" height="15.0" fill="rgb(223,72,2)" rx="2" ry="2" />
<text  x="13.42" y="207.5" ></text>
</g>
<g >
<title>podd (10,101,010 samples, 0.04%)</title><rect x="397.9" y="245" width="0.4" height="15.0" fill="rgb(249,199,3)" rx="2" ry="2" />
<text  x="400.93" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.4" y="229" width="0.4" height="15.0" fill="rgb(216,103,49)" rx="2" ry="2" />
<text  x="13.42" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="149" width="0.4" height="15.0" fill="rgb(211,65,7)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>BibopHeap::BibopFreeCache::getNext (10,101,010 samples, 0.04%)</title><rect x="59.1" y="197" width="0.4" height="15.0" fill="rgb(210,195,27)" rx="2" ry="2" />
<text  x="62.06" y="207.5" ></text>
</g>
<g >
<title>BibopHeap::BibopFreeCache::add@plt (10,101,010 samples, 0.04%)</title><rect x="553.0" y="245" width="0.4" height="15.0" fill="rgb(234,23,27)" rx="2" ry="2" />
<text  x="556.02" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.4" y="117" width="0.4" height="15.0" fill="rgb(205,169,38)" rx="2" ry="2" />
<text  x="13.42" y="127.5" ></text>
</g>
<g >
<title>xxfree (20,202,020 samples, 0.07%)</title><rect x="408.3" y="245" width="0.9" height="15.0" fill="rgb(244,67,50)" rx="2" ry="2" />
<text  x="411.32" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="117" width="0.4" height="15.0" fill="rgb(233,23,24)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::markObjectUsed (454,545,450 samples, 1.59%)</title><rect x="110.2" y="197" width="18.7" height="15.0" fill="rgb(218,212,50)" rx="2" ry="2" />
<text  x="113.20" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="601.7" y="197" width="0.4" height="15.0" fill="rgb(222,161,47)" rx="2" ry="2" />
<text  x="604.66" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="197" width="0.4" height="15.0" fill="rgb(230,153,8)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>BibopHeap::freeSmallObject (2,080,808,060 samples, 7.26%)</title><rect x="191.3" y="229" width="85.6" height="15.0" fill="rgb(253,135,42)" rx="2" ry="2" />
<text  x="194.28" y="239.5" >BibopHeap:..</text>
</g>
<g >
<title>pimod (2,151,515,130 samples, 7.51%)</title><rect x="300.2" y="245" width="88.6" height="15.0" fill="rgb(240,56,21)" rx="2" ry="2" />
<text  x="303.22" y="255.5" >pimod</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="261" width="0.4" height="15.0" fill="rgb(225,68,23)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>python3 (20,202,020 samples, 0.07%)</title><rect x="600.4" y="277" width="0.8" height="15.0" fill="rgb(253,46,45)" rx="2" ry="2" />
<text  x="603.42" y="287.5" ></text>
</g>
<g >
<title>psub (242,424,240 samples, 0.85%)</title><rect x="398.3" y="245" width="10.0" height="15.0" fill="rgb(230,68,12)" rx="2" ry="2" />
<text  x="401.34" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="601.7" y="165" width="0.4" height="15.0" fill="rgb(209,125,3)" rx="2" ry="2" />
<text  x="604.66" y="175.5" ></text>
</g>
<g >
<title>swapper (14,272,727,130 samples, 49.79%)</title><rect x="602.5" y="277" width="587.5" height="15.0" fill="rgb(223,46,51)" rx="2" ry="2" />
<text  x="605.49" y="287.5" >swapper</text>
</g>
<g >
<title>[python3.8] (10,101,010 samples, 0.04%)</title><rect x="600.8" y="229" width="0.4" height="15.0" fill="rgb(243,171,43)" rx="2" ry="2" />
<text  x="603.83" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.11%)</title><rect x="594.6" y="85" width="1.2" height="15.0" fill="rgb(221,168,36)" rx="2" ry="2" />
<text  x="597.59" y="95.5" ></text>
</g>
<g >
<title>BibopHeap::BibopFreeCache::getNext (40,404,040 samples, 0.14%)</title><rect x="483.2" y="197" width="1.6" height="15.0" fill="rgb(230,17,4)" rx="2" ry="2" />
<text  x="486.16" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="601.7" y="229" width="0.4" height="15.0" fill="rgb(210,74,20)" rx="2" ry="2" />
<text  x="604.66" y="239.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.07%)</title><rect x="601.2" y="261" width="0.9" height="15.0" fill="rgb(229,74,13)" rx="2" ry="2" />
<text  x="604.25" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.07%)</title><rect x="10.8" y="181" width="0.9" height="15.0" fill="rgb(212,29,48)" rx="2" ry="2" />
<text  x="13.83" y="191.5" ></text>
</g>
<g >
<title>BibopHeap::freeSmallObject (20,202,020 samples, 0.07%)</title><rect x="14.2" y="245" width="0.8" height="15.0" fill="rgb(235,21,50)" rx="2" ry="2" />
<text  x="17.16" y="255.5" ></text>
</g>
<g >
<title>rand_sse@plt (40,404,040 samples, 0.14%)</title><rect x="128.9" y="197" width="1.7" height="15.0" fill="rgb(215,77,31)" rx="2" ry="2" />
<text  x="131.91" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,272,727,130 samples, 49.79%)</title><rect x="602.5" y="261" width="587.5" height="15.0" fill="rgb(227,209,5)" rx="2" ry="2" />
<text  x="605.49" y="271.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[unknown] (6,010,100,950 samples, 20.97%)</title><rect x="942.6" y="197" width="247.4" height="15.0" fill="rgb(221,120,26)" rx="2" ry="2" />
<text  x="945.61" y="207.5" >[unknown]</text>
</g>
<g >
<title>__tls_get_addr@plt (40,404,040 samples, 0.14%)</title><rect x="485.2" y="197" width="1.7" height="15.0" fill="rgb(244,34,1)" rx="2" ry="2" />
<text  x="488.24" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.07%)</title><rect x="10.8" y="261" width="0.9" height="15.0" fill="rgb(229,56,46)" rx="2" ry="2" />
<text  x="13.83" y="271.5" ></text>
</g>
<g >
<title>rand_sse@plt (20,202,020 samples, 0.07%)</title><rect x="506.9" y="213" width="0.8" height="15.0" fill="rgb(241,58,31)" rx="2" ry="2" />
<text  x="509.86" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="11.2" y="53" width="0.5" height="15.0" fill="rgb(246,10,18)" rx="2" ry="2" />
<text  x="14.25" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.07%)</title><rect x="595.0" y="69" width="0.8" height="15.0" fill="rgb(236,160,6)" rx="2" ry="2" />
<text  x="598.01" y="79.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::getRandomObject@plt (70,707,070 samples, 0.25%)</title><rect x="46.6" y="213" width="2.9" height="15.0" fill="rgb(223,67,54)" rx="2" ry="2" />
<text  x="49.59" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="181" width="0.4" height="15.0" fill="rgb(231,17,45)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>epoll_wait (10,101,010 samples, 0.04%)</title><rect x="602.1" y="261" width="0.4" height="15.0" fill="rgb(206,210,51)" rx="2" ry="2" />
<text  x="605.08" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="601.7" y="149" width="0.4" height="15.0" fill="rgb(234,132,28)" rx="2" ry="2" />
<text  x="604.66" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="551.8" y="149" width="0.4" height="15.0" fill="rgb(205,223,53)" rx="2" ry="2" />
<text  x="554.77" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="276.5" y="165" width="0.4" height="15.0" fill="rgb(224,178,2)" rx="2" ry="2" />
<text  x="279.52" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,262,626,180 samples, 28.82%)</title><rect x="602.5" y="229" width="340.1" height="15.0" fill="rgb(215,8,12)" rx="2" ry="2" />
<text  x="605.49" y="239.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="601.7" y="213" width="0.4" height="15.0" fill="rgb(205,30,5)" rx="2" ry="2" />
<text  x="604.66" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.4" y="245" width="0.4" height="15.0" fill="rgb(242,154,40)" rx="2" ry="2" />
<text  x="13.42" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.11%)</title><rect x="594.6" y="117" width="1.2" height="15.0" fill="rgb(210,50,51)" rx="2" ry="2" />
<text  x="597.59" y="127.5" ></text>
</g>
<g >
<title>redis-server (30,303,030 samples, 0.11%)</title><rect x="601.2" y="277" width="1.3" height="15.0" fill="rgb(214,172,17)" rx="2" ry="2" />
<text  x="604.25" y="287.5" ></text>
</g>
<g >
<title>xxmalloc (2,333,333,310 samples, 8.14%)</title><rect x="412.5" y="245" width="96.0" height="15.0" fill="rgb(240,178,37)" rx="2" ry="2" />
<text  x="415.48" y="255.5" >xxmalloc</text>
</g>
<g >
<title>dirname (10,101,010 samples, 0.04%)</title><rect x="600.0" y="277" width="0.4" height="15.0" fill="rgb(228,103,48)" rx="2" ry="2" />
<text  x="603.00" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.11%)</title><rect x="594.6" y="149" width="1.2" height="15.0" fill="rgb(252,54,33)" rx="2" ry="2" />
<text  x="597.59" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="601.7" y="133" width="0.4" height="15.0" fill="rgb(246,224,32)" rx="2" ry="2" />
<text  x="604.66" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,262,626,180 samples, 28.82%)</title><rect x="602.5" y="165" width="340.1" height="15.0" fill="rgb(244,30,14)" rx="2" ry="2" />
<text  x="605.49" y="175.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>pdivmod (1,060,606,050 samples, 3.70%)</title><rect x="508.5" y="261" width="43.7" height="15.0" fill="rgb(244,114,52)" rx="2" ry="2" />
<text  x="511.53" y="271.5" >pdiv..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="601.7" y="101" width="0.4" height="15.0" fill="rgb(215,44,53)" rx="2" ry="2" />
<text  x="604.66" y="111.5" ></text>
</g>
<g >
<title>[bash] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="245" width="0.4" height="15.0" fill="rgb(205,144,52)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
</g>
</svg>
