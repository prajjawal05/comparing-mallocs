<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>clock_nanosleep@@GLIBC_2.17 (626,262,620 samples, 1.95%)</title><rect x="64.2" y="245" width="23.1" height="15.0" fill="rgb(253,200,21)" rx="2" ry="2" />
<text  x="67.24" y="255.5" >c..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="181" width="0.4" height="15.0" fill="rgb(246,12,26)" rx="2" ry="2" />
<text  x="22.29" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="69" width="0.4" height="15.0" fill="rgb(206,215,49)" rx="2" ry="2" />
<text  x="13.74" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="181" width="0.4" height="15.0" fill="rgb(239,189,50)" rx="2" ry="2" />
<text  x="13.74" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="14.8" y="85" width="0.4" height="15.0" fill="rgb(207,17,8)" rx="2" ry="2" />
<text  x="17.83" y="95.5" ></text>
</g>
<g >
<title>swapper (29,959,595,660 samples, 93.39%)</title><rect x="88.0" y="261" width="1102.0" height="15.0" fill="rgb(254,135,38)" rx="2" ry="2" />
<text  x="91.02" y="271.5" >swapper</text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="59.8" y="197" width="2.2" height="15.0" fill="rgb(245,197,51)" rx="2" ry="2" />
<text  x="62.79" y="207.5" ></text>
</g>
<g >
<title>rptest (1,999,999,980 samples, 6.23%)</title><rect x="14.1" y="261" width="73.6" height="15.0" fill="rgb(235,96,9)" rx="2" ry="2" />
<text  x="17.09" y="271.5" >rptest</text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="59.8" y="101" width="2.2" height="15.0" fill="rgb(253,119,10)" rx="2" ry="2" />
<text  x="62.79" y="111.5" ></text>
</g>
<g >
<title>__socket (10,101,010 samples, 0.03%)</title><rect x="12.6" y="229" width="0.4" height="15.0" fill="rgb(231,45,7)" rx="2" ry="2" />
<text  x="15.60" y="239.5" ></text>
</g>
<g >
<title>__tls_get_addr (10,101,010 samples, 0.03%)</title><rect x="40.8" y="165" width="0.4" height="15.0" fill="rgb(207,95,11)" rx="2" ry="2" />
<text  x="43.84" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="149" width="0.4" height="15.0" fill="rgb(227,191,49)" rx="2" ry="2" />
<text  x="13.74" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="87.7" y="165" width="0.3" height="15.0" fill="rgb(205,42,19)" rx="2" ry="2" />
<text  x="90.65" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="149" width="0.3" height="15.0" fill="rgb(216,54,32)" rx="2" ry="2" />
<text  x="13.37" y="159.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (10,101,010 samples, 0.03%)</title><rect x="13.3" y="213" width="0.4" height="15.0" fill="rgb(241,209,33)" rx="2" ry="2" />
<text  x="16.34" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="197" width="0.3" height="15.0" fill="rgb(223,148,35)" rx="2" ry="2" />
<text  x="14.86" y="207.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (10,101,010 samples, 0.03%)</title><rect x="63.9" y="245" width="0.3" height="15.0" fill="rgb(224,215,21)" rx="2" ry="2" />
<text  x="66.87" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="165" width="0.4" height="15.0" fill="rgb(236,180,2)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>__open64_nocancel (10,101,010 samples, 0.03%)</title><rect x="10.4" y="213" width="0.3" height="15.0" fill="rgb(205,152,46)" rx="2" ry="2" />
<text  x="13.37" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (363,636,360 samples, 1.13%)</title><rect x="73.9" y="149" width="13.4" height="15.0" fill="rgb(233,118,37)" rx="2" ry="2" />
<text  x="76.90" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="133" width="0.4" height="15.0" fill="rgb(231,213,37)" rx="2" ry="2" />
<text  x="13.74" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="87.7" y="197" width="0.3" height="15.0" fill="rgb(210,143,30)" rx="2" ry="2" />
<text  x="90.65" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,949,494,800 samples, 46.60%)</title><rect x="88.0" y="197" width="549.9" height="15.0" fill="rgb(212,113,34)" rx="2" ry="2" />
<text  x="91.02" y="207.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>thread_sleep (10,101,010 samples, 0.03%)</title><rect x="87.3" y="245" width="0.4" height="15.0" fill="rgb(210,102,53)" rx="2" ry="2" />
<text  x="90.28" y="255.5" ></text>
</g>
<g >
<title>mmap64 (10,101,010 samples, 0.03%)</title><rect x="87.7" y="245" width="0.3" height="15.0" fill="rgb(246,111,13)" rx="2" ry="2" />
<text  x="90.65" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,010,100,860 samples, 46.79%)</title><rect x="637.9" y="165" width="552.1" height="15.0" fill="rgb(212,196,40)" rx="2" ry="2" />
<text  x="640.90" y="175.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,949,494,800 samples, 46.60%)</title><rect x="88.0" y="213" width="549.9" height="15.0" fill="rgb(205,16,1)" rx="2" ry="2" />
<text  x="91.02" y="223.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="149" width="0.4" height="15.0" fill="rgb(234,52,51)" rx="2" ry="2" />
<text  x="15.60" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="101" width="0.3" height="15.0" fill="rgb(249,64,53)" rx="2" ry="2" />
<text  x="13.37" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,939,393,790 samples, 46.57%)</title><rect x="88.4" y="149" width="549.5" height="15.0" fill="rgb(251,29,25)" rx="2" ry="2" />
<text  x="91.39" y="159.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[unknown] (30,303,030 samples, 0.09%)</title><rect x="13.0" y="245" width="1.1" height="15.0" fill="rgb(229,181,44)" rx="2" ry="2" />
<text  x="15.97" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="85" width="0.4" height="15.0" fill="rgb(235,34,15)" rx="2" ry="2" />
<text  x="22.29" y="95.5" ></text>
</g>
<g >
<title>_nl_find_locale (10,101,010 samples, 0.03%)</title><rect x="10.4" y="245" width="0.3" height="15.0" fill="rgb(235,205,31)" rx="2" ry="2" />
<text  x="13.37" y="255.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Overflow (90,909,090 samples, 0.28%)</title><rect x="39.4" y="197" width="3.3" height="15.0" fill="rgb(215,91,26)" rx="2" ry="2" />
<text  x="42.35" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="197" width="0.4" height="15.0" fill="rgb(240,110,32)" rx="2" ry="2" />
<text  x="13.74" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="14.8" y="133" width="0.4" height="15.0" fill="rgb(217,100,52)" rx="2" ry="2" />
<text  x="17.83" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,999,999,850 samples, 46.76%)</title><rect x="638.3" y="101" width="551.7" height="15.0" fill="rgb(207,119,35)" rx="2" ry="2" />
<text  x="641.27" y="111.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="133" width="0.4" height="15.0" fill="rgb(220,88,11)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>TcmallocSlab_Internal_PopBatch (20,202,020 samples, 0.06%)</title><rect x="40.5" y="181" width="0.7" height="15.0" fill="rgb(205,134,41)" rx="2" ry="2" />
<text  x="43.47" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,949,494,800 samples, 46.60%)</title><rect x="88.0" y="181" width="549.9" height="15.0" fill="rgb(220,179,12)" rx="2" ry="2" />
<text  x="91.02" y="191.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="165" width="0.4" height="15.0" fill="rgb(226,147,47)" rx="2" ry="2" />
<text  x="22.29" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,959,595,660 samples, 93.39%)</title><rect x="88.0" y="245" width="1102.0" height="15.0" fill="rgb(227,188,10)" rx="2" ry="2" />
<text  x="91.02" y="255.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="87.7" y="181" width="0.3" height="15.0" fill="rgb(234,60,39)" rx="2" ry="2" />
<text  x="90.65" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="14.8" y="117" width="0.4" height="15.0" fill="rgb(206,39,0)" rx="2" ry="2" />
<text  x="17.83" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="213" width="0.4" height="15.0" fill="rgb(226,43,33)" rx="2" ry="2" />
<text  x="15.60" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (404,040,400 samples, 1.26%)</title><rect x="72.4" y="181" width="14.9" height="15.0" fill="rgb(236,227,20)" rx="2" ry="2" />
<text  x="75.42" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="14.8" y="69" width="0.4" height="15.0" fill="rgb(232,3,3)" rx="2" ry="2" />
<text  x="17.83" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="87.7" y="133" width="0.3" height="15.0" fill="rgb(239,71,52)" rx="2" ry="2" />
<text  x="90.65" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="133" width="0.3" height="15.0" fill="rgb(216,222,46)" rx="2" ry="2" />
<text  x="13.37" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="149" width="0.4" height="15.0" fill="rgb(233,228,21)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="87.7" y="117" width="0.3" height="15.0" fill="rgb(244,50,46)" rx="2" ry="2" />
<text  x="90.65" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,949,494,800 samples, 46.60%)</title><rect x="88.0" y="229" width="549.9" height="15.0" fill="rgb(230,127,43)" rx="2" ry="2" />
<text  x="91.02" y="239.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="197" width="0.4" height="15.0" fill="rgb(218,73,9)" rx="2" ry="2" />
<text  x="22.29" y="207.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (424,242,420 samples, 1.32%)</title><rect x="46.4" y="229" width="15.6" height="15.0" fill="rgb(225,161,11)" rx="2" ry="2" />
<text  x="49.41" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="59.8" y="181" width="2.2" height="15.0" fill="rgb(223,216,10)" rx="2" ry="2" />
<text  x="62.79" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,939,393,790 samples, 46.57%)</title><rect x="88.4" y="165" width="549.5" height="15.0" fill="rgb(237,184,30)" rx="2" ry="2" />
<text  x="91.39" y="175.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="59.8" y="85" width="2.2" height="15.0" fill="rgb(223,50,6)" rx="2" ry="2" />
<text  x="62.79" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="14.8" y="197" width="0.4" height="15.0" fill="rgb(222,127,4)" rx="2" ry="2" />
<text  x="17.83" y="207.5" ></text>
</g>
<g >
<title>[unknown] (15,010,100,860 samples, 46.79%)</title><rect x="637.9" y="229" width="552.1" height="15.0" fill="rgb(218,92,54)" rx="2" ry="2" />
<text  x="640.90" y="239.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="61.3" y="53" width="0.7" height="15.0" fill="rgb(247,202,8)" rx="2" ry="2" />
<text  x="64.27" y="63.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (30,303,030 samples, 0.09%)</title><rect x="13.0" y="229" width="1.1" height="15.0" fill="rgb(206,117,14)" rx="2" ry="2" />
<text  x="15.97" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="213" width="0.4" height="15.0" fill="rgb(208,202,28)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (10,101,010 samples, 0.03%)</title><rect x="12.2" y="229" width="0.4" height="15.0" fill="rgb(244,156,4)" rx="2" ry="2" />
<text  x="15.23" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="101" width="0.4" height="15.0" fill="rgb(228,93,2)" rx="2" ry="2" />
<text  x="13.74" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,010,100,860 samples, 46.79%)</title><rect x="637.9" y="117" width="552.1" height="15.0" fill="rgb(227,224,26)" rx="2" ry="2" />
<text  x="640.90" y="127.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (494,949,490 samples, 1.54%)</title><rect x="69.1" y="213" width="18.2" height="15.0" fill="rgb(227,53,21)" rx="2" ry="2" />
<text  x="72.07" y="223.5" ></text>
</g>
<g >
<title>all (32,080,807,760 samples, 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(230,125,30)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (40,404,040 samples, 0.13%)</title><rect x="62.0" y="229" width="1.5" height="15.0" fill="rgb(252,196,42)" rx="2" ry="2" />
<text  x="65.02" y="239.5" ></text>
</g>
<g >
<title>benchmark_worker (1,060,606,050 samples, 3.31%)</title><rect x="24.9" y="245" width="39.0" height="15.0" fill="rgb(245,164,51)" rx="2" ry="2" />
<text  x="27.86" y="255.5" >ben..</text>
</g>
<g >
<title>__libc_start_main (20,202,020 samples, 0.06%)</title><rect x="11.1" y="245" width="0.8" height="15.0" fill="rgb(207,125,14)" rx="2" ry="2" />
<text  x="14.11" y="255.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugePageFiller&lt;tcmalloc::tcmalloc_internal::PageTracker&gt;::UpdateFillerStatsTracker (10,101,010 samples, 0.03%)</title><rect x="41.6" y="133" width="0.4" height="15.0" fill="rgb(213,164,48)" rx="2" ry="2" />
<text  x="44.58" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,010,100,860 samples, 46.79%)</title><rect x="637.9" y="133" width="552.1" height="15.0" fill="rgb(229,165,51)" rx="2" ry="2" />
<text  x="640.90" y="143.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="213" width="0.4" height="15.0" fill="rgb(207,78,44)" rx="2" ry="2" />
<text  x="22.29" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="133" width="0.4" height="15.0" fill="rgb(224,197,54)" rx="2" ry="2" />
<text  x="22.29" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="213" width="0.3" height="15.0" fill="rgb(244,133,5)" rx="2" ry="2" />
<text  x="14.86" y="223.5" ></text>
</g>
<g >
<title>[unknown] (15,010,100,860 samples, 46.79%)</title><rect x="637.9" y="197" width="552.1" height="15.0" fill="rgb(219,159,9)" rx="2" ry="2" />
<text  x="640.90" y="207.5" >[unknown]</text>
</g>
<g >
<title>python3 (20,202,020 samples, 0.06%)</title><rect x="12.2" y="261" width="0.8" height="15.0" fill="rgb(222,134,21)" rx="2" ry="2" />
<text  x="15.23" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="197" width="0.4" height="15.0" fill="rgb(210,76,47)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>[unknown] (15,010,100,860 samples, 46.79%)</title><rect x="637.9" y="181" width="552.1" height="15.0" fill="rgb(253,7,14)" rx="2" ry="2" />
<text  x="640.90" y="191.5" >[unknown]</text>
</g>
<g >
<title>bench.sh (10,101,010 samples, 0.03%)</title><rect x="10.0" y="261" width="0.4" height="15.0" fill="rgb(240,182,53)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="229" width="0.3" height="15.0" fill="rgb(240,41,43)" rx="2" ry="2" />
<text  x="14.86" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (282,828,280 samples, 0.88%)</title><rect x="76.9" y="101" width="10.4" height="15.0" fill="rgb(241,184,17)" rx="2" ry="2" />
<text  x="79.88" y="111.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (10,101,010 samples, 0.03%)</title><rect x="63.9" y="229" width="0.3" height="15.0" fill="rgb(225,224,30)" rx="2" ry="2" />
<text  x="66.87" y="239.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Allocate&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::MallocOomPolicy, tcmalloc::tcmalloc_internal::AlignAsPolicy, tcmalloc::tcmalloc_internal::AllocationAccessHotPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::NonSizeReturningPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (40,404,040 samples, 0.13%)</title><rect x="44.9" y="213" width="1.5" height="15.0" fill="rgb(217,137,23)" rx="2" ry="2" />
<text  x="47.92" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="165" width="0.3" height="15.0" fill="rgb(219,4,0)" rx="2" ry="2" />
<text  x="13.37" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (393,939,390 samples, 1.23%)</title><rect x="72.8" y="165" width="14.5" height="15.0" fill="rgb(238,156,53)" rx="2" ry="2" />
<text  x="75.79" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="197" width="0.3" height="15.0" fill="rgb(216,166,39)" rx="2" ry="2" />
<text  x="13.37" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="87.7" y="101" width="0.3" height="15.0" fill="rgb(208,64,2)" rx="2" ry="2" />
<text  x="90.65" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,010,100,860 samples, 46.79%)</title><rect x="637.9" y="149" width="552.1" height="15.0" fill="rgb(208,96,14)" rx="2" ry="2" />
<text  x="640.90" y="159.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Refill (20,202,020 samples, 0.06%)</title><rect x="36.0" y="197" width="0.8" height="15.0" fill="rgb(241,141,42)" rx="2" ry="2" />
<text  x="39.01" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="181" width="0.4" height="15.0" fill="rgb(231,136,43)" rx="2" ry="2" />
<text  x="15.60" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="14.8" y="101" width="0.4" height="15.0" fill="rgb(214,182,35)" rx="2" ry="2" />
<text  x="17.83" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="14.8" y="213" width="0.4" height="15.0" fill="rgb(239,200,20)" rx="2" ry="2" />
<text  x="17.83" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="165" width="0.4" height="15.0" fill="rgb(208,136,42)" rx="2" ry="2" />
<text  x="15.60" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="229" width="0.4" height="15.0" fill="rgb(244,47,26)" rx="2" ry="2" />
<text  x="22.29" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="181" width="0.4" height="15.0" fill="rgb(223,137,43)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="117" width="0.3" height="15.0" fill="rgb(230,57,5)" rx="2" ry="2" />
<text  x="13.37" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="59.8" y="165" width="2.2" height="15.0" fill="rgb(238,29,48)" rx="2" ry="2" />
<text  x="62.79" y="175.5" ></text>
</g>
<g >
<title>TCMallocInternalCalloc (131,313,130 samples, 0.41%)</title><rect x="31.9" y="229" width="4.9" height="15.0" fill="rgb(251,188,22)" rx="2" ry="2" />
<text  x="34.92" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (363,636,360 samples, 1.13%)</title><rect x="73.9" y="133" width="13.4" height="15.0" fill="rgb(222,222,51)" rx="2" ry="2" />
<text  x="76.90" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="197" width="0.4" height="15.0" fill="rgb(247,5,45)" rx="2" ry="2" />
<text  x="15.60" y="207.5" ></text>
</g>
<g >
<title>read (10,101,010 samples, 0.03%)</title><rect x="10.7" y="229" width="0.4" height="15.0" fill="rgb(206,101,34)" rx="2" ry="2" />
<text  x="13.74" y="239.5" ></text>
</g>
<g >
<title>__poll (20,202,020 samples, 0.06%)</title><rect x="11.1" y="229" width="0.8" height="15.0" fill="rgb(227,133,12)" rx="2" ry="2" />
<text  x="14.11" y="239.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.06%)</title><rect x="12.2" y="245" width="0.8" height="15.0" fill="rgb(226,6,2)" rx="2" ry="2" />
<text  x="15.23" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="181" width="0.3" height="15.0" fill="rgb(254,217,46)" rx="2" ry="2" />
<text  x="14.86" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,999,999,850 samples, 46.76%)</title><rect x="638.3" y="85" width="551.7" height="15.0" fill="rgb(233,75,41)" rx="2" ry="2" />
<text  x="641.27" y="95.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="87.7" y="149" width="0.3" height="15.0" fill="rgb(231,142,3)" rx="2" ry="2" />
<text  x="90.65" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="101" width="0.4" height="15.0" fill="rgb(252,49,16)" rx="2" ry="2" />
<text  x="22.29" y="111.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::central_freelist_internal::CentralFreeList&lt;tcmalloc::tcmalloc_internal::central_freelist_internal::StaticForwarder&gt;::RemoveRange (10,101,010 samples, 0.03%)</title><rect x="36.4" y="181" width="0.4" height="15.0" fill="rgb(233,222,6)" rx="2" ry="2" />
<text  x="39.38" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="87.7" y="213" width="0.3" height="15.0" fill="rgb(222,154,16)" rx="2" ry="2" />
<text  x="90.65" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="117" width="0.4" height="15.0" fill="rgb(248,31,39)" rx="2" ry="2" />
<text  x="13.74" y="127.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (20,202,020 samples, 0.06%)</title><rect x="15.9" y="245" width="0.8" height="15.0" fill="rgb(247,145,49)" rx="2" ry="2" />
<text  x="18.94" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="181" width="0.3" height="15.0" fill="rgb(208,38,49)" rx="2" ry="2" />
<text  x="13.37" y="191.5" ></text>
</g>
<g >
<title>[unknown] (15,010,100,860 samples, 46.79%)</title><rect x="637.9" y="213" width="552.1" height="15.0" fill="rgb(232,222,18)" rx="2" ry="2" />
<text  x="640.90" y="223.5" >[unknown]</text>
</g>
<g >
<title>__memset_avx2_erms (10,101,010 samples, 0.03%)</title><rect x="13.7" y="213" width="0.4" height="15.0" fill="rgb(251,68,36)" rx="2" ry="2" />
<text  x="16.72" y="223.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::central_freelist_internal::StaticForwarder::AllocateSpan (10,101,010 samples, 0.03%)</title><rect x="36.4" y="165" width="0.4" height="15.0" fill="rgb(239,212,38)" rx="2" ry="2" />
<text  x="39.38" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="14.8" y="165" width="0.4" height="15.0" fill="rgb(226,103,19)" rx="2" ry="2" />
<text  x="17.83" y="175.5" ></text>
</g>
<g >
<title>dirname (10,101,010 samples, 0.03%)</title><rect x="10.4" y="261" width="0.3" height="15.0" fill="rgb(241,109,53)" rx="2" ry="2" />
<text  x="13.37" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="59.8" y="149" width="2.2" height="15.0" fill="rgb(246,40,30)" rx="2" ry="2" />
<text  x="62.79" y="159.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (80,808,080 samples, 0.25%)</title><rect x="16.7" y="245" width="3.0" height="15.0" fill="rgb(211,129,37)" rx="2" ry="2" />
<text  x="19.69" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="59.8" y="133" width="2.2" height="15.0" fill="rgb(212,208,40)" rx="2" ry="2" />
<text  x="62.79" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (282,828,280 samples, 0.88%)</title><rect x="76.9" y="117" width="10.4" height="15.0" fill="rgb(252,65,14)" rx="2" ry="2" />
<text  x="79.88" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="87.7" y="229" width="0.3" height="15.0" fill="rgb(223,88,35)" rx="2" ry="2" />
<text  x="90.65" y="239.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::central_freelist_internal::StaticForwarder::DeallocateSpans (10,101,010 samples, 0.03%)</title><rect x="41.6" y="165" width="0.4" height="15.0" fill="rgb(237,21,34)" rx="2" ry="2" />
<text  x="44.58" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (494,949,490 samples, 1.54%)</title><rect x="69.1" y="229" width="18.2" height="15.0" fill="rgb(215,62,9)" rx="2" ry="2" />
<text  x="72.07" y="239.5" ></text>
</g>
<g >
<title>[unknown] (30,303,030 samples, 0.09%)</title><rect x="14.8" y="245" width="1.1" height="15.0" fill="rgb(248,10,32)" rx="2" ry="2" />
<text  x="17.83" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="69" width="0.4" height="15.0" fill="rgb(233,186,9)" rx="2" ry="2" />
<text  x="22.29" y="79.5" ></text>
</g>
<g >
<title>__clone (10,101,010 samples, 0.03%)</title><rect x="14.8" y="229" width="0.4" height="15.0" fill="rgb(243,39,11)" rx="2" ry="2" />
<text  x="17.83" y="239.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Allocate&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::MallocOomPolicy, tcmalloc::tcmalloc_internal::AlignAsPolicy, tcmalloc::tcmalloc_internal::AllocationAccessHotPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::NonSizeReturningPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (10,101,010 samples, 0.03%)</title><rect x="63.5" y="229" width="0.4" height="15.0" fill="rgb(209,189,36)" rx="2" ry="2" />
<text  x="66.50" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="117" width="0.4" height="15.0" fill="rgb(244,201,52)" rx="2" ry="2" />
<text  x="22.29" y="127.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (161,616,160 samples, 0.50%)</title><rect x="36.8" y="229" width="5.9" height="15.0" fill="rgb(224,68,13)" rx="2" ry="2" />
<text  x="39.75" y="239.5" ></text>
</g>
<g >
<title>__ctype_get_mb_cur_max (10,101,010 samples, 0.03%)</title><rect x="10.0" y="245" width="0.4" height="15.0" fill="rgb(249,100,1)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Refill (20,202,020 samples, 0.06%)</title><rect x="45.7" y="197" width="0.7" height="15.0" fill="rgb(205,41,37)" rx="2" ry="2" />
<text  x="48.67" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="59.8" y="213" width="2.2" height="15.0" fill="rgb(226,113,6)" rx="2" ry="2" />
<text  x="62.79" y="223.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Allocate&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::MallocOomPolicy, tcmalloc::tcmalloc_internal::MallocAlignPolicy, tcmalloc::tcmalloc_internal::AllocationAccessHotPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::NonSizeReturningPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (40,404,040 samples, 0.13%)</title><rect x="35.3" y="213" width="1.5" height="15.0" fill="rgb(238,70,30)" rx="2" ry="2" />
<text  x="38.26" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="14.8" y="37" width="0.4" height="15.0" fill="rgb(238,113,7)" rx="2" ry="2" />
<text  x="17.83" y="47.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (141,414,140 samples, 0.44%)</title><rect x="19.7" y="245" width="5.2" height="15.0" fill="rgb(219,98,10)" rx="2" ry="2" />
<text  x="22.66" y="255.5" ></text>
</g>
<g >
<title>redis-server (30,303,030 samples, 0.09%)</title><rect x="13.0" y="261" width="1.1" height="15.0" fill="rgb(208,96,53)" rx="2" ry="2" />
<text  x="15.97" y="271.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::TimeSeriesTracker&lt;tcmalloc::tcmalloc_internal::FillerStatsTracker&lt;600ul&gt;::FillerStatsEntry, tcmalloc::tcmalloc_internal::FillerStatsTracker&lt;600ul&gt;::FillerStats, 600ul&gt;::UpdateClock (10,101,010 samples, 0.03%)</title><rect x="41.6" y="117" width="0.4" height="15.0" fill="rgb(226,213,27)" rx="2" ry="2" />
<text  x="44.58" y="127.5" ></text>
</g>
<g >
<title>hv_kvp_daemon (30,303,030 samples, 0.09%)</title><rect x="10.7" y="261" width="1.2" height="15.0" fill="rgb(235,114,53)" rx="2" ry="2" />
<text  x="13.74" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="85" width="0.4" height="15.0" fill="rgb(244,162,16)" rx="2" ry="2" />
<text  x="13.74" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="149" width="0.4" height="15.0" fill="rgb(249,52,20)" rx="2" ry="2" />
<text  x="22.29" y="159.5" ></text>
</g>
<g >
<title>thread_fence (10,101,010 samples, 0.03%)</title><rect x="15.6" y="229" width="0.3" height="15.0" fill="rgb(205,59,25)" rx="2" ry="2" />
<text  x="18.57" y="239.5" ></text>
</g>
<g >
<title>TcmallocSlab_Internal_PushBatch (10,101,010 samples, 0.03%)</title><rect x="45.7" y="181" width="0.3" height="15.0" fill="rgb(228,77,50)" rx="2" ry="2" />
<text  x="48.67" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="245" width="0.3" height="15.0" fill="rgb(238,149,27)" rx="2" ry="2" />
<text  x="14.86" y="255.5" ></text>
</g>
<g >
<title>TCMallocInternalMemalign (101,010,100 samples, 0.31%)</title><rect x="42.7" y="229" width="3.7" height="15.0" fill="rgb(223,192,33)" rx="2" ry="2" />
<text  x="45.70" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="14.8" y="149" width="0.4" height="15.0" fill="rgb(244,106,51)" rx="2" ry="2" />
<text  x="17.83" y="159.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="245" width="0.4" height="15.0" fill="rgb(234,116,38)" rx="2" ry="2" />
<text  x="13.74" y="255.5" ></text>
</g>
<g >
<title>[rptest] (20,202,020 samples, 0.06%)</title><rect x="14.1" y="245" width="0.7" height="15.0" fill="rgb(216,31,45)" rx="2" ry="2" />
<text  x="17.09" y="255.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Deallocate (121,212,120 samples, 0.38%)</title><rect x="38.2" y="213" width="4.5" height="15.0" fill="rgb(217,55,10)" rx="2" ry="2" />
<text  x="41.24" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="61.3" y="69" width="0.7" height="15.0" fill="rgb(214,99,47)" rx="2" ry="2" />
<text  x="64.27" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="14.8" y="53" width="0.4" height="15.0" fill="rgb(227,8,46)" rx="2" ry="2" />
<text  x="17.83" y="63.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::huge_page_allocator_internal::HugePageAwareAllocator&lt;tcmalloc::tcmalloc_internal::huge_page_allocator_internal::StaticForwarder&gt;::New (10,101,010 samples, 0.03%)</title><rect x="36.4" y="149" width="0.4" height="15.0" fill="rgb(242,104,51)" rx="2" ry="2" />
<text  x="39.38" y="159.5" ></text>
</g>
<g >
<title>__gconv_load_conf (10,101,010 samples, 0.03%)</title><rect x="10.4" y="229" width="0.3" height="15.0" fill="rgb(223,65,38)" rx="2" ry="2" />
<text  x="13.37" y="239.5" ></text>
</g>
<g >
<title>sed (10,101,010 samples, 0.03%)</title><rect x="87.7" y="261" width="0.3" height="15.0" fill="rgb(213,58,9)" rx="2" ry="2" />
<text  x="90.65" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="87.7" y="85" width="0.3" height="15.0" fill="rgb(253,62,54)" rx="2" ry="2" />
<text  x="90.65" y="95.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::huge_page_allocator_internal::HugePageAwareAllocator&lt;tcmalloc::tcmalloc_internal::huge_page_allocator_internal::StaticForwarder&gt;::Delete (10,101,010 samples, 0.03%)</title><rect x="41.6" y="149" width="0.4" height="15.0" fill="rgb(249,25,42)" rx="2" ry="2" />
<text  x="44.58" y="159.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (10,101,010 samples, 0.03%)</title><rect x="15.2" y="229" width="0.4" height="15.0" fill="rgb(254,138,24)" rx="2" ry="2" />
<text  x="18.20" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="213" width="0.4" height="15.0" fill="rgb(236,216,25)" rx="2" ry="2" />
<text  x="13.74" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="14.8" y="181" width="0.4" height="15.0" fill="rgb(230,49,33)" rx="2" ry="2" />
<text  x="17.83" y="191.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::UpdateCapacity (10,101,010 samples, 0.03%)</title><rect x="46.0" y="181" width="0.4" height="15.0" fill="rgb(249,143,49)" rx="2" ry="2" />
<text  x="49.04" y="191.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::UpdateCapacity (20,202,020 samples, 0.06%)</title><rect x="42.0" y="181" width="0.7" height="15.0" fill="rgb(241,107,39)" rx="2" ry="2" />
<text  x="44.95" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="165" width="0.3" height="15.0" fill="rgb(215,132,10)" rx="2" ry="2" />
<text  x="14.86" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (494,949,490 samples, 1.54%)</title><rect x="69.1" y="197" width="18.2" height="15.0" fill="rgb(208,128,53)" rx="2" ry="2" />
<text  x="72.07" y="207.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::central_freelist_internal::CentralFreeList&lt;tcmalloc::tcmalloc_internal::central_freelist_internal::StaticForwarder&gt;::InsertRange (20,202,020 samples, 0.06%)</title><rect x="41.2" y="181" width="0.8" height="15.0" fill="rgb(234,37,19)" rx="2" ry="2" />
<text  x="44.21" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="53" width="0.4" height="15.0" fill="rgb(229,86,7)" rx="2" ry="2" />
<text  x="13.74" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="165" width="0.4" height="15.0" fill="rgb(223,205,12)" rx="2" ry="2" />
<text  x="13.74" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="229" width="0.4" height="15.0" fill="rgb(222,113,9)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="59.8" y="117" width="2.2" height="15.0" fill="rgb(216,119,28)" rx="2" ry="2" />
<text  x="62.79" y="127.5" ></text>
</g>
<g >
<title>kworker/0:2-eve (10,101,010 samples, 0.03%)</title><rect x="11.9" y="261" width="0.3" height="15.0" fill="rgb(251,162,51)" rx="2" ry="2" />
<text  x="14.86" y="271.5" ></text>
</g>
</g>
</svg>
