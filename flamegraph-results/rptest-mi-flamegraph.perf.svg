<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="502.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="485" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="485" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.4" y="357" width="0.3" height="15.0" fill="rgb(209,54,6)" rx="2" ry="2" />
<text  x="39.36" y="367.5" ></text>
</g>
<g >
<title>thread_sleep (10,101,010 samples, 0.03%)</title><rect x="93.2" y="421" width="0.3" height="15.0" fill="rgb(248,108,47)" rx="2" ry="2" />
<text  x="96.17" y="431.5" ></text>
</g>
<g >
<title>_mi_free_block_mt (30,303,030 samples, 0.09%)</title><rect x="38.2" y="405" width="1.1" height="15.0" fill="rgb(207,62,42)" rx="2" ry="2" />
<text  x="41.22" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="357" width="0.4" height="15.0" fill="rgb(207,218,5)" rx="2" ry="2" />
<text  x="14.49" y="367.5" ></text>
</g>
<g >
<title>_dl_map_object (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="421" width="0.4" height="15.0" fill="rgb(240,19,33)" rx="2" ry="2" />
<text  x="1192.63" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="93.5" y="389" width="0.4" height="15.0" fill="rgb(229,12,0)" rx="2" ry="2" />
<text  x="96.54" y="399.5" ></text>
</g>
<g >
<title>__madvise (131,313,130 samples, 0.41%)</title><rect x="46.8" y="421" width="4.8" height="15.0" fill="rgb(240,194,44)" rx="2" ry="2" />
<text  x="49.76" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="50.8" y="85" width="0.8" height="15.0" fill="rgb(220,26,38)" rx="2" ry="2" />
<text  x="53.84" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="49.4" y="245" width="2.2" height="15.0" fill="rgb(233,172,13)" rx="2" ry="2" />
<text  x="52.36" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,757,575,610 samples, 45.97%)</title><rect x="93.9" y="389" width="542.5" height="15.0" fill="rgb(208,24,44)" rx="2" ry="2" />
<text  x="96.91" y="399.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>_mi_page_unfull (30,303,030 samples, 0.09%)</title><rect x="39.7" y="405" width="1.1" height="15.0" fill="rgb(208,186,28)" rx="2" ry="2" />
<text  x="42.70" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.35%)</title><rect x="47.5" y="277" width="4.1" height="15.0" fill="rgb(245,136,48)" rx="2" ry="2" />
<text  x="50.50" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.4" y="341" width="0.3" height="15.0" fill="rgb(216,200,13)" rx="2" ry="2" />
<text  x="39.36" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.1" y="405" width="0.3" height="15.0" fill="rgb(233,25,50)" rx="2" ry="2" />
<text  x="56.07" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.4" y="277" width="0.3" height="15.0" fill="rgb(223,36,45)" rx="2" ry="2" />
<text  x="39.36" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.4" y="293" width="0.3" height="15.0" fill="rgb(209,212,45)" rx="2" ry="2" />
<text  x="39.36" y="303.5" ></text>
</g>
<g >
<title>kworker/u4:0-ev (10,101,010 samples, 0.03%)</title><rect x="10.4" y="437" width="0.3" height="15.0" fill="rgb(231,51,37)" rx="2" ry="2" />
<text  x="13.37" y="447.5" ></text>
</g>
<g >
<title>mi_page_free_list_extend.isra.0 (80,808,080 samples, 0.25%)</title><rect x="43.4" y="405" width="3.0" height="15.0" fill="rgb(207,188,14)" rx="2" ry="2" />
<text  x="46.42" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.35%)</title><rect x="47.5" y="293" width="4.1" height="15.0" fill="rgb(244,79,23)" rx="2" ry="2" />
<text  x="50.50" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="40.8" y="357" width="2.2" height="15.0" fill="rgb(234,104,4)" rx="2" ry="2" />
<text  x="43.82" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="389" width="0.4" height="15.0" fill="rgb(241,156,25)" rx="2" ry="2" />
<text  x="1192.63" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="635.6" y="293" width="0.8" height="15.0" fill="rgb(233,29,5)" rx="2" ry="2" />
<text  x="638.65" y="303.5" ></text>
</g>
<g >
<title>mi_calloc (20,202,020 samples, 0.06%)</title><rect x="89.8" y="421" width="0.8" height="15.0" fill="rgb(207,167,3)" rx="2" ry="2" />
<text  x="92.83" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="50.1" y="149" width="1.5" height="15.0" fill="rgb(237,113,10)" rx="2" ry="2" />
<text  x="53.10" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (353,535,350 samples, 1.10%)</title><rect x="76.8" y="325" width="13.0" height="15.0" fill="rgb(229,176,10)" rx="2" ry="2" />
<text  x="79.83" y="335.5" ></text>
</g>
<g >
<title>thread_fence (10,101,010 samples, 0.03%)</title><rect x="92.8" y="421" width="0.4" height="15.0" fill="rgb(243,158,53)" rx="2" ry="2" />
<text  x="95.80" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="93.5" y="405" width="0.4" height="15.0" fill="rgb(251,54,30)" rx="2" ry="2" />
<text  x="96.54" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="93.5" y="293" width="0.4" height="15.0" fill="rgb(250,134,49)" rx="2" ry="2" />
<text  x="96.54" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.4" y="357" width="0.4" height="15.0" fill="rgb(211,80,16)" rx="2" ry="2" />
<text  x="72.41" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="341" width="0.3" height="15.0" fill="rgb(231,17,9)" rx="2" ry="2" />
<text  x="13.37" y="351.5" ></text>
</g>
<g >
<title>dirname (10,101,010 samples, 0.03%)</title><rect x="10.0" y="437" width="0.4" height="15.0" fill="rgb(222,188,39)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="309" width="0.4" height="15.0" fill="rgb(217,203,37)" rx="2" ry="2" />
<text  x="14.49" y="319.5" ></text>
</g>
<g >
<title>mi_page_queue_find_free_ex (30,303,030 samples, 0.09%)</title><rect x="36.7" y="389" width="1.1" height="15.0" fill="rgb(226,52,10)" rx="2" ry="2" />
<text  x="39.73" y="399.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (10,101,010 samples, 0.03%)</title><rect x="11.1" y="405" width="0.4" height="15.0" fill="rgb(205,17,30)" rx="2" ry="2" />
<text  x="14.11" y="415.5" ></text>
</g>
<g >
<title>rptest (2,232,323,210 samples, 6.95%)</title><rect x="11.5" y="437" width="82.0" height="15.0" fill="rgb(247,159,9)" rx="2" ry="2" />
<text  x="14.49" y="447.5" >rptest</text>
</g>
<g >
<title>_mi_segment_page_alloc (60,606,060 samples, 0.19%)</title><rect x="40.8" y="405" width="2.2" height="15.0" fill="rgb(229,166,38)" rx="2" ry="2" />
<text  x="43.82" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="245" width="0.4" height="15.0" fill="rgb(246,61,1)" rx="2" ry="2" />
<text  x="14.49" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.16%)</title><rect x="49.7" y="181" width="1.9" height="15.0" fill="rgb(249,22,28)" rx="2" ry="2" />
<text  x="52.73" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="49.4" y="229" width="2.2" height="15.0" fill="rgb(214,157,31)" rx="2" ry="2" />
<text  x="52.36" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="41.6" y="245" width="1.4" height="15.0" fill="rgb(254,136,50)" rx="2" ry="2" />
<text  x="44.56" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.4" y="325" width="0.3" height="15.0" fill="rgb(248,124,20)" rx="2" ry="2" />
<text  x="39.36" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="357" width="0.3" height="15.0" fill="rgb(243,107,40)" rx="2" ry="2" />
<text  x="13.37" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (393,939,390 samples, 1.23%)</title><rect x="75.3" y="341" width="14.5" height="15.0" fill="rgb(241,16,19)" rx="2" ry="2" />
<text  x="78.35" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="373" width="0.3" height="15.0" fill="rgb(219,83,53)" rx="2" ry="2" />
<text  x="13.37" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (343,434,340 samples, 1.07%)</title><rect x="77.2" y="309" width="12.6" height="15.0" fill="rgb(241,180,14)" rx="2" ry="2" />
<text  x="80.21" y="319.5" ></text>
</g>
<g >
<title>benchmark_worker (222,222,220 samples, 0.69%)</title><rect x="61.6" y="421" width="8.2" height="15.0" fill="rgb(232,0,45)" rx="2" ry="2" />
<text  x="64.61" y="431.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (333,333,330 samples, 1.04%)</title><rect x="11.9" y="389" width="12.2" height="15.0" fill="rgb(247,3,41)" rx="2" ry="2" />
<text  x="14.86" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (292,929,290 samples, 0.91%)</title><rect x="79.1" y="277" width="10.7" height="15.0" fill="rgb(205,214,25)" rx="2" ry="2" />
<text  x="82.06" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="50.1" y="117" width="1.5" height="15.0" fill="rgb(234,163,50)" rx="2" ry="2" />
<text  x="53.10" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,747,474,600 samples, 45.94%)</title><rect x="94.3" y="357" width="542.1" height="15.0" fill="rgb(209,191,49)" rx="2" ry="2" />
<text  x="97.29" y="367.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[libjemalloc.so.2] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="421" width="0.4" height="15.0" fill="rgb(218,226,39)" rx="2" ry="2" />
<text  x="13.74" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="40.8" y="325" width="2.2" height="15.0" fill="rgb(214,197,28)" rx="2" ry="2" />
<text  x="43.82" y="335.5" ></text>
</g>
<g >
<title>[unknown] (15,050,504,900 samples, 46.88%)</title><rect x="636.4" y="373" width="553.2" height="15.0" fill="rgb(242,206,52)" rx="2" ry="2" />
<text  x="639.39" y="383.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="93.5" y="277" width="0.4" height="15.0" fill="rgb(247,84,3)" rx="2" ry="2" />
<text  x="96.54" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="325" width="0.4" height="15.0" fill="rgb(226,11,45)" rx="2" ry="2" />
<text  x="1192.63" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,050,504,900 samples, 46.88%)</title><rect x="636.4" y="341" width="553.2" height="15.0" fill="rgb(240,55,23)" rx="2" ry="2" />
<text  x="639.39" y="351.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="45.3" y="389" width="1.1" height="15.0" fill="rgb(233,32,41)" rx="2" ry="2" />
<text  x="48.27" y="399.5" ></text>
</g>
<g >
<title>thread_fence (10,101,010 samples, 0.03%)</title><rect x="46.4" y="405" width="0.4" height="15.0" fill="rgb(206,63,23)" rx="2" ry="2" />
<text  x="49.39" y="415.5" ></text>
</g>
<g >
<title>_mi_mem_reset (10,101,010 samples, 0.03%)</title><rect x="39.3" y="405" width="0.4" height="15.0" fill="rgb(209,82,34)" rx="2" ry="2" />
<text  x="42.33" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.4" y="309" width="0.3" height="15.0" fill="rgb(246,22,53)" rx="2" ry="2" />
<text  x="39.36" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="636.0" y="245" width="0.4" height="15.0" fill="rgb(230,189,34)" rx="2" ry="2" />
<text  x="639.02" y="255.5" ></text>
</g>
<g >
<title>clock_nanosleep@@GLIBC_2.17 (535,353,530 samples, 1.67%)</title><rect x="70.2" y="421" width="19.6" height="15.0" fill="rgb(206,180,19)" rx="2" ry="2" />
<text  x="73.15" y="431.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (30,303,030 samples, 0.09%)</title><rect x="24.1" y="389" width="1.1" height="15.0" fill="rgb(245,4,40)" rx="2" ry="2" />
<text  x="27.11" y="399.5" ></text>
</g>
<g >
<title>_mi_page_free_collect (101,010,100 samples, 0.31%)</title><rect x="56.8" y="421" width="3.7" height="15.0" fill="rgb(236,228,42)" rx="2" ry="2" />
<text  x="59.78" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="261" width="0.4" height="15.0" fill="rgb(227,158,20)" rx="2" ry="2" />
<text  x="14.49" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="389" width="0.3" height="15.0" fill="rgb(235,167,38)" rx="2" ry="2" />
<text  x="13.37" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="93.5" y="341" width="0.4" height="15.0" fill="rgb(210,15,42)" rx="2" ry="2" />
<text  x="96.54" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="373" width="0.4" height="15.0" fill="rgb(206,82,8)" rx="2" ry="2" />
<text  x="1192.63" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="93.5" y="325" width="0.4" height="15.0" fill="rgb(251,51,5)" rx="2" ry="2" />
<text  x="96.54" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="325" width="0.4" height="15.0" fill="rgb(239,175,32)" rx="2" ry="2" />
<text  x="14.49" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="405" width="0.3" height="15.0" fill="rgb(216,131,52)" rx="2" ry="2" />
<text  x="13.37" y="415.5" ></text>
</g>
<g >
<title>mi_find_page (111,111,110 samples, 0.35%)</title><rect x="32.6" y="389" width="4.1" height="15.0" fill="rgb(248,54,53)" rx="2" ry="2" />
<text  x="35.65" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.38%)</title><rect x="47.1" y="357" width="4.5" height="15.0" fill="rgb(252,223,25)" rx="2" ry="2" />
<text  x="50.13" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="50.1" y="165" width="1.5" height="15.0" fill="rgb(247,65,8)" rx="2" ry="2" />
<text  x="53.10" y="175.5" ></text>
</g>
<g >
<title>__mmap (10,101,010 samples, 0.03%)</title><rect x="10.0" y="421" width="0.4" height="15.0" fill="rgb(252,152,48)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="229" width="0.4" height="15.0" fill="rgb(210,223,40)" rx="2" ry="2" />
<text  x="14.49" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="49.4" y="213" width="2.2" height="15.0" fill="rgb(229,11,26)" rx="2" ry="2" />
<text  x="52.36" y="223.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (10,101,010 samples, 0.03%)</title><rect x="69.8" y="405" width="0.4" height="15.0" fill="rgb(253,126,31)" rx="2" ry="2" />
<text  x="72.78" y="415.5" ></text>
</g>
<g >
<title>time (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="437" width="0.4" height="15.0" fill="rgb(240,193,4)" rx="2" ry="2" />
<text  x="1192.63" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="50.1" y="133" width="1.5" height="15.0" fill="rgb(233,162,5)" rx="2" ry="2" />
<text  x="53.10" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="45.3" y="325" width="1.1" height="15.0" fill="rgb(242,126,1)" rx="2" ry="2" />
<text  x="48.27" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.16%)</title><rect x="49.7" y="197" width="1.9" height="15.0" fill="rgb(209,224,42)" rx="2" ry="2" />
<text  x="52.73" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.38%)</title><rect x="47.1" y="341" width="4.5" height="15.0" fill="rgb(210,220,38)" rx="2" ry="2" />
<text  x="50.13" y="351.5" ></text>
</g>
<g >
<title>__mmap (10,101,010 samples, 0.03%)</title><rect x="93.5" y="421" width="0.4" height="15.0" fill="rgb(226,94,41)" rx="2" ry="2" />
<text  x="96.54" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.4" y="341" width="0.4" height="15.0" fill="rgb(238,122,20)" rx="2" ry="2" />
<text  x="72.41" y="351.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (80,808,080 samples, 0.25%)</title><rect x="53.4" y="421" width="3.0" height="15.0" fill="rgb(219,35,46)" rx="2" ry="2" />
<text  x="56.44" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,050,504,900 samples, 46.88%)</title><rect x="636.4" y="293" width="553.2" height="15.0" fill="rgb(209,172,28)" rx="2" ry="2" />
<text  x="639.39" y="303.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.1" y="341" width="0.3" height="15.0" fill="rgb(210,12,48)" rx="2" ry="2" />
<text  x="56.07" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="45.3" y="341" width="1.1" height="15.0" fill="rgb(209,45,29)" rx="2" ry="2" />
<text  x="48.27" y="351.5" ></text>
</g>
<g >
<title>__GI___open64_nocancel (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="405" width="0.4" height="15.0" fill="rgb(243,178,52)" rx="2" ry="2" />
<text  x="1192.63" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.38%)</title><rect x="47.1" y="389" width="4.5" height="15.0" fill="rgb(244,16,23)" rx="2" ry="2" />
<text  x="50.13" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.4" y="261" width="0.3" height="15.0" fill="rgb(246,207,45)" rx="2" ry="2" />
<text  x="39.36" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="45.3" y="277" width="1.1" height="15.0" fill="rgb(240,86,52)" rx="2" ry="2" />
<text  x="48.27" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="46.0" y="245" width="0.4" height="15.0" fill="rgb(215,212,0)" rx="2" ry="2" />
<text  x="49.02" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="50.1" y="101" width="1.5" height="15.0" fill="rgb(239,221,40)" rx="2" ry="2" />
<text  x="53.10" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="93.5" y="373" width="0.4" height="15.0" fill="rgb(242,27,25)" rx="2" ry="2" />
<text  x="96.54" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="636.0" y="197" width="0.4" height="15.0" fill="rgb(223,16,12)" rx="2" ry="2" />
<text  x="639.02" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.38%)</title><rect x="47.1" y="325" width="4.5" height="15.0" fill="rgb(238,6,0)" rx="2" ry="2" />
<text  x="50.13" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,737,373,590 samples, 45.91%)</title><rect x="94.7" y="325" width="541.7" height="15.0" fill="rgb(230,182,18)" rx="2" ry="2" />
<text  x="97.66" y="335.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,010,100,860 samples, 46.76%)</title><rect x="637.9" y="261" width="551.7" height="15.0" fill="rgb(205,112,38)" rx="2" ry="2" />
<text  x="640.87" y="271.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.1" y="389" width="0.3" height="15.0" fill="rgb(236,67,37)" rx="2" ry="2" />
<text  x="56.07" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.1" y="325" width="0.3" height="15.0" fill="rgb(238,56,10)" rx="2" ry="2" />
<text  x="56.07" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,010,100,860 samples, 46.76%)</title><rect x="637.9" y="277" width="551.7" height="15.0" fill="rgb(249,219,14)" rx="2" ry="2" />
<text  x="640.87" y="287.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[unknown] (707,070,700 samples, 2.20%)</title><rect x="11.9" y="405" width="25.9" height="15.0" fill="rgb(240,25,12)" rx="2" ry="2" />
<text  x="14.86" y="415.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.4" y="309" width="0.4" height="15.0" fill="rgb(234,116,23)" rx="2" ry="2" />
<text  x="72.41" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="635.6" y="309" width="0.8" height="15.0" fill="rgb(253,153,6)" rx="2" ry="2" />
<text  x="638.65" y="319.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (50,505,050 samples, 0.16%)</title><rect x="51.6" y="421" width="1.8" height="15.0" fill="rgb(241,201,1)" rx="2" ry="2" />
<text  x="54.59" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.1" y="309" width="0.3" height="15.0" fill="rgb(242,124,4)" rx="2" ry="2" />
<text  x="56.07" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="46.0" y="229" width="0.4" height="15.0" fill="rgb(243,13,50)" rx="2" ry="2" />
<text  x="49.02" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="40.8" y="341" width="2.2" height="15.0" fill="rgb(207,10,22)" rx="2" ry="2" />
<text  x="43.82" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="341" width="0.4" height="15.0" fill="rgb(231,55,42)" rx="2" ry="2" />
<text  x="1192.63" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (434,343,430 samples, 1.35%)</title><rect x="73.9" y="373" width="15.9" height="15.0" fill="rgb(244,141,51)" rx="2" ry="2" />
<text  x="76.86" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="635.6" y="261" width="0.8" height="15.0" fill="rgb(207,63,20)" rx="2" ry="2" />
<text  x="638.65" y="271.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="11.1" y="421" width="0.4" height="15.0" fill="rgb(233,41,2)" rx="2" ry="2" />
<text  x="14.11" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="213" width="0.4" height="15.0" fill="rgb(219,222,17)" rx="2" ry="2" />
<text  x="14.49" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.4" y="373" width="0.3" height="15.0" fill="rgb(254,58,10)" rx="2" ry="2" />
<text  x="39.36" y="383.5" ></text>
</g>
<g >
<title>_mi_segment_page_free (10,101,010 samples, 0.03%)</title><rect x="43.0" y="405" width="0.4" height="15.0" fill="rgb(211,141,5)" rx="2" ry="2" />
<text  x="46.05" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="93.5" y="261" width="0.4" height="15.0" fill="rgb(240,76,22)" rx="2" ry="2" />
<text  x="96.54" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.4" y="373" width="0.4" height="15.0" fill="rgb(239,210,3)" rx="2" ry="2" />
<text  x="72.41" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="40.8" y="389" width="2.2" height="15.0" fill="rgb(216,2,1)" rx="2" ry="2" />
<text  x="43.82" y="399.5" ></text>
</g>
<g >
<title>operator delete[] (10,101,010 samples, 0.03%)</title><rect x="92.4" y="421" width="0.4" height="15.0" fill="rgb(226,121,46)" rx="2" ry="2" />
<text  x="95.43" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.4" y="405" width="0.4" height="15.0" fill="rgb(215,153,29)" rx="2" ry="2" />
<text  x="72.41" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="45.3" y="293" width="1.1" height="15.0" fill="rgb(221,174,25)" rx="2" ry="2" />
<text  x="48.27" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="45.3" y="373" width="1.1" height="15.0" fill="rgb(249,125,12)" rx="2" ry="2" />
<text  x="48.27" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="40.8" y="373" width="2.2" height="15.0" fill="rgb(215,79,51)" rx="2" ry="2" />
<text  x="43.82" y="383.5" ></text>
</g>
<g >
<title>mi_heap_malloc_aligned_at (20,202,020 samples, 0.06%)</title><rect x="91.7" y="421" width="0.7" height="15.0" fill="rgb(239,66,3)" rx="2" ry="2" />
<text  x="94.69" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="45.3" y="309" width="1.1" height="15.0" fill="rgb(226,36,26)" rx="2" ry="2" />
<text  x="48.27" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="636.0" y="229" width="0.4" height="15.0" fill="rgb(243,153,0)" rx="2" ry="2" />
<text  x="639.02" y="239.5" ></text>
</g>
<g >
<title>swapper (29,808,080,510 samples, 92.86%)</title><rect x="93.9" y="437" width="1095.7" height="15.0" fill="rgb(207,14,40)" rx="2" ry="2" />
<text  x="96.91" y="447.5" >swapper</text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.38%)</title><rect x="47.1" y="309" width="4.5" height="15.0" fill="rgb(219,11,41)" rx="2" ry="2" />
<text  x="50.13" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="40.8" y="277" width="2.2" height="15.0" fill="rgb(206,194,18)" rx="2" ry="2" />
<text  x="43.82" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="45.3" y="357" width="1.1" height="15.0" fill="rgb(244,174,48)" rx="2" ry="2" />
<text  x="48.27" y="367.5" ></text>
</g>
<g >
<title>mi_heap_malloc_aligned (20,202,020 samples, 0.06%)</title><rect x="90.9" y="421" width="0.8" height="15.0" fill="rgb(217,103,26)" rx="2" ry="2" />
<text  x="93.94" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="40.8" y="309" width="2.2" height="15.0" fill="rgb(213,6,32)" rx="2" ry="2" />
<text  x="43.82" y="319.5" ></text>
</g>
<g >
<title>[unknown] (15,050,504,900 samples, 46.88%)</title><rect x="636.4" y="357" width="553.2" height="15.0" fill="rgb(213,76,53)" rx="2" ry="2" />
<text  x="639.39" y="367.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="40.8" y="293" width="2.2" height="15.0" fill="rgb(247,119,3)" rx="2" ry="2" />
<text  x="43.82" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="293" width="0.4" height="15.0" fill="rgb(235,114,49)" rx="2" ry="2" />
<text  x="14.49" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (434,343,430 samples, 1.35%)</title><rect x="73.9" y="389" width="15.9" height="15.0" fill="rgb(252,35,12)" rx="2" ry="2" />
<text  x="76.86" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (393,939,390 samples, 1.23%)</title><rect x="75.3" y="357" width="14.5" height="15.0" fill="rgb(254,122,4)" rx="2" ry="2" />
<text  x="78.35" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.4" y="325" width="0.4" height="15.0" fill="rgb(249,87,46)" rx="2" ry="2" />
<text  x="72.41" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="357" width="0.4" height="15.0" fill="rgb(253,50,54)" rx="2" ry="2" />
<text  x="1192.63" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.2" y="53" width="0.4" height="15.0" fill="rgb(207,190,16)" rx="2" ry="2" />
<text  x="54.21" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="421" width="0.4" height="15.0" fill="rgb(208,191,33)" rx="2" ry="2" />
<text  x="14.49" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="636.0" y="213" width="0.4" height="15.0" fill="rgb(245,58,13)" rx="2" ry="2" />
<text  x="639.02" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,808,080,510 samples, 92.86%)</title><rect x="93.9" y="421" width="1095.7" height="15.0" fill="rgb(207,187,9)" rx="2" ry="2" />
<text  x="96.91" y="431.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (434,343,430 samples, 1.35%)</title><rect x="73.9" y="405" width="15.9" height="15.0" fill="rgb(208,45,44)" rx="2" ry="2" />
<text  x="76.86" y="415.5" ></text>
</g>
<g >
<title>__nanosleep (10,101,010 samples, 0.03%)</title><rect x="56.4" y="421" width="0.4" height="15.0" fill="rgb(220,203,44)" rx="2" ry="2" />
<text  x="59.41" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (292,929,290 samples, 0.91%)</title><rect x="79.1" y="293" width="10.7" height="15.0" fill="rgb(245,111,27)" rx="2" ry="2" />
<text  x="82.06" y="303.5" ></text>
</g>
<g >
<title>all (32,101,009,780 samples, 100%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(238,118,12)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>mi_free_generic (10,101,010 samples, 0.03%)</title><rect x="90.6" y="421" width="0.3" height="15.0" fill="rgb(212,58,43)" rx="2" ry="2" />
<text  x="93.57" y="431.5" ></text>
</g>
<g >
<title>sed (10,101,010 samples, 0.03%)</title><rect x="93.5" y="437" width="0.4" height="15.0" fill="rgb(207,154,21)" rx="2" ry="2" />
<text  x="96.54" y="447.5" ></text>
</g>
<g >
<title>_mi_page_malloc (90,909,090 samples, 0.28%)</title><rect x="29.3" y="389" width="3.3" height="15.0" fill="rgb(233,34,38)" rx="2" ry="2" />
<text  x="32.31" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,757,575,610 samples, 45.97%)</title><rect x="93.9" y="373" width="542.5" height="15.0" fill="rgb(216,211,32)" rx="2" ry="2" />
<text  x="96.91" y="383.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.2" y="37" width="0.4" height="15.0" fill="rgb(234,32,2)" rx="2" ry="2" />
<text  x="54.21" y="47.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (10,101,010 samples, 0.03%)</title><rect x="69.8" y="421" width="0.4" height="15.0" fill="rgb(208,186,53)" rx="2" ry="2" />
<text  x="72.78" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,050,504,900 samples, 46.88%)</title><rect x="636.4" y="309" width="553.2" height="15.0" fill="rgb(248,45,53)" rx="2" ry="2" />
<text  x="639.39" y="319.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10,101,010 samples, 0.03%)</title><rect x="37.8" y="405" width="0.4" height="15.0" fill="rgb(237,182,38)" rx="2" ry="2" />
<text  x="40.85" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="389" width="0.4" height="15.0" fill="rgb(244,112,51)" rx="2" ry="2" />
<text  x="14.49" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="40.8" y="261" width="2.2" height="15.0" fill="rgb(212,84,7)" rx="2" ry="2" />
<text  x="43.82" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.1" y="357" width="0.3" height="15.0" fill="rgb(228,216,25)" rx="2" ry="2" />
<text  x="56.07" y="367.5" ></text>
</g>
<g >
<title>[unknown] (15,050,504,900 samples, 46.88%)</title><rect x="636.4" y="405" width="553.2" height="15.0" fill="rgb(248,96,41)" rx="2" ry="2" />
<text  x="639.39" y="415.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,737,373,590 samples, 45.91%)</title><rect x="94.7" y="341" width="541.7" height="15.0" fill="rgb(242,76,33)" rx="2" ry="2" />
<text  x="97.66" y="351.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="341" width="0.4" height="15.0" fill="rgb(242,5,29)" rx="2" ry="2" />
<text  x="14.49" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.1" y="373" width="0.3" height="15.0" fill="rgb(211,164,43)" rx="2" ry="2" />
<text  x="56.07" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="635.6" y="277" width="0.8" height="15.0" fill="rgb(240,33,50)" rx="2" ry="2" />
<text  x="638.65" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="93.5" y="245" width="0.4" height="15.0" fill="rgb(246,24,47)" rx="2" ry="2" />
<text  x="96.54" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.4" y="389" width="0.4" height="15.0" fill="rgb(205,76,17)" rx="2" ry="2" />
<text  x="72.41" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="45.3" y="261" width="1.1" height="15.0" fill="rgb(227,142,30)" rx="2" ry="2" />
<text  x="48.27" y="271.5" ></text>
</g>
<g >
<title>_mi_page_malloc (30,303,030 samples, 0.09%)</title><rect x="60.5" y="421" width="1.1" height="15.0" fill="rgb(222,76,7)" rx="2" ry="2" />
<text  x="63.50" y="431.5" ></text>
</g>
<g >
<title>redis-server (20,202,020 samples, 0.06%)</title><rect x="10.7" y="437" width="0.8" height="15.0" fill="rgb(243,212,9)" rx="2" ry="2" />
<text  x="13.74" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,757,575,610 samples, 45.97%)</title><rect x="93.9" y="405" width="542.5" height="15.0" fill="rgb(210,46,36)" rx="2" ry="2" />
<text  x="96.91" y="415.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,050,504,900 samples, 46.88%)</title><rect x="636.4" y="325" width="553.2" height="15.0" fill="rgb(214,109,43)" rx="2" ry="2" />
<text  x="639.39" y="335.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="50.8" y="69" width="0.8" height="15.0" fill="rgb(228,58,50)" rx="2" ry="2" />
<text  x="53.84" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="93.5" y="357" width="0.4" height="15.0" fill="rgb(244,116,10)" rx="2" ry="2" />
<text  x="96.54" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.38%)</title><rect x="47.1" y="373" width="4.5" height="15.0" fill="rgb(225,123,32)" rx="2" ry="2" />
<text  x="50.13" y="383.5" ></text>
</g>
<g >
<title>[unknown] (15,050,504,900 samples, 46.88%)</title><rect x="636.4" y="389" width="553.2" height="15.0" fill="rgb(249,13,48)" rx="2" ry="2" />
<text  x="639.39" y="399.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="405" width="0.4" height="15.0" fill="rgb(237,82,6)" rx="2" ry="2" />
<text  x="14.49" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.1" y="293" width="0.3" height="15.0" fill="rgb(249,197,14)" rx="2" ry="2" />
<text  x="56.07" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="309" width="0.4" height="15.0" fill="rgb(233,139,7)" rx="2" ry="2" />
<text  x="1192.63" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.38%)</title><rect x="47.1" y="405" width="4.5" height="15.0" fill="rgb(210,58,41)" rx="2" ry="2" />
<text  x="50.13" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="421" width="0.3" height="15.0" fill="rgb(207,141,53)" rx="2" ry="2" />
<text  x="13.37" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="41.6" y="229" width="1.4" height="15.0" fill="rgb(245,66,30)" rx="2" ry="2" />
<text  x="44.56" y="239.5" ></text>
</g>
<g >
<title>[unknown] (949,494,940 samples, 2.96%)</title><rect x="11.9" y="421" width="34.9" height="15.0" fill="rgb(219,195,30)" rx="2" ry="2" />
<text  x="14.86" y="431.5" >[u..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="277" width="0.4" height="15.0" fill="rgb(251,142,52)" rx="2" ry="2" />
<text  x="14.49" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="93.5" y="309" width="0.4" height="15.0" fill="rgb(211,109,33)" rx="2" ry="2" />
<text  x="96.54" y="319.5" ></text>
</g>
<g >
<title>_mi_malloc_generic (111,111,110 samples, 0.35%)</title><rect x="25.2" y="389" width="4.1" height="15.0" fill="rgb(254,61,14)" rx="2" ry="2" />
<text  x="28.22" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.35%)</title><rect x="47.5" y="261" width="4.1" height="15.0" fill="rgb(211,193,11)" rx="2" ry="2" />
<text  x="50.50" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="373" width="0.4" height="15.0" fill="rgb(247,126,6)" rx="2" ry="2" />
<text  x="14.49" y="383.5" ></text>
</g>
</g>
</svg>
