<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="310.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="293" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="293" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="162.3" y="101" width="0.8" height="15.0" fill="rgb(227,225,4)" rx="2" ry="2" />
<text  x="165.31" y="111.5" ></text>
</g>
<g >
<title>[unknown] (1,535,353,520 samples, 10.78%)</title><rect x="35.1" y="229" width="127.2" height="15.0" fill="rgb(209,98,50)" rx="2" ry="2" />
<text  x="38.11" y="239.5" >[unknown]</text>
</g>
<g >
<title>syscall (10,101,010 samples, 0.07%)</title><rect x="846.9" y="229" width="0.8" height="15.0" fill="rgb(206,133,19)" rx="2" ry="2" />
<text  x="849.88" y="239.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocatorLocalCache&lt;scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt; &gt;::refill (252,525,250 samples, 1.77%)</title><rect x="139.7" y="213" width="20.9" height="15.0" fill="rgb(248,123,29)" rx="2" ry="2" />
<text  x="142.72" y="223.5" ></text>
</g>
<g >
<title>rm (10,101,010 samples, 0.07%)</title><rect x="848.6" y="245" width="0.8" height="15.0" fill="rgb(215,131,53)" rx="2" ry="2" />
<text  x="851.55" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="803.4" y="117" width="1.6" height="15.0" fill="rgb(207,193,6)" rx="2" ry="2" />
<text  x="806.36" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="12.5" y="53" width="0.8" height="15.0" fill="rgb(252,219,3)" rx="2" ry="2" />
<text  x="15.51" y="63.5" ></text>
</g>
<g >
<title>runthreads (20,202,020 samples, 0.14%)</title><rect x="485.3" y="229" width="1.7" height="15.0" fill="rgb(234,16,24)" rx="2" ry="2" />
<text  x="488.35" y="239.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocatorLocalCache&lt;scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt; &gt;::refill (50,505,050 samples, 0.35%)</title><rect x="474.5" y="213" width="4.2" height="15.0" fill="rgb(235,61,3)" rx="2" ry="2" />
<text  x="477.47" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="486.2" y="197" width="0.8" height="15.0" fill="rgb(221,143,4)" rx="2" ry="2" />
<text  x="489.18" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,010,100,990 samples, 14.11%)</title><rect x="849.4" y="149" width="166.5" height="15.0" fill="rgb(219,165,35)" rx="2" ry="2" />
<text  x="852.39" y="159.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.7" y="133" width="0.8" height="15.0" fill="rgb(213,187,8)" rx="2" ry="2" />
<text  x="14.67" y="143.5" ></text>
</g>
<g >
<title>read (10,101,010 samples, 0.07%)</title><rect x="12.5" y="213" width="0.8" height="15.0" fill="rgb(234,17,18)" rx="2" ry="2" />
<text  x="15.51" y="223.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::quarantineOrDeallocateChunk (212,121,210 samples, 1.49%)</title><rect x="51.8" y="213" width="17.6" height="15.0" fill="rgb(229,168,0)" rx="2" ry="2" />
<text  x="54.84" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="149" width="0.8" height="15.0" fill="rgb(210,175,9)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="846.9" y="181" width="0.8" height="15.0" fill="rgb(229,27,8)" rx="2" ry="2" />
<text  x="849.88" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="12.5" y="37" width="0.8" height="15.0" fill="rgb(220,96,8)" rx="2" ry="2" />
<text  x="15.51" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,010,100,990 samples, 14.11%)</title><rect x="849.4" y="181" width="166.5" height="15.0" fill="rgb(225,209,5)" rx="2" ry="2" />
<text  x="852.39" y="191.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>scudo::SizeClassAllocatorLocalCache&lt;scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt; &gt;::drain (131,313,130 samples, 0.92%)</title><rect x="836.0" y="229" width="10.9" height="15.0" fill="rgb(240,108,13)" rx="2" ry="2" />
<text  x="839.00" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="181" width="0.8" height="15.0" fill="rgb(207,159,43)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>[unknown] (2,101,010,080 samples, 14.75%)</title><rect x="1015.9" y="181" width="174.1" height="15.0" fill="rgb(208,141,10)" rx="2" ry="2" />
<text  x="1018.93" y="191.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (101,010,100 samples, 0.71%)</title><rect x="35.1" y="197" width="8.4" height="15.0" fill="rgb(208,58,23)" rx="2" ry="2" />
<text  x="38.11" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="12.5" y="197" width="0.8" height="15.0" fill="rgb(218,112,51)" rx="2" ry="2" />
<text  x="15.51" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="101" width="0.8" height="15.0" fill="rgb(223,124,20)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,101,010,080 samples, 14.75%)</title><rect x="1015.9" y="85" width="174.1" height="15.0" fill="rgb(229,21,54)" rx="2" ry="2" />
<text  x="1018.93" y="95.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>_Unwind_ForcedUnwind (10,101,010 samples, 0.07%)</title><rect x="48.5" y="213" width="0.8" height="15.0" fill="rgb(241,55,49)" rx="2" ry="2" />
<text  x="51.50" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.7" y="181" width="0.8" height="15.0" fill="rgb(251,199,54)" rx="2" ry="2" />
<text  x="14.67" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="49.3" y="149" width="0.9" height="15.0" fill="rgb(237,153,17)" rx="2" ry="2" />
<text  x="52.33" y="159.5" ></text>
</g>
<g >
<title>__mmap (10,101,010 samples, 0.07%)</title><rect x="166.5" y="229" width="0.8" height="15.0" fill="rgb(249,195,24)" rx="2" ry="2" />
<text  x="169.50" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.7" y="117" width="0.8" height="15.0" fill="rgb(238,195,51)" rx="2" ry="2" />
<text  x="14.67" y="127.5" ></text>
</g>
<g >
<title>scudo::HybridMutex::lock (393,939,390 samples, 2.77%)</title><rect x="69.4" y="213" width="32.7" height="15.0" fill="rgb(219,16,40)" rx="2" ry="2" />
<text  x="72.42" y="223.5" >sc..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="166.5" y="133" width="0.8" height="15.0" fill="rgb(224,121,37)" rx="2" ry="2" />
<text  x="169.50" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="803.4" y="101" width="1.6" height="15.0" fill="rgb(232,217,46)" rx="2" ry="2" />
<text  x="806.36" y="111.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::quarantineOrDeallocateChunk (1,161,616,150 samples, 8.16%)</title><rect x="708.8" y="229" width="96.2" height="15.0" fill="rgb(213,115,29)" rx="2" ry="2" />
<text  x="711.79" y="239.5" >scudo::Allo..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="161.5" y="149" width="0.8" height="15.0" fill="rgb(238,222,13)" rx="2" ry="2" />
<text  x="164.48" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="162.3" y="213" width="0.8" height="15.0" fill="rgb(221,58,4)" rx="2" ry="2" />
<text  x="165.31" y="223.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::releaseToOSMaybe (20,202,020 samples, 0.14%)</title><rect x="125.5" y="213" width="1.7" height="15.0" fill="rgb(216,147,12)" rx="2" ry="2" />
<text  x="128.49" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,010,100,990 samples, 14.11%)</title><rect x="849.4" y="197" width="166.5" height="15.0" fill="rgb(210,157,36)" rx="2" ry="2" />
<text  x="852.39" y="207.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="161.5" y="197" width="0.8" height="15.0" fill="rgb(219,229,42)" rx="2" ry="2" />
<text  x="164.48" y="207.5" ></text>
</g>
<g >
<title>[larson-sized] (121,212,120 samples, 0.85%)</title><rect x="13.3" y="229" width="10.1" height="15.0" fill="rgb(220,218,6)" rx="2" ry="2" />
<text  x="16.35" y="239.5" ></text>
</g>
<g >
<title>[unknown] (161,616,160 samples, 1.13%)</title><rect x="35.1" y="213" width="13.4" height="15.0" fill="rgb(218,165,10)" rx="2" ry="2" />
<text  x="38.11" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="166.5" y="213" width="0.8" height="15.0" fill="rgb(223,29,23)" rx="2" ry="2" />
<text  x="169.50" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="162.3" y="69" width="0.8" height="15.0" fill="rgb(242,217,10)" rx="2" ry="2" />
<text  x="165.31" y="79.5" ></text>
</g>
<g >
<title>[python3.8] (10,101,010 samples, 0.07%)</title><rect x="847.7" y="213" width="0.9" height="15.0" fill="rgb(219,190,31)" rx="2" ry="2" />
<text  x="850.72" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.7" y="85" width="0.8" height="15.0" fill="rgb(250,41,43)" rx="2" ry="2" />
<text  x="14.67" y="95.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10,101,010 samples, 0.07%)</title><rect x="50.2" y="213" width="0.8" height="15.0" fill="rgb(206,201,27)" rx="2" ry="2" />
<text  x="53.17" y="223.5" ></text>
</g>
<g >
<title>[unknown] (2,101,010,080 samples, 14.75%)</title><rect x="1015.9" y="197" width="174.1" height="15.0" fill="rgb(222,119,25)" rx="2" ry="2" />
<text  x="1018.93" y="207.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.7" y="101" width="0.8" height="15.0" fill="rgb(233,103,5)" rx="2" ry="2" />
<text  x="14.67" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="12.5" y="69" width="0.8" height="15.0" fill="rgb(219,227,33)" rx="2" ry="2" />
<text  x="15.51" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,010,100,990 samples, 14.11%)</title><rect x="849.4" y="165" width="166.5" height="15.0" fill="rgb(214,46,24)" rx="2" ry="2" />
<text  x="852.39" y="175.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="165" width="0.8" height="15.0" fill="rgb(233,211,22)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="12.5" y="85" width="0.8" height="15.0" fill="rgb(206,111,25)" rx="2" ry="2" />
<text  x="15.51" y="95.5" ></text>
</g>
<g >
<title>__GI___execve (10,101,010 samples, 0.07%)</title><rect x="10.0" y="213" width="0.8" height="15.0" fill="rgb(242,104,7)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::deallocate (2,656,565,630 samples, 18.65%)</title><rect x="488.7" y="229" width="220.1" height="15.0" fill="rgb(237,80,53)" rx="2" ry="2" />
<text  x="491.70" y="239.5" >scudo::Allocator&lt;scudo::Defau..</text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::pushBlocksImpl (282,828,280 samples, 1.99%)</title><rect x="805.0" y="229" width="23.5" height="15.0" fill="rgb(243,117,18)" rx="2" ry="2" />
<text  x="808.04" y="239.5" >s..</text>
</g>
<g >
<title>__tls_get_addr (252,525,250 samples, 1.77%)</title><rect x="167.3" y="229" width="21.0" height="15.0" fill="rgb(206,101,43)" rx="2" ry="2" />
<text  x="170.33" y="239.5" ></text>
</g>
<g >
<title>__clone (10,101,010 samples, 0.07%)</title><rect x="49.3" y="213" width="0.9" height="15.0" fill="rgb(240,55,39)" rx="2" ry="2" />
<text  x="52.33" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="34.3" y="197" width="0.8" height="15.0" fill="rgb(230,194,7)" rx="2" ry="2" />
<text  x="37.27" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.7" y="197" width="0.8" height="15.0" fill="rgb(212,173,36)" rx="2" ry="2" />
<text  x="14.67" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="49.3" y="117" width="0.9" height="15.0" fill="rgb(208,103,46)" rx="2" ry="2" />
<text  x="52.33" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="49.3" y="181" width="0.9" height="15.0" fill="rgb(254,123,6)" rx="2" ry="2" />
<text  x="52.33" y="191.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::pushBlocksImpl (70,707,070 samples, 0.50%)</title><rect x="35.1" y="165" width="5.9" height="15.0" fill="rgb(250,190,35)" rx="2" ry="2" />
<text  x="38.11" y="175.5" ></text>
</g>
<g >
<title>operator new[] (20,202,020 samples, 0.14%)</title><rect x="483.7" y="229" width="1.6" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="486.67" y="239.5" ></text>
</g>
<g >
<title>larson-sized (10,070,706,970 samples, 70.71%)</title><rect x="13.3" y="245" width="834.4" height="15.0" fill="rgb(248,216,8)" rx="2" ry="2" />
<text  x="16.35" y="255.5" >larson-sized</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="162.3" y="197" width="0.8" height="15.0" fill="rgb(226,154,47)" rx="2" ry="2" />
<text  x="165.31" y="207.5" ></text>
</g>
<g >
<title>exercise_heap (3,404,040,370 samples, 23.90%)</title><rect x="196.6" y="229" width="282.1" height="15.0" fill="rgb(249,156,22)" rx="2" ry="2" />
<text  x="199.62" y="239.5" >exercise_heap</text>
</g>
<g >
<title>[libscudo.so] (20,202,020 samples, 0.14%)</title><rect x="341.4" y="213" width="1.7" height="15.0" fill="rgb(219,109,23)" rx="2" ry="2" />
<text  x="344.40" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="161.5" y="133" width="0.8" height="15.0" fill="rgb(251,156,12)" rx="2" ry="2" />
<text  x="164.48" y="143.5" ></text>
</g>
<g >
<title>bench.sh (20,202,020 samples, 0.14%)</title><rect x="10.0" y="245" width="1.7" height="15.0" fill="rgb(234,134,43)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="117" width="0.8" height="15.0" fill="rgb(240,116,37)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,101,010,080 samples, 14.75%)</title><rect x="1015.9" y="149" width="174.1" height="15.0" fill="rgb(240,144,37)" rx="2" ry="2" />
<text  x="1018.93" y="159.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="486.2" y="181" width="0.8" height="15.0" fill="rgb(229,177,19)" rx="2" ry="2" />
<text  x="489.18" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="34.3" y="149" width="0.8" height="15.0" fill="rgb(214,55,20)" rx="2" ry="2" />
<text  x="37.27" y="159.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.07%)</title><rect x="847.7" y="229" width="0.9" height="15.0" fill="rgb(221,206,20)" rx="2" ry="2" />
<text  x="850.72" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,010,100,990 samples, 14.11%)</title><rect x="849.4" y="133" width="166.5" height="15.0" fill="rgb(247,164,10)" rx="2" ry="2" />
<text  x="852.39" y="143.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="803.4" y="181" width="1.6" height="15.0" fill="rgb(223,71,8)" rx="2" ry="2" />
<text  x="806.36" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="12.5" y="117" width="0.8" height="15.0" fill="rgb(218,100,17)" rx="2" ry="2" />
<text  x="15.51" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="34.3" y="101" width="0.8" height="15.0" fill="rgb(246,134,36)" rx="2" ry="2" />
<text  x="37.27" y="111.5" ></text>
</g>
<g >
<title>_dl_addr (10,101,010 samples, 0.07%)</title><rect x="848.6" y="229" width="0.8" height="15.0" fill="rgb(233,206,12)" rx="2" ry="2" />
<text  x="851.55" y="239.5" ></text>
</g>
<g >
<title>[unknown] (70,707,070 samples, 0.50%)</title><rect x="35.1" y="181" width="5.9" height="15.0" fill="rgb(252,94,32)" rx="2" ry="2" />
<text  x="38.11" y="191.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::pushBlocksImpl (80,808,080 samples, 0.57%)</title><rect x="118.8" y="213" width="6.7" height="15.0" fill="rgb(219,139,29)" rx="2" ry="2" />
<text  x="121.79" y="223.5" ></text>
</g>
<g >
<title>operator delete[] (60,606,060 samples, 0.43%)</title><rect x="478.7" y="229" width="5.0" height="15.0" fill="rgb(227,184,30)" rx="2" ry="2" />
<text  x="481.65" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,010,100,990 samples, 14.11%)</title><rect x="849.4" y="213" width="166.5" height="15.0" fill="rgb(230,17,16)" rx="2" ry="2" />
<text  x="852.39" y="223.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="486.2" y="165" width="0.8" height="15.0" fill="rgb(231,102,16)" rx="2" ry="2" />
<text  x="489.18" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.7" y="165" width="0.8" height="15.0" fill="rgb(238,76,40)" rx="2" ry="2" />
<text  x="14.67" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="161.5" y="181" width="0.8" height="15.0" fill="rgb(228,19,9)" rx="2" ry="2" />
<text  x="164.48" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="162.3" y="117" width="0.8" height="15.0" fill="rgb(223,182,49)" rx="2" ry="2" />
<text  x="165.31" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,101,010,080 samples, 14.75%)</title><rect x="1015.9" y="101" width="174.1" height="15.0" fill="rgb(244,227,49)" rx="2" ry="2" />
<text  x="1018.93" y="111.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="162.3" y="53" width="0.8" height="15.0" fill="rgb(251,36,24)" rx="2" ry="2" />
<text  x="165.31" y="63.5" ></text>
</g>
<g >
<title>[unknown] (2,101,010,080 samples, 14.75%)</title><rect x="1015.9" y="165" width="174.1" height="15.0" fill="rgb(248,123,32)" rx="2" ry="2" />
<text  x="1018.93" y="175.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.7" y="213" width="0.8" height="15.0" fill="rgb(223,207,3)" rx="2" ry="2" />
<text  x="14.67" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="166.5" y="181" width="0.8" height="15.0" fill="rgb(219,130,24)" rx="2" ry="2" />
<text  x="169.50" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="162.3" y="85" width="0.8" height="15.0" fill="rgb(252,200,53)" rx="2" ry="2" />
<text  x="165.31" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="162.3" y="133" width="0.8" height="15.0" fill="rgb(245,32,43)" rx="2" ry="2" />
<text  x="165.31" y="143.5" ></text>
</g>
<g >
<title>__tls_get_addr (121,212,120 samples, 0.85%)</title><rect x="343.1" y="213" width="10.0" height="15.0" fill="rgb(243,53,38)" rx="2" ry="2" />
<text  x="346.08" y="223.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::pushBlocksImpl (50,505,050 samples, 0.35%)</title><rect x="43.5" y="197" width="4.2" height="15.0" fill="rgb(231,67,40)" rx="2" ry="2" />
<text  x="46.48" y="207.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.14%)</title><rect x="10.0" y="229" width="1.7" height="15.0" fill="rgb(229,211,4)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>__GI___execve (10,101,010 samples, 0.07%)</title><rect x="11.7" y="229" width="0.8" height="15.0" fill="rgb(222,69,14)" rx="2" ry="2" />
<text  x="14.67" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="49.3" y="133" width="0.9" height="15.0" fill="rgb(226,96,7)" rx="2" ry="2" />
<text  x="52.33" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.7" y="69" width="0.8" height="15.0" fill="rgb(215,69,50)" rx="2" ry="2" />
<text  x="14.67" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="162.3" y="181" width="0.8" height="15.0" fill="rgb(224,67,8)" rx="2" ry="2" />
<text  x="165.31" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="166.5" y="117" width="0.8" height="15.0" fill="rgb(253,109,26)" rx="2" ry="2" />
<text  x="169.50" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="197" width="0.8" height="15.0" fill="rgb(223,108,47)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="803.4" y="133" width="1.6" height="15.0" fill="rgb(223,163,23)" rx="2" ry="2" />
<text  x="806.36" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="166.5" y="149" width="0.8" height="15.0" fill="rgb(244,22,18)" rx="2" ry="2" />
<text  x="169.50" y="159.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (10,101,010 samples, 0.07%)</title><rect x="188.3" y="229" width="0.8" height="15.0" fill="rgb(228,62,28)" rx="2" ry="2" />
<text  x="191.26" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="12.5" y="181" width="0.8" height="15.0" fill="rgb(248,168,31)" rx="2" ry="2" />
<text  x="15.51" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="12.5" y="149" width="0.8" height="15.0" fill="rgb(237,166,54)" rx="2" ry="2" />
<text  x="15.51" y="159.5" ></text>
</g>
<g >
<title>__madvise (10,101,010 samples, 0.07%)</title><rect x="162.3" y="229" width="0.8" height="15.0" fill="rgb(249,64,2)" rx="2" ry="2" />
<text  x="165.31" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,111,111,070 samples, 28.87%)</title><rect x="849.4" y="229" width="340.6" height="15.0" fill="rgb(251,146,29)" rx="2" ry="2" />
<text  x="852.39" y="239.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::pushBlocksImpl (30,303,030 samples, 0.21%)</title><rect x="41.0" y="181" width="2.5" height="15.0" fill="rgb(251,37,38)" rx="2" ry="2" />
<text  x="43.96" y="191.5" ></text>
</g>
<g >
<title>swapper (4,111,111,070 samples, 28.87%)</title><rect x="849.4" y="245" width="340.6" height="15.0" fill="rgb(238,226,10)" rx="2" ry="2" />
<text  x="852.39" y="255.5" >swapper</text>
</g>
<g >
<title>hv_kvp_daemon (10,101,010 samples, 0.07%)</title><rect x="12.5" y="245" width="0.8" height="15.0" fill="rgb(233,24,35)" rx="2" ry="2" />
<text  x="15.51" y="255.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::popBatchImpl (202,020,200 samples, 1.42%)</title><rect x="102.1" y="213" width="16.7" height="15.0" fill="rgb(242,85,38)" rx="2" ry="2" />
<text  x="105.06" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="166.5" y="101" width="0.8" height="15.0" fill="rgb(217,129,22)" rx="2" ry="2" />
<text  x="169.50" y="111.5" ></text>
</g>
<g >
<title>all (14,242,424,100 samples, 100%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(229,132,17)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="162.3" y="149" width="0.8" height="15.0" fill="rgb(250,190,54)" rx="2" ry="2" />
<text  x="165.31" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="85" width="0.8" height="15.0" fill="rgb(240,67,14)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="34.3" y="117" width="0.8" height="15.0" fill="rgb(243,136,13)" rx="2" ry="2" />
<text  x="37.27" y="127.5" ></text>
</g>
<g >
<title>[unknown] (2,101,010,080 samples, 14.75%)</title><rect x="1015.9" y="213" width="174.1" height="15.0" fill="rgb(229,86,2)" rx="2" ry="2" />
<text  x="1018.93" y="223.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="12.5" y="165" width="0.8" height="15.0" fill="rgb(213,52,16)" rx="2" ry="2" />
<text  x="15.51" y="175.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::allocate (1,464,646,450 samples, 10.28%)</title><rect x="353.1" y="213" width="121.4" height="15.0" fill="rgb(235,6,41)" rx="2" ry="2" />
<text  x="356.12" y="223.5" >scudo::Allocato..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="133" width="0.8" height="15.0" fill="rgb(214,27,38)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (40,404,040 samples, 0.28%)</title><rect x="163.1" y="229" width="3.4" height="15.0" fill="rgb(208,213,5)" rx="2" ry="2" />
<text  x="166.15" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="12.5" y="133" width="0.8" height="15.0" fill="rgb(210,55,43)" rx="2" ry="2" />
<text  x="15.51" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="803.4" y="149" width="1.6" height="15.0" fill="rgb(246,15,5)" rx="2" ry="2" />
<text  x="806.36" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="69" width="0.8" height="15.0" fill="rgb(220,220,32)" rx="2" ry="2" />
<text  x="13.00" y="79.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::allocate (10,101,010 samples, 0.07%)</title><rect x="486.2" y="213" width="0.8" height="15.0" fill="rgb(229,138,3)" rx="2" ry="2" />
<text  x="489.18" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="803.4" y="165" width="1.6" height="15.0" fill="rgb(242,153,46)" rx="2" ry="2" />
<text  x="806.36" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="846.9" y="213" width="0.8" height="15.0" fill="rgb(242,38,24)" rx="2" ry="2" />
<text  x="849.88" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="166.5" y="165" width="0.8" height="15.0" fill="rgb(246,159,18)" rx="2" ry="2" />
<text  x="169.50" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="803.4" y="213" width="1.6" height="15.0" fill="rgb(244,143,18)" rx="2" ry="2" />
<text  x="806.36" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.7" y="149" width="0.8" height="15.0" fill="rgb(221,64,33)" rx="2" ry="2" />
<text  x="14.67" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="34.3" y="181" width="0.8" height="15.0" fill="rgb(236,16,31)" rx="2" ry="2" />
<text  x="37.27" y="191.5" ></text>
</g>
<g >
<title>[libscudo.so] (141,414,140 samples, 0.99%)</title><rect x="23.4" y="229" width="11.7" height="15.0" fill="rgb(218,46,28)" rx="2" ry="2" />
<text  x="26.39" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="161.5" y="165" width="0.8" height="15.0" fill="rgb(242,42,37)" rx="2" ry="2" />
<text  x="164.48" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="49.3" y="197" width="0.9" height="15.0" fill="rgb(234,102,33)" rx="2" ry="2" />
<text  x="52.33" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="34.3" y="133" width="0.8" height="15.0" fill="rgb(213,5,1)" rx="2" ry="2" />
<text  x="37.27" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="34.3" y="165" width="0.8" height="15.0" fill="rgb(207,55,32)" rx="2" ry="2" />
<text  x="37.27" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="34.3" y="213" width="0.8" height="15.0" fill="rgb(231,172,4)" rx="2" ry="2" />
<text  x="37.27" y="223.5" ></text>
</g>
<g >
<title>scudo::teardownThread&lt;scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt; &gt; (10,101,010 samples, 0.07%)</title><rect x="47.7" y="197" width="0.8" height="15.0" fill="rgb(208,40,27)" rx="2" ry="2" />
<text  x="50.66" y="207.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::releaseToOSMaybe (90,909,090 samples, 0.64%)</title><rect x="828.5" y="229" width="7.5" height="15.0" fill="rgb(228,197,46)" rx="2" ry="2" />
<text  x="831.47" y="239.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (90,909,090 samples, 0.64%)</title><rect x="189.1" y="229" width="7.5" height="15.0" fill="rgb(240,143,47)" rx="2" ry="2" />
<text  x="192.09" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="166.5" y="85" width="0.8" height="15.0" fill="rgb(245,86,35)" rx="2" ry="2" />
<text  x="169.50" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,101,010,080 samples, 14.75%)</title><rect x="1015.9" y="133" width="174.1" height="15.0" fill="rgb(245,162,29)" rx="2" ry="2" />
<text  x="1018.93" y="143.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::allocate (20,202,020 samples, 0.14%)</title><rect x="487.0" y="229" width="1.7" height="15.0" fill="rgb(243,92,53)" rx="2" ry="2" />
<text  x="490.02" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="162.3" y="165" width="0.8" height="15.0" fill="rgb(212,41,24)" rx="2" ry="2" />
<text  x="165.31" y="175.5" ></text>
</g>
<g >
<title>runthreads (10,101,010 samples, 0.07%)</title><rect x="51.0" y="213" width="0.8" height="15.0" fill="rgb(208,192,50)" rx="2" ry="2" />
<text  x="54.01" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,101,010,080 samples, 14.75%)</title><rect x="1015.9" y="117" width="174.1" height="15.0" fill="rgb(225,198,30)" rx="2" ry="2" />
<text  x="1018.93" y="127.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>scudo::SizeClassAllocatorLocalCache&lt;scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt; &gt;::drain (151,515,150 samples, 1.06%)</title><rect x="127.2" y="213" width="12.5" height="15.0" fill="rgb(241,70,33)" rx="2" ry="2" />
<text  x="130.16" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="166.5" y="197" width="0.8" height="15.0" fill="rgb(246,48,3)" rx="2" ry="2" />
<text  x="169.50" y="207.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (40,404,040 samples, 0.28%)</title><rect x="193.3" y="213" width="3.3" height="15.0" fill="rgb(210,169,0)" rx="2" ry="2" />
<text  x="196.28" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,101,010,080 samples, 14.75%)</title><rect x="1015.9" y="69" width="174.1" height="15.0" fill="rgb(243,8,3)" rx="2" ry="2" />
<text  x="1018.93" y="79.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="12.5" y="101" width="0.8" height="15.0" fill="rgb(233,170,3)" rx="2" ry="2" />
<text  x="15.51" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="846.9" y="197" width="0.8" height="15.0" fill="rgb(218,48,43)" rx="2" ry="2" />
<text  x="849.88" y="207.5" ></text>
</g>
<g >
<title>__xstat64 (10,101,010 samples, 0.07%)</title><rect x="10.8" y="213" width="0.9" height="15.0" fill="rgb(254,16,43)" rx="2" ry="2" />
<text  x="13.84" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="803.4" y="197" width="1.6" height="15.0" fill="rgb(208,175,42)" rx="2" ry="2" />
<text  x="806.36" y="207.5" ></text>
</g>
<g >
<title>dirname (10,101,010 samples, 0.07%)</title><rect x="11.7" y="245" width="0.8" height="15.0" fill="rgb(213,161,42)" rx="2" ry="2" />
<text  x="14.67" y="255.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.07%)</title><rect x="12.5" y="229" width="0.8" height="15.0" fill="rgb(209,65,44)" rx="2" ry="2" />
<text  x="15.51" y="239.5" ></text>
</g>
<g >
<title>python3 (10,101,010 samples, 0.07%)</title><rect x="847.7" y="245" width="0.9" height="15.0" fill="rgb(231,177,35)" rx="2" ry="2" />
<text  x="850.72" y="255.5" ></text>
</g>
<g >
<title>syscall (20,202,020 samples, 0.14%)</title><rect x="160.6" y="213" width="1.7" height="15.0" fill="rgb(243,222,20)" rx="2" ry="2" />
<text  x="163.64" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="49.3" y="165" width="0.9" height="15.0" fill="rgb(230,127,35)" rx="2" ry="2" />
<text  x="52.33" y="175.5" ></text>
</g>
</g>
</svg>
