<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="278" onload="init(evt)" viewBox="0 0 1200 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="278.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="261" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="261" > </text>
<g id="frames">
<g >
<title>palloc (737,373,730 samples, 3.86%)</title><rect x="478.9" y="197" width="45.6" height="15.0" fill="rgb(226,106,46)" rx="2" ry="2" />
<text  x="481.88" y="207.5" >palloc</text>
</g>
<g >
<title>[unknown] (3,959,595,920 samples, 20.74%)</title><rect x="945.3" y="149" width="244.7" height="15.0" fill="rgb(228,23,6)" rx="2" ry="2" />
<text  x="948.26" y="159.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,575,757,520 samples, 29.21%)</title><rect x="600.6" y="181" width="344.7" height="15.0" fill="rgb(253,190,44)" rx="2" ry="2" />
<text  x="603.62" y="191.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.05%)</title><rect x="599.4" y="197" width="0.6" height="15.0" fill="rgb(234,175,49)" rx="2" ry="2" />
<text  x="602.38" y="207.5" ></text>
</g>
<g >
<title>maybe_initialize_malloc (60,606,060 samples, 0.32%)</title><rect x="92.4" y="181" width="3.8" height="15.0" fill="rgb(251,112,13)" rx="2" ry="2" />
<text  x="95.41" y="191.5" ></text>
</g>
<g >
<title>palloc (1,030,303,020 samples, 5.40%)</title><rect x="149.9" y="181" width="63.6" height="15.0" fill="rgb(236,53,10)" rx="2" ry="2" />
<text  x="152.85" y="191.5" >palloc</text>
</g>
<g >
<title>__tls_get_addr (30,303,030 samples, 0.16%)</title><rect x="458.3" y="197" width="1.8" height="15.0" fill="rgb(234,68,1)" rx="2" ry="2" />
<text  x="461.28" y="207.5" ></text>
</g>
<g >
<title>[unknown] (6,959,595,890 samples, 36.46%)</title><rect x="26.9" y="197" width="430.1" height="15.0" fill="rgb(222,184,25)" rx="2" ry="2" />
<text  x="29.86" y="207.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="600.0" y="85" width="0.6" height="15.0" fill="rgb(241,40,21)" rx="2" ry="2" />
<text  x="603.00" y="95.5" ></text>
</g>
<g >
<title>__pthread_setspecific (20,202,020 samples, 0.11%)</title><rect x="490.1" y="181" width="1.3" height="15.0" fill="rgb(252,98,39)" rx="2" ry="2" />
<text  x="493.12" y="191.5" ></text>
</g>
<g >
<title>pcmpz (30,303,030 samples, 0.16%)</title><rect x="245.4" y="181" width="1.8" height="15.0" fill="rgb(240,54,3)" rx="2" ry="2" />
<text  x="248.38" y="191.5" ></text>
</g>
<g >
<title>[unknown] (40,404,040 samples, 0.21%)</title><rect x="48.1" y="165" width="2.5" height="15.0" fill="rgb(220,206,5)" rx="2" ry="2" />
<text  x="51.08" y="175.5" ></text>
</g>
<g >
<title>cached_malloc (676,767,670 samples, 3.54%)</title><rect x="166.7" y="165" width="41.8" height="15.0" fill="rgb(207,146,22)" rx="2" ry="2" />
<text  x="169.71" y="175.5" >cac..</text>
</g>
<g >
<title>__tls_get_addr (101,010,100 samples, 0.53%)</title><rect x="160.5" y="165" width="6.2" height="15.0" fill="rgb(213,25,14)" rx="2" ry="2" />
<text  x="163.47" y="175.5" ></text>
</g>
<g >
<title>[bash] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="181" width="0.6" height="15.0" fill="rgb(209,102,39)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>cached_free (121,212,120 samples, 0.63%)</title><rect x="460.1" y="197" width="7.5" height="15.0" fill="rgb(220,141,42)" rx="2" ry="2" />
<text  x="463.15" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,959,595,920 samples, 20.74%)</title><rect x="945.3" y="101" width="244.7" height="15.0" fill="rgb(248,168,31)" rx="2" ry="2" />
<text  x="948.26" y="111.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>pfree (50,505,050 samples, 0.26%)</title><rect x="281.6" y="181" width="3.1" height="15.0" fill="rgb(211,67,7)" rx="2" ry="2" />
<text  x="284.59" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.6" y="69" width="0.6" height="15.0" fill="rgb(212,52,30)" rx="2" ry="2" />
<text  x="13.62" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="600.0" y="69" width="0.6" height="15.0" fill="rgb(252,158,27)" rx="2" ry="2" />
<text  x="603.00" y="79.5" ></text>
</g>
<g >
<title>pimod (2,191,919,170 samples, 11.48%)</title><rect x="291.6" y="181" width="135.5" height="15.0" fill="rgb(233,165,21)" rx="2" ry="2" />
<text  x="294.58" y="191.5" >pimod</text>
</g>
<g >
<title>free (151,515,150 samples, 0.79%)</title><rect x="80.6" y="181" width="9.3" height="15.0" fill="rgb(248,19,19)" rx="2" ry="2" />
<text  x="83.55" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="600.0" y="165" width="0.6" height="15.0" fill="rgb(238,68,20)" rx="2" ry="2" />
<text  x="603.00" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.6" y="149" width="0.6" height="15.0" fill="rgb(224,127,8)" rx="2" ry="2" />
<text  x="13.62" y="159.5" ></text>
</g>
<g >
<title>[libsupermalloc.so] (141,414,140 samples, 0.74%)</title><rect x="481.4" y="181" width="8.7" height="15.0" fill="rgb(215,85,52)" rx="2" ry="2" />
<text  x="484.38" y="191.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.42%)</title><rect x="470.1" y="197" width="5.0" height="15.0" fill="rgb(246,154,25)" rx="2" ry="2" />
<text  x="473.14" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,959,595,920 samples, 20.74%)</title><rect x="945.3" y="69" width="244.7" height="15.0" fill="rgb(237,91,12)" rx="2" ry="2" />
<text  x="948.26" y="79.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>init_cache (40,404,040 samples, 0.21%)</title><rect x="89.9" y="181" width="2.5" height="15.0" fill="rgb(219,40,22)" rx="2" ry="2" />
<text  x="92.92" y="191.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.05%)</title><rect x="599.4" y="165" width="0.6" height="15.0" fill="rgb(214,43,43)" rx="2" ry="2" />
<text  x="602.38" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="600.0" y="133" width="0.6" height="15.0" fill="rgb(210,117,46)" rx="2" ry="2" />
<text  x="603.00" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="600.0" y="53" width="0.6" height="15.0" fill="rgb(227,20,51)" rx="2" ry="2" />
<text  x="603.00" y="63.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.05%)</title><rect x="599.4" y="181" width="0.6" height="15.0" fill="rgb(245,50,28)" rx="2" ry="2" />
<text  x="602.38" y="191.5" ></text>
</g>
<g >
<title>__tls_get_addr (60,606,060 samples, 0.32%)</title><rect x="65.6" y="181" width="3.7" height="15.0" fill="rgb(214,100,39)" rx="2" ry="2" />
<text  x="68.57" y="191.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.11%)</title><rect x="10.0" y="197" width="1.2" height="15.0" fill="rgb(225,77,20)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="600.0" y="117" width="0.6" height="15.0" fill="rgb(226,185,3)" rx="2" ry="2" />
<text  x="603.00" y="127.5" ></text>
</g>
<g >
<title>__pthread_setspecific (232,323,230 samples, 1.22%)</title><rect x="51.2" y="181" width="14.4" height="15.0" fill="rgb(215,114,45)" rx="2" ry="2" />
<text  x="54.21" y="191.5" ></text>
</g>
<g >
<title>redis-server (10,101,010 samples, 0.05%)</title><rect x="600.0" y="213" width="0.6" height="15.0" fill="rgb(236,159,36)" rx="2" ry="2" />
<text  x="603.00" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.6" y="85" width="0.6" height="15.0" fill="rgb(225,227,53)" rx="2" ry="2" />
<text  x="13.62" y="95.5" ></text>
</g>
<g >
<title>size_2_bin (191,919,190 samples, 1.01%)</title><rect x="587.5" y="197" width="11.9" height="15.0" fill="rgb(227,106,13)" rx="2" ry="2" />
<text  x="590.51" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,959,595,920 samples, 20.74%)</title><rect x="945.3" y="53" width="244.7" height="15.0" fill="rgb(206,32,49)" rx="2" ry="2" />
<text  x="948.26" y="63.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>cached_free (10,101,010 samples, 0.05%)</title><rect x="50.6" y="165" width="0.6" height="15.0" fill="rgb(210,70,29)" rx="2" ry="2" />
<text  x="53.58" y="175.5" ></text>
</g>
<g >
<title>object_base (686,868,680 samples, 3.60%)</title><rect x="96.2" y="181" width="42.4" height="15.0" fill="rgb(220,186,5)" rx="2" ry="2" />
<text  x="99.16" y="191.5" >obj..</text>
</g>
<g >
<title>init_cache (80,808,080 samples, 0.42%)</title><rect x="208.5" y="165" width="5.0" height="15.0" fill="rgb(221,210,30)" rx="2" ry="2" />
<text  x="211.54" y="175.5" ></text>
</g>
<g >
<title>pcfrac (121,212,120 samples, 0.63%)</title><rect x="213.5" y="181" width="7.5" height="15.0" fill="rgb(247,19,0)" rx="2" ry="2" />
<text  x="216.53" y="191.5" ></text>
</g>
<g >
<title>[cfrac] (80,808,080 samples, 0.42%)</title><rect x="11.2" y="197" width="5.0" height="15.0" fill="rgb(215,29,33)" rx="2" ry="2" />
<text  x="14.25" y="207.5" ></text>
</g>
<g >
<title>pfactorQ (232,323,230 samples, 1.22%)</title><rect x="267.2" y="181" width="14.4" height="15.0" fill="rgb(241,228,52)" rx="2" ry="2" />
<text  x="270.23" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,959,595,920 samples, 20.74%)</title><rect x="945.3" y="37" width="244.7" height="15.0" fill="rgb(212,131,46)" rx="2" ry="2" />
<text  x="948.26" y="47.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,575,757,520 samples, 29.21%)</title><rect x="600.6" y="165" width="344.7" height="15.0" fill="rgb(214,60,12)" rx="2" ry="2" />
<text  x="603.62" y="175.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[unknown] (50,505,050 samples, 0.26%)</title><rect x="48.1" y="181" width="3.1" height="15.0" fill="rgb(231,7,47)" rx="2" ry="2" />
<text  x="51.08" y="191.5" ></text>
</g>
<g >
<title>__tls_get_addr (70,707,070 samples, 0.37%)</title><rect x="491.4" y="181" width="4.3" height="15.0" fill="rgb(254,201,30)" rx="2" ry="2" />
<text  x="494.37" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,535,353,440 samples, 49.95%)</title><rect x="600.6" y="197" width="589.4" height="15.0" fill="rgb(218,72,41)" rx="2" ry="2" />
<text  x="603.62" y="207.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>picmp (20,202,020 samples, 0.11%)</title><rect x="284.7" y="181" width="1.3" height="15.0" fill="rgb(224,206,23)" rx="2" ry="2" />
<text  x="287.71" y="191.5" ></text>
</g>
<g >
<title>pmul (292,929,290 samples, 1.53%)</title><rect x="427.1" y="181" width="18.1" height="15.0" fill="rgb(206,215,49)" rx="2" ry="2" />
<text  x="430.06" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="600.0" y="101" width="0.6" height="15.0" fill="rgb(231,18,36)" rx="2" ry="2" />
<text  x="603.00" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,575,757,520 samples, 29.21%)</title><rect x="600.6" y="101" width="344.7" height="15.0" fill="rgb(236,184,13)" rx="2" ry="2" />
<text  x="603.62" y="111.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>__libc_read (10,101,010 samples, 0.05%)</title><rect x="600.0" y="197" width="0.6" height="15.0" fill="rgb(222,67,35)" rx="2" ry="2" />
<text  x="603.00" y="207.5" ></text>
</g>
<g >
<title>cfrac (9,515,151,420 samples, 49.84%)</title><rect x="11.2" y="213" width="588.2" height="15.0" fill="rgb(237,59,16)" rx="2" ry="2" />
<text  x="14.25" y="223.5" >cfrac</text>
</g>
<g >
<title>pfree (20,202,020 samples, 0.11%)</title><rect x="49.3" y="149" width="1.3" height="15.0" fill="rgb(207,74,14)" rx="2" ry="2" />
<text  x="52.33" y="159.5" ></text>
</g>
<g >
<title>[unknown] (3,959,595,920 samples, 20.74%)</title><rect x="945.3" y="133" width="244.7" height="15.0" fill="rgb(206,89,28)" rx="2" ry="2" />
<text  x="948.26" y="143.5" >[unknown]</text>
</g>
<g >
<title>__strcasecmp_l_avx (10,101,010 samples, 0.05%)</title><rect x="599.4" y="149" width="0.6" height="15.0" fill="rgb(206,54,41)" rx="2" ry="2" />
<text  x="602.38" y="159.5" ></text>
</g>
<g >
<title>pcmp (393,939,390 samples, 2.06%)</title><rect x="221.0" y="181" width="24.4" height="15.0" fill="rgb(219,69,48)" rx="2" ry="2" />
<text  x="224.03" y="191.5" >p..</text>
</g>
<g >
<title>psub (191,919,190 samples, 1.01%)</title><rect x="445.2" y="181" width="11.8" height="15.0" fill="rgb(217,63,4)" rx="2" ry="2" />
<text  x="448.16" y="191.5" ></text>
</g>
<g >
<title>__pthread_setspecific (20,202,020 samples, 0.11%)</title><rect x="457.0" y="197" width="1.3" height="15.0" fill="rgb(214,191,53)" rx="2" ry="2" />
<text  x="460.03" y="207.5" ></text>
</g>
<g >
<title>cached_malloc (30,303,030 samples, 0.16%)</title><rect x="78.7" y="181" width="1.9" height="15.0" fill="rgb(233,211,19)" rx="2" ry="2" />
<text  x="81.68" y="191.5" ></text>
</g>
<g >
<title>cached_malloc (373,737,370 samples, 1.96%)</title><rect x="495.7" y="181" width="23.1" height="15.0" fill="rgb(236,219,30)" rx="2" ry="2" />
<text  x="498.74" y="191.5" >c..</text>
</g>
<g >
<title>maybe_initialize_malloc (60,606,060 samples, 0.32%)</title><rect x="475.1" y="197" width="3.8" height="15.0" fill="rgb(218,183,4)" rx="2" ry="2" />
<text  x="478.13" y="207.5" ></text>
</g>
<g >
<title>[libsupermalloc.so] (111,111,110 samples, 0.58%)</title><rect x="152.3" y="165" width="6.9" height="15.0" fill="rgb(231,138,11)" rx="2" ry="2" />
<text  x="155.35" y="175.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.05%)</title><rect x="48.1" y="149" width="0.6" height="15.0" fill="rgb(234,158,49)" rx="2" ry="2" />
<text  x="51.08" y="159.5" ></text>
</g>
<g >
<title>padd (181,818,180 samples, 0.95%)</title><rect x="138.6" y="181" width="11.3" height="15.0" fill="rgb(225,1,40)" rx="2" ry="2" />
<text  x="141.61" y="191.5" ></text>
</g>
<g >
<title>__pthread_setspecific (20,202,020 samples, 0.11%)</title><rect x="159.2" y="165" width="1.3" height="15.0" fill="rgb(208,23,28)" rx="2" ry="2" />
<text  x="162.22" y="175.5" ></text>
</g>
<g >
<title>pfree (10,101,010 samples, 0.05%)</title><rect x="586.9" y="197" width="0.6" height="15.0" fill="rgb(228,159,45)" rx="2" ry="2" />
<text  x="589.89" y="207.5" ></text>
</g>
<g >
<title>cached_free (10,101,010 samples, 0.05%)</title><rect x="48.7" y="149" width="0.6" height="15.0" fill="rgb(223,92,53)" rx="2" ry="2" />
<text  x="51.71" y="159.5" ></text>
</g>
<g >
<title>pdivmod (1,010,101,000 samples, 5.29%)</title><rect x="524.5" y="197" width="62.4" height="15.0" fill="rgb(228,64,11)" rx="2" ry="2" />
<text  x="527.46" y="207.5" >pdivmod</text>
</g>
<g >
<title>swapper (9,535,353,440 samples, 49.95%)</title><rect x="600.6" y="213" width="589.4" height="15.0" fill="rgb(242,52,42)" rx="2" ry="2" />
<text  x="603.62" y="223.5" >swapper</text>
</g>
<g >
<title>init_cache (90,909,090 samples, 0.48%)</title><rect x="518.8" y="181" width="5.7" height="15.0" fill="rgb(239,195,32)" rx="2" ry="2" />
<text  x="521.84" y="191.5" ></text>
</g>
<g >
<title>[unknown] (3,959,595,920 samples, 20.74%)</title><rect x="945.3" y="181" width="244.7" height="15.0" fill="rgb(245,220,21)" rx="2" ry="2" />
<text  x="948.26" y="191.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,575,757,520 samples, 29.21%)</title><rect x="600.6" y="149" width="344.7" height="15.0" fill="rgb(209,209,43)" rx="2" ry="2" />
<text  x="603.62" y="159.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,575,757,520 samples, 29.21%)</title><rect x="600.6" y="133" width="344.7" height="15.0" fill="rgb(208,114,25)" rx="2" ry="2" />
<text  x="603.62" y="143.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>bench.sh (20,202,020 samples, 0.11%)</title><rect x="10.0" y="213" width="1.2" height="15.0" fill="rgb(234,107,35)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.6" y="101" width="0.6" height="15.0" fill="rgb(227,178,10)" rx="2" ry="2" />
<text  x="13.62" y="111.5" ></text>
</g>
<g >
<title>dirname (10,101,010 samples, 0.05%)</title><rect x="599.4" y="213" width="0.6" height="15.0" fill="rgb(230,105,53)" rx="2" ry="2" />
<text  x="602.38" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="600.0" y="37" width="0.6" height="15.0" fill="rgb(226,171,11)" rx="2" ry="2" />
<text  x="603.00" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="600.0" y="149" width="0.6" height="15.0" fill="rgb(217,148,47)" rx="2" ry="2" />
<text  x="603.00" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.6" y="53" width="0.6" height="15.0" fill="rgb(213,8,17)" rx="2" ry="2" />
<text  x="13.62" y="63.5" ></text>
</g>
<g >
<title>cached_free (151,515,150 samples, 0.79%)</title><rect x="69.3" y="181" width="9.4" height="15.0" fill="rgb(213,126,33)" rx="2" ry="2" />
<text  x="72.31" y="191.5" ></text>
</g>
<g >
<title>pdivmod (323,232,320 samples, 1.69%)</title><rect x="247.2" y="181" width="20.0" height="15.0" fill="rgb(212,3,53)" rx="2" ry="2" />
<text  x="250.25" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="600.0" y="181" width="0.6" height="15.0" fill="rgb(242,45,2)" rx="2" ry="2" />
<text  x="603.00" y="191.5" ></text>
</g>
<g >
<title>[unknown] (3,959,595,920 samples, 20.74%)</title><rect x="945.3" y="165" width="244.7" height="15.0" fill="rgb(248,52,25)" rx="2" ry="2" />
<text  x="948.26" y="175.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.6" y="117" width="0.6" height="15.0" fill="rgb(247,143,48)" rx="2" ry="2" />
<text  x="13.62" y="127.5" ></text>
</g>
<g >
<title>[libsupermalloc.so] (171,717,170 samples, 0.90%)</title><rect x="16.2" y="197" width="10.7" height="15.0" fill="rgb(253,188,46)" rx="2" ry="2" />
<text  x="19.24" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,575,757,520 samples, 29.21%)</title><rect x="600.6" y="117" width="344.7" height="15.0" fill="rgb(219,186,15)" rx="2" ry="2" />
<text  x="603.62" y="127.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>cached_malloc (10,101,010 samples, 0.05%)</title><rect x="467.6" y="197" width="0.7" height="15.0" fill="rgb(225,228,19)" rx="2" ry="2" />
<text  x="470.64" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.6" y="37" width="0.6" height="15.0" fill="rgb(216,218,20)" rx="2" ry="2" />
<text  x="13.62" y="47.5" ></text>
</g>
<g >
<title>[libsupermalloc.so] (242,424,240 samples, 1.27%)</title><rect x="33.1" y="181" width="15.0" height="15.0" fill="rgb(209,109,31)" rx="2" ry="2" />
<text  x="36.10" y="191.5" ></text>
</g>
<g >
<title>[cfrac] (101,010,100 samples, 0.53%)</title><rect x="26.9" y="181" width="6.2" height="15.0" fill="rgb(229,112,48)" rx="2" ry="2" />
<text  x="29.86" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_open (10,101,010 samples, 0.05%)</title><rect x="10.6" y="181" width="0.6" height="15.0" fill="rgb(254,114,24)" rx="2" ry="2" />
<text  x="13.62" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,959,595,920 samples, 20.74%)</title><rect x="945.3" y="117" width="244.7" height="15.0" fill="rgb(217,144,45)" rx="2" ry="2" />
<text  x="948.26" y="127.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,959,595,920 samples, 20.74%)</title><rect x="945.3" y="85" width="244.7" height="15.0" fill="rgb(208,181,41)" rx="2" ry="2" />
<text  x="948.26" y="95.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>pidiv (90,909,090 samples, 0.48%)</title><rect x="286.0" y="181" width="5.6" height="15.0" fill="rgb(223,107,45)" rx="2" ry="2" />
<text  x="288.96" y="191.5" ></text>
</g>
<g >
<title>all (19,090,908,900 samples, 100%)</title><rect x="10.0" y="229" width="1180.0" height="15.0" fill="rgb(253,23,48)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>init_cache (30,303,030 samples, 0.16%)</title><rect x="468.3" y="197" width="1.8" height="15.0" fill="rgb(206,186,33)" rx="2" ry="2" />
<text  x="471.26" y="207.5" ></text>
</g>
<g >
<title>padd (10,101,010 samples, 0.05%)</title><rect x="48.1" y="133" width="0.6" height="15.0" fill="rgb(243,189,27)" rx="2" ry="2" />
<text  x="51.08" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.6" y="165" width="0.6" height="15.0" fill="rgb(205,40,17)" rx="2" ry="2" />
<text  x="13.62" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.6" y="133" width="0.6" height="15.0" fill="rgb(228,36,21)" rx="2" ry="2" />
<text  x="13.62" y="143.5" ></text>
</g>
</g>
</svg>
