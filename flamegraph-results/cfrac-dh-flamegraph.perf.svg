<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>get_common_indices.constprop.0 (10,101,010 samples, 0.01%)</title><rect x="601.5" y="229" width="0.1" height="15.0" fill="rgb(249,208,15)" rx="2" ry="2" />
<text  x="604.47" y="239.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (40,404,040 samples, 0.06%)</title><rect x="262.3" y="229" width="0.7" height="15.0" fill="rgb(239,54,25)" rx="2" ry="2" />
<text  x="265.30" y="239.5" ></text>
</g>
<g >
<title>staticlog@plt (2,131,313,110 samples, 2.92%)</title><rect x="553.0" y="245" width="34.4" height="15.0" fill="rgb(237,149,48)" rx="2" ry="2" />
<text  x="555.97" y="255.5" >st..</text>
</g>
<g >
<title>_dl_sysdep_start (10,101,010 samples, 0.01%)</title><rect x="599.5" y="229" width="0.2" height="15.0" fill="rgb(216,103,16)" rx="2" ry="2" />
<text  x="602.51" y="239.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 32ul, 2048ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::getPageFromIndex@plt (30,303,030 samples, 0.04%)</title><rect x="120.7" y="245" width="0.5" height="15.0" fill="rgb(239,219,51)" rx="2" ry="2" />
<text  x="123.72" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.5" y="101" width="0.2" height="15.0" fill="rgb(241,97,33)" rx="2" ry="2" />
<text  x="602.51" y="111.5" ></text>
</g>
<g >
<title>[python3.8] (30,303,030 samples, 0.04%)</title><rect x="600.0" y="229" width="0.5" height="15.0" fill="rgb(213,180,23)" rx="2" ry="2" />
<text  x="603.00" y="239.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (191,919,190 samples, 0.26%)</title><rect x="465.8" y="245" width="3.1" height="15.0" fill="rgb(217,214,29)" rx="2" ry="2" />
<text  x="468.77" y="255.5" ></text>
</g>
<g >
<title>pimod (2,050,505,030 samples, 2.81%)</title><rect x="214.8" y="229" width="33.1" height="15.0" fill="rgb(232,122,45)" rx="2" ry="2" />
<text  x="217.78" y="239.5" >pi..</text>
</g>
<g >
<title>DieHardHeap&lt;8, 7, 65536, false, true&gt;::free@plt (30,303,030 samples, 0.04%)</title><rect x="130.8" y="229" width="0.5" height="15.0" fill="rgb(211,116,36)" rx="2" ry="2" />
<text  x="133.84" y="239.5" ></text>
</g>
<g >
<title>RandomMiniHeapCore&lt;8, 7, 32ul, 2048ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false, true&gt;::malloc (1,696,969,680 samples, 2.32%)</title><rect x="65.5" y="245" width="27.5" height="15.0" fill="rgb(235,111,45)" rx="2" ry="2" />
<text  x="68.52" y="255.5" >R..</text>
</g>
<g >
<title>staticlog (5,202,020,150 samples, 7.13%)</title><rect x="468.9" y="245" width="84.1" height="15.0" fill="rgb(222,145,34)" rx="2" ry="2" />
<text  x="471.87" y="255.5" >staticlog</text>
</g>
<g >
<title>dirname (10,101,010 samples, 0.01%)</title><rect x="599.5" y="261" width="0.2" height="15.0" fill="rgb(212,111,35)" rx="2" ry="2" />
<text  x="602.51" y="271.5" ></text>
</g>
<g >
<title>[cfrac] (90,909,090 samples, 0.12%)</title><rect x="132.3" y="229" width="1.5" height="15.0" fill="rgb(229,205,21)" rx="2" ry="2" />
<text  x="135.31" y="239.5" ></text>
</g>
<g >
<title>pfree (121,212,120 samples, 0.17%)</title><rect x="438.5" y="245" width="2.0" height="15.0" fill="rgb(225,55,29)" rx="2" ry="2" />
<text  x="441.50" y="255.5" ></text>
</g>
<g >
<title>xxfree (454,545,450 samples, 0.62%)</title><rect x="264.4" y="229" width="7.4" height="15.0" fill="rgb(206,15,8)" rx="2" ry="2" />
<text  x="267.42" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.7" y="197" width="0.1" height="15.0" fill="rgb(252,31,1)" rx="2" ry="2" />
<text  x="602.67" y="207.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (60,606,060 samples, 0.08%)</title><rect x="263.0" y="229" width="0.9" height="15.0" fill="rgb(213,71,38)" rx="2" ry="2" />
<text  x="265.95" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="254.5" y="165" width="0.1" height="15.0" fill="rgb(232,75,14)" rx="2" ry="2" />
<text  x="257.46" y="175.5" ></text>
</g>
<g >
<title>RandomMiniHeapCore&lt;8, 7, 16ul, 4096ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 16ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false, true&gt;::malloc (303,030,300 samples, 0.42%)</title><rect x="60.0" y="245" width="4.9" height="15.0" fill="rgb(249,36,39)" rx="2" ry="2" />
<text  x="62.97" y="255.5" ></text>
</g>
<g >
<title>RandomHeap&lt;8, 7, 16ul, 65536ul, RandomMiniHeap, false, true&gt;::free (242,424,240 samples, 0.33%)</title><rect x="32.9" y="245" width="3.9" height="15.0" fill="rgb(234,75,24)" rx="2" ry="2" />
<text  x="35.86" y="255.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (70,707,070 samples, 0.10%)</title><rect x="261.2" y="229" width="1.1" height="15.0" fill="rgb(215,172,54)" rx="2" ry="2" />
<text  x="264.15" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.7" y="85" width="0.1" height="15.0" fill="rgb(224,13,44)" rx="2" ry="2" />
<text  x="602.67" y="95.5" ></text>
</g>
<g >
<title>pdivmod (393,939,390 samples, 0.54%)</title><rect x="191.9" y="229" width="6.4" height="15.0" fill="rgb(215,108,2)" rx="2" ry="2" />
<text  x="194.92" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.5" y="85" width="0.2" height="15.0" fill="rgb(209,214,41)" rx="2" ry="2" />
<text  x="602.51" y="95.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (20,202,020 samples, 0.03%)</title><rect x="134.4" y="229" width="0.4" height="15.0" fill="rgb(252,36,33)" rx="2" ry="2" />
<text  x="137.43" y="239.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 16ul, 8192ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 16ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::free (30,303,030 samples, 0.04%)</title><rect x="109.0" y="245" width="0.4" height="15.0" fill="rgb(239,139,16)" rx="2" ry="2" />
<text  x="111.96" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.7" y="213" width="0.1" height="15.0" fill="rgb(225,37,13)" rx="2" ry="2" />
<text  x="602.67" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="254.5" y="213" width="0.1" height="15.0" fill="rgb(226,139,24)" rx="2" ry="2" />
<text  x="257.46" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="254.5" y="197" width="0.1" height="15.0" fill="rgb(234,46,16)" rx="2" ry="2" />
<text  x="257.46" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,717,171,610 samples, 14.68%)</title><rect x="1016.7" y="165" width="173.3" height="15.0" fill="rgb(235,223,46)" rx="2" ry="2" />
<text  x="1019.74" y="175.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.3" y="101" width="0.2" height="15.0" fill="rgb(226,22,20)" rx="2" ry="2" />
<text  x="604.31" y="111.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 32ul, 2048ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::inBounds (161,616,160 samples, 0.22%)</title><rect x="121.2" y="245" width="2.6" height="15.0" fill="rgb(249,151,37)" rx="2" ry="2" />
<text  x="124.21" y="255.5" ></text>
</g>
<g >
<title>xxmalloc@plt (20,202,020 samples, 0.03%)</title><rect x="599.2" y="245" width="0.3" height="15.0" fill="rgb(217,80,37)" rx="2" ry="2" />
<text  x="602.18" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="254.5" y="117" width="0.1" height="15.0" fill="rgb(220,70,7)" rx="2" ry="2" />
<text  x="257.46" y="127.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (20,202,020 samples, 0.03%)</title><rect x="600.5" y="229" width="0.3" height="15.0" fill="rgb(245,199,8)" rx="2" ry="2" />
<text  x="603.49" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.5" y="69" width="0.2" height="15.0" fill="rgb(240,184,48)" rx="2" ry="2" />
<text  x="602.51" y="79.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (3,909,090,870 samples, 5.36%)</title><rect x="273.6" y="245" width="63.2" height="15.0" fill="rgb(243,199,27)" rx="2" ry="2" />
<text  x="276.56" y="255.5" >__pthr..</text>
</g>
<g >
<title>podd (10,101,010 samples, 0.01%)</title><rect x="254.6" y="229" width="0.2" height="15.0" fill="rgb(236,217,2)" rx="2" ry="2" />
<text  x="257.62" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,717,171,610 samples, 14.68%)</title><rect x="1016.7" y="117" width="173.3" height="15.0" fill="rgb(215,151,48)" rx="2" ry="2" />
<text  x="1019.74" y="127.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>pnorm (10,101,010 samples, 0.01%)</title><rect x="440.5" y="245" width="0.1" height="15.0" fill="rgb(242,87,7)" rx="2" ry="2" />
<text  x="443.46" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.7" y="149" width="0.1" height="15.0" fill="rgb(226,33,28)" rx="2" ry="2" />
<text  x="602.67" y="159.5" ></text>
</g>
<g >
<title>DieHardHeap&lt;8, 7, 65536, false, true&gt;::free (50,505,050 samples, 0.07%)</title><rect x="10.0" y="245" width="0.8" height="15.0" fill="rgb(248,164,12)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,676,767,420 samples, 35.18%)</title><rect x="601.6" y="165" width="415.1" height="15.0" fill="rgb(214,73,20)" rx="2" ry="2" />
<text  x="604.63" y="175.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,717,171,610 samples, 14.68%)</title><rect x="1016.7" y="133" width="173.3" height="15.0" fill="rgb(242,104,6)" rx="2" ry="2" />
<text  x="1019.74" y="143.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 32ul, 4096ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::computeIndex (50,505,050 samples, 0.07%)</title><rect x="123.8" y="245" width="0.8" height="15.0" fill="rgb(244,79,12)" rx="2" ry="2" />
<text  x="126.82" y="255.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 32ul, 4096ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::inBounds (30,303,030 samples, 0.04%)</title><rect x="127.9" y="245" width="0.5" height="15.0" fill="rgb(250,178,40)" rx="2" ry="2" />
<text  x="130.90" y="255.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 16ul, 4096ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 16ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::getPageFromIndex (40,404,040 samples, 0.06%)</title><rect x="102.9" y="245" width="0.7" height="15.0" fill="rgb(248,102,24)" rx="2" ry="2" />
<text  x="105.92" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.3" y="133" width="0.2" height="15.0" fill="rgb(241,120,54)" rx="2" ry="2" />
<text  x="604.31" y="143.5" ></text>
</g>
<g >
<title>all (72,989,898,260 samples, 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(206,223,41)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>pdivmod (10,101,010 samples, 0.01%)</title><rect x="134.3" y="213" width="0.1" height="15.0" fill="rgb(228,92,10)" rx="2" ry="2" />
<text  x="137.27" y="223.5" ></text>
</g>
<g >
<title>palloc (90,909,090 samples, 0.12%)</title><rect x="170.2" y="229" width="1.5" height="15.0" fill="rgb(245,172,9)" rx="2" ry="2" />
<text  x="173.20" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.5" y="197" width="0.2" height="15.0" fill="rgb(220,137,2)" rx="2" ry="2" />
<text  x="602.51" y="207.5" ></text>
</g>
<g >
<title>[unknown] (10,717,171,610 samples, 14.68%)</title><rect x="1016.7" y="197" width="173.3" height="15.0" fill="rgb(211,208,29)" rx="2" ry="2" />
<text  x="1019.74" y="207.5" >[unknown]</text>
</g>
<g >
<title>python3 (50,505,050 samples, 0.07%)</title><rect x="600.0" y="261" width="0.8" height="15.0" fill="rgb(228,193,3)" rx="2" ry="2" />
<text  x="603.00" y="271.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (737,373,730 samples, 1.01%)</title><rect x="453.8" y="245" width="12.0" height="15.0" fill="rgb(239,112,36)" rx="2" ry="2" />
<text  x="456.85" y="255.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 32ul, 4096ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::getPageFromIndex (70,707,070 samples, 0.10%)</title><rect x="126.4" y="245" width="1.2" height="15.0" fill="rgb(235,164,6)" rx="2" ry="2" />
<text  x="129.43" y="255.5" ></text>
</g>
<g >
<title>gc_worker (10,101,010 samples, 0.01%)</title><rect x="599.8" y="181" width="0.2" height="15.0" fill="rgb(224,86,14)" rx="2" ry="2" />
<text  x="602.84" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.3" y="213" width="0.2" height="15.0" fill="rgb(250,145,20)" rx="2" ry="2" />
<text  x="604.31" y="223.5" ></text>
</g>
<g >
<title>epoll_wait (20,202,020 samples, 0.03%)</title><rect x="601.0" y="245" width="0.3" height="15.0" fill="rgb(249,211,15)" rx="2" ry="2" />
<text  x="603.98" y="255.5" ></text>
</g>
<g >
<title>RandomMiniHeapCore&lt;8, 7, 16ul, 8192ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 16ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false, true&gt;::malloc (40,404,040 samples, 0.06%)</title><rect x="64.9" y="245" width="0.6" height="15.0" fill="rgb(208,138,18)" rx="2" ry="2" />
<text  x="67.87" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.7" y="133" width="0.1" height="15.0" fill="rgb(222,186,13)" rx="2" ry="2" />
<text  x="602.67" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,717,171,610 samples, 14.68%)</title><rect x="1016.7" y="101" width="173.3" height="15.0" fill="rgb(238,154,14)" rx="2" ry="2" />
<text  x="1019.74" y="111.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.7" y="69" width="0.1" height="15.0" fill="rgb(226,26,25)" rx="2" ry="2" />
<text  x="602.67" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.7" y="229" width="0.1" height="15.0" fill="rgb(209,196,53)" rx="2" ry="2" />
<text  x="602.67" y="239.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 32ul, 4096ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::free (80,808,080 samples, 0.11%)</title><rect x="124.6" y="245" width="1.3" height="15.0" fill="rgb(225,133,20)" rx="2" ry="2" />
<text  x="127.64" y="255.5" ></text>
</g>
<g >
<title>pfree (191,919,190 samples, 0.26%)</title><rect x="206.9" y="229" width="3.1" height="15.0" fill="rgb(249,218,41)" rx="2" ry="2" />
<text  x="209.94" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.1" y="149" width="0.2" height="15.0" fill="rgb(214,43,15)" rx="2" ry="2" />
<text  x="604.14" y="159.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 32ul, 2048ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::getPageFromIndex (181,818,180 samples, 0.25%)</title><rect x="117.8" y="245" width="2.9" height="15.0" fill="rgb(232,39,30)" rx="2" ry="2" />
<text  x="120.78" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,676,767,420 samples, 35.18%)</title><rect x="601.6" y="213" width="415.1" height="15.0" fill="rgb(224,181,31)" rx="2" ry="2" />
<text  x="604.63" y="223.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>__pthread_mutex_unlock (10,101,010 samples, 0.01%)</title><rect x="133.9" y="213" width="0.2" height="15.0" fill="rgb(207,6,36)" rx="2" ry="2" />
<text  x="136.94" y="223.5" ></text>
</g>
<g >
<title>sed (10,101,010 samples, 0.01%)</title><rect x="601.5" y="261" width="0.1" height="15.0" fill="rgb(247,80,35)" rx="2" ry="2" />
<text  x="604.47" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,717,171,610 samples, 14.68%)</title><rect x="1016.7" y="85" width="173.3" height="15.0" fill="rgb(222,210,17)" rx="2" ry="2" />
<text  x="1019.74" y="95.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>swapper (36,393,939,030 samples, 49.86%)</title><rect x="601.6" y="261" width="588.4" height="15.0" fill="rgb(211,24,36)" rx="2" ry="2" />
<text  x="604.63" y="271.5" >swapper</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.7" y="181" width="0.1" height="15.0" fill="rgb(221,58,5)" rx="2" ry="2" />
<text  x="602.67" y="191.5" ></text>
</g>
<g >
<title>munmap (10,101,010 samples, 0.01%)</title><rect x="599.5" y="213" width="0.2" height="15.0" fill="rgb(217,201,6)" rx="2" ry="2" />
<text  x="602.51" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,676,767,420 samples, 35.18%)</title><rect x="601.6" y="197" width="415.1" height="15.0" fill="rgb(222,105,12)" rx="2" ry="2" />
<text  x="604.63" y="207.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.8" y="197" width="0.2" height="15.0" fill="rgb(246,216,49)" rx="2" ry="2" />
<text  x="602.84" y="207.5" ></text>
</g>
<g >
<title>RandomHeap&lt;8, 7, 16ul, 65536ul, RandomMiniHeap, false, true&gt;::free (20,202,020 samples, 0.03%)</title><rect x="131.3" y="229" width="0.4" height="15.0" fill="rgb(230,26,32)" rx="2" ry="2" />
<text  x="134.33" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.1" y="197" width="0.2" height="15.0" fill="rgb(242,111,23)" rx="2" ry="2" />
<text  x="604.14" y="207.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 16ul, 4096ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 16ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::inBounds (333,333,330 samples, 0.46%)</title><rect x="103.6" y="245" width="5.4" height="15.0" fill="rgb(226,39,9)" rx="2" ry="2" />
<text  x="106.57" y="255.5" ></text>
</g>
<g >
<title>custommalloc (10,101,010 samples, 0.01%)</title><rect x="163.5" y="229" width="0.2" height="15.0" fill="rgb(253,92,44)" rx="2" ry="2" />
<text  x="166.50" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,676,767,420 samples, 35.18%)</title><rect x="601.6" y="229" width="415.1" height="15.0" fill="rgb(252,68,54)" rx="2" ry="2" />
<text  x="604.63" y="239.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>RandomHeap&lt;8, 7, 16ul, 65536ul, RandomMiniHeap, false, true&gt;::malloc (303,030,300 samples, 0.42%)</title><rect x="36.8" y="245" width="4.9" height="15.0" fill="rgb(215,126,33)" rx="2" ry="2" />
<text  x="39.78" y="255.5" ></text>
</g>
<g >
<title>[cfrac] (50,505,050 samples, 0.07%)</title><rect x="128.4" y="245" width="0.8" height="15.0" fill="rgb(251,183,18)" rx="2" ry="2" />
<text  x="131.39" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,676,767,420 samples, 35.18%)</title><rect x="601.6" y="149" width="415.1" height="15.0" fill="rgb(222,77,26)" rx="2" ry="2" />
<text  x="604.63" y="159.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.3" y="85" width="0.2" height="15.0" fill="rgb(231,114,46)" rx="2" ry="2" />
<text  x="604.31" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.5" y="165" width="0.2" height="15.0" fill="rgb(213,57,20)" rx="2" ry="2" />
<text  x="602.51" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="254.5" y="181" width="0.1" height="15.0" fill="rgb(213,222,3)" rx="2" ry="2" />
<text  x="257.46" y="191.5" ></text>
</g>
<g >
<title>cfrac (36,464,646,100 samples, 49.96%)</title><rect x="10.0" y="261" width="589.5" height="15.0" fill="rgb(249,40,7)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >cfrac</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="254.5" y="133" width="0.1" height="15.0" fill="rgb(218,24,52)" rx="2" ry="2" />
<text  x="257.46" y="143.5" ></text>
</g>
<g >
<title>[unknown] (50,505,050 samples, 0.07%)</title><rect x="600.0" y="245" width="0.8" height="15.0" fill="rgb(216,85,15)" rx="2" ry="2" />
<text  x="603.00" y="255.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 16ul, 4096ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 16ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::getObject (10,101,010 samples, 0.01%)</title><rect x="102.8" y="245" width="0.1" height="15.0" fill="rgb(220,39,25)" rx="2" ry="2" />
<text  x="105.75" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.3" y="149" width="0.2" height="15.0" fill="rgb(250,158,18)" rx="2" ry="2" />
<text  x="604.31" y="159.5" ></text>
</g>
<g >
<title>RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::free (40,404,040 samples, 0.06%)</title><rect x="131.7" y="229" width="0.6" height="15.0" fill="rgb(243,54,20)" rx="2" ry="2" />
<text  x="134.66" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.8" y="245" width="0.2" height="15.0" fill="rgb(242,123,26)" rx="2" ry="2" />
<text  x="602.84" y="255.5" ></text>
</g>
<g >
<title>RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::free (171,717,170 samples, 0.24%)</title><rect x="41.7" y="245" width="2.8" height="15.0" fill="rgb(217,209,3)" rx="2" ry="2" />
<text  x="44.68" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,717,171,610 samples, 14.68%)</title><rect x="1016.7" y="149" width="173.3" height="15.0" fill="rgb(245,147,19)" rx="2" ry="2" />
<text  x="1019.74" y="159.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.7" y="245" width="0.1" height="15.0" fill="rgb(237,57,5)" rx="2" ry="2" />
<text  x="602.67" y="255.5" ></text>
</g>
<g >
<title>pdivmod (1,858,585,840 samples, 2.55%)</title><rect x="408.5" y="245" width="30.0" height="15.0" fill="rgb(253,70,13)" rx="2" ry="2" />
<text  x="411.45" y="255.5" >pd..</text>
</g>
<g >
<title>xxmalloc@plt (10,101,010 samples, 0.01%)</title><rect x="273.4" y="229" width="0.2" height="15.0" fill="rgb(226,124,50)" rx="2" ry="2" />
<text  x="276.40" y="239.5" ></text>
</g>
<g >
<title>custommalloc (10,101,010 samples, 0.01%)</title><rect x="407.5" y="245" width="0.1" height="15.0" fill="rgb(231,136,44)" rx="2" ry="2" />
<text  x="410.47" y="255.5" ></text>
</g>
<g >
<title>redis-server (30,303,030 samples, 0.04%)</title><rect x="600.8" y="261" width="0.5" height="15.0" fill="rgb(241,128,0)" rx="2" ry="2" />
<text  x="603.82" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.1" y="133" width="0.2" height="15.0" fill="rgb(245,127,1)" rx="2" ry="2" />
<text  x="604.14" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.7" y="165" width="0.1" height="15.0" fill="rgb(252,38,20)" rx="2" ry="2" />
<text  x="602.67" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.1" y="229" width="0.2" height="15.0" fill="rgb(243,14,22)" rx="2" ry="2" />
<text  x="604.14" y="239.5" ></text>
</g>
<g >
<title>jbd2/sda1-8 (10,101,010 samples, 0.01%)</title><rect x="599.7" y="261" width="0.1" height="15.0" fill="rgb(254,114,47)" rx="2" ry="2" />
<text  x="602.67" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="254.5" y="101" width="0.1" height="15.0" fill="rgb(242,89,22)" rx="2" ry="2" />
<text  x="257.46" y="111.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.01%)</title><rect x="601.5" y="245" width="0.1" height="15.0" fill="rgb(234,27,17)" rx="2" ry="2" />
<text  x="604.47" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.1" y="165" width="0.2" height="15.0" fill="rgb(235,34,11)" rx="2" ry="2" />
<text  x="604.14" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.3" y="165" width="0.2" height="15.0" fill="rgb(209,59,51)" rx="2" ry="2" />
<text  x="604.31" y="175.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 32ul, 4096ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::getPageFromIndex@plt (20,202,020 samples, 0.03%)</title><rect x="127.6" y="245" width="0.3" height="15.0" fill="rgb(230,60,51)" rx="2" ry="2" />
<text  x="130.58" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.7" y="101" width="0.1" height="15.0" fill="rgb(223,176,40)" rx="2" ry="2" />
<text  x="602.67" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.3" y="229" width="0.2" height="15.0" fill="rgb(232,133,19)" rx="2" ry="2" />
<text  x="604.31" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.1" y="181" width="0.2" height="15.0" fill="rgb(236,157,8)" rx="2" ry="2" />
<text  x="604.14" y="191.5" ></text>
</g>
<g >
<title>[unknown] (10,717,171,610 samples, 14.68%)</title><rect x="1016.7" y="181" width="173.3" height="15.0" fill="rgb(205,92,19)" rx="2" ry="2" />
<text  x="1019.74" y="191.5" >[unknown]</text>
</g>
<g >
<title>pthread_mutex_unlock@plt (30,303,030 samples, 0.04%)</title><rect x="263.9" y="229" width="0.5" height="15.0" fill="rgb(218,64,12)" rx="2" ry="2" />
<text  x="266.93" y="239.5" ></text>
</g>
<g >
<title>DieHarder::PageTable::getObjectIndex@plt (20,202,020 samples, 0.03%)</title><rect x="32.5" y="245" width="0.4" height="15.0" fill="rgb(219,11,54)" rx="2" ry="2" />
<text  x="35.54" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.8" y="229" width="0.2" height="15.0" fill="rgb(235,197,23)" rx="2" ry="2" />
<text  x="602.84" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="254.5" y="149" width="0.1" height="15.0" fill="rgb(247,175,5)" rx="2" ry="2" />
<text  x="257.46" y="159.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (616,161,610 samples, 0.84%)</title><rect x="440.6" y="245" width="10.0" height="15.0" fill="rgb(239,5,19)" rx="2" ry="2" />
<text  x="443.62" y="255.5" ></text>
</g>
<g >
<title>DieHardHeap&lt;8, 7, 65536, false, true&gt;::free (101,010,100 samples, 0.14%)</title><rect x="129.2" y="229" width="1.6" height="15.0" fill="rgb(207,123,30)" rx="2" ry="2" />
<text  x="132.21" y="239.5" ></text>
</g>
<g >
<title>ppowmod (10,101,010 samples, 0.01%)</title><rect x="254.8" y="229" width="0.1" height="15.0" fill="rgb(220,48,3)" rx="2" ry="2" />
<text  x="257.79" y="239.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 16ul, 4096ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 16ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::computeIndex (50,505,050 samples, 0.07%)</title><rect x="98.7" y="245" width="0.8" height="15.0" fill="rgb(209,108,21)" rx="2" ry="2" />
<text  x="101.67" y="255.5" ></text>
</g>
<g >
<title>DieHarder::PageTable::getHeap@plt (111,111,110 samples, 0.15%)</title><rect x="25.8" y="245" width="1.8" height="15.0" fill="rgb(239,17,12)" rx="2" ry="2" />
<text  x="28.84" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.7" y="53" width="0.1" height="15.0" fill="rgb(212,174,21)" rx="2" ry="2" />
<text  x="602.67" y="63.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (10,101,010 samples, 0.01%)</title><rect x="133.8" y="213" width="0.1" height="15.0" fill="rgb(241,58,40)" rx="2" ry="2" />
<text  x="136.78" y="223.5" ></text>
</g>
<g >
<title>psub (383,838,380 samples, 0.53%)</title><rect x="254.9" y="229" width="6.3" height="15.0" fill="rgb(221,212,3)" rx="2" ry="2" />
<text  x="257.95" y="239.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 32ul, 2048ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::getObject (222,222,220 samples, 0.30%)</title><rect x="114.2" y="245" width="3.6" height="15.0" fill="rgb(208,194,9)" rx="2" ry="2" />
<text  x="117.18" y="255.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 32ul, 2048ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::computeIndex (90,909,090 samples, 0.12%)</title><rect x="110.1" y="245" width="1.5" height="15.0" fill="rgb(208,133,20)" rx="2" ry="2" />
<text  x="113.10" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.1" y="213" width="0.2" height="15.0" fill="rgb(224,186,1)" rx="2" ry="2" />
<text  x="604.14" y="223.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (10,101,010 samples, 0.01%)</title><rect x="600.8" y="229" width="0.2" height="15.0" fill="rgb(236,228,12)" rx="2" ry="2" />
<text  x="603.82" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.3" y="197" width="0.2" height="15.0" fill="rgb(232,87,33)" rx="2" ry="2" />
<text  x="604.31" y="207.5" ></text>
</g>
<g >
<title>DieHarder::PageTable::getObjectIndex (303,030,300 samples, 0.42%)</title><rect x="27.6" y="245" width="4.9" height="15.0" fill="rgb(231,199,46)" rx="2" ry="2" />
<text  x="30.64" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.5" y="181" width="0.2" height="15.0" fill="rgb(212,108,46)" rx="2" ry="2" />
<text  x="602.51" y="191.5" ></text>
</g>
<g >
<title>kworker/u4:3 (10,101,010 samples, 0.01%)</title><rect x="599.8" y="261" width="0.2" height="15.0" fill="rgb(212,217,34)" rx="2" ry="2" />
<text  x="602.84" y="271.5" ></text>
</g>
<g >
<title>pmul (414,141,410 samples, 0.57%)</title><rect x="247.9" y="229" width="6.7" height="15.0" fill="rgb(234,97,46)" rx="2" ry="2" />
<text  x="250.93" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,676,767,420 samples, 35.18%)</title><rect x="601.6" y="181" width="415.1" height="15.0" fill="rgb(252,3,48)" rx="2" ry="2" />
<text  x="604.63" y="191.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>pfactorQ (535,353,530 samples, 0.73%)</title><rect x="198.3" y="229" width="8.6" height="15.0" fill="rgb(219,172,12)" rx="2" ry="2" />
<text  x="201.28" y="239.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.01%)</title><rect x="600.8" y="245" width="0.2" height="15.0" fill="rgb(254,5,3)" rx="2" ry="2" />
<text  x="603.82" y="255.5" ></text>
</g>
<g >
<title>customfree (60,606,060 samples, 0.08%)</title><rect x="162.5" y="229" width="1.0" height="15.0" fill="rgb(239,102,53)" rx="2" ry="2" />
<text  x="165.52" y="239.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 32ul, 4096ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::getObject (30,303,030 samples, 0.04%)</title><rect x="125.9" y="245" width="0.5" height="15.0" fill="rgb(216,87,7)" rx="2" ry="2" />
<text  x="128.94" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.3" y="117" width="0.2" height="15.0" fill="rgb(206,143,16)" rx="2" ry="2" />
<text  x="604.31" y="127.5" ></text>
</g>
<g >
<title>rm (10,101,010 samples, 0.01%)</title><rect x="601.3" y="261" width="0.2" height="15.0" fill="rgb(205,221,17)" rx="2" ry="2" />
<text  x="604.31" y="271.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (4,373,737,330 samples, 5.99%)</title><rect x="336.8" y="245" width="70.7" height="15.0" fill="rgb(234,174,29)" rx="2" ry="2" />
<text  x="339.76" y="255.5" >__pthre..</text>
</g>
<g >
<title>pthread_mutex_lock@plt (202,020,200 samples, 0.28%)</title><rect x="450.6" y="245" width="3.2" height="15.0" fill="rgb(222,39,6)" rx="2" ry="2" />
<text  x="453.58" y="255.5" ></text>
</g>
<g >
<title>RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::malloc (959,595,950 samples, 1.31%)</title><rect x="44.5" y="245" width="15.5" height="15.0" fill="rgb(210,173,16)" rx="2" ry="2" />
<text  x="47.46" y="255.5" ></text>
</g>
<g >
<title>xxmalloc (80,808,080 samples, 0.11%)</title><rect x="272.1" y="229" width="1.3" height="15.0" fill="rgb(212,220,24)" rx="2" ry="2" />
<text  x="275.10" y="239.5" ></text>
</g>
<g >
<title>DieHarder::PageTable::getHeap (919,191,910 samples, 1.26%)</title><rect x="11.0" y="245" width="14.8" height="15.0" fill="rgb(230,27,9)" rx="2" ry="2" />
<text  x="13.98" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.3" y="245" width="0.2" height="15.0" fill="rgb(228,95,37)" rx="2" ry="2" />
<text  x="604.31" y="255.5" ></text>
</g>
<g >
<title>palloc (50,505,050 samples, 0.07%)</title><rect x="407.6" y="245" width="0.9" height="15.0" fill="rgb(216,41,54)" rx="2" ry="2" />
<text  x="410.63" y="255.5" ></text>
</g>
<g >
<title>xxfree@plt (20,202,020 samples, 0.03%)</title><rect x="271.8" y="229" width="0.3" height="15.0" fill="rgb(250,198,32)" rx="2" ry="2" />
<text  x="274.77" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.5" y="133" width="0.2" height="15.0" fill="rgb(238,181,18)" rx="2" ry="2" />
<text  x="602.51" y="143.5" ></text>
</g>
<g >
<title>DieHardHeap&lt;8, 7, 65536, false, true&gt;::free@plt (10,101,010 samples, 0.01%)</title><rect x="10.8" y="245" width="0.2" height="15.0" fill="rgb(218,10,9)" rx="2" ry="2" />
<text  x="13.82" y="255.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1,090,909,080 samples, 1.49%)</title><rect x="134.8" y="229" width="17.6" height="15.0" fill="rgb(208,115,12)" rx="2" ry="2" />
<text  x="137.76" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.7" y="117" width="0.1" height="15.0" fill="rgb(247,157,3)" rx="2" ry="2" />
<text  x="602.67" y="127.5" ></text>
</g>
<g >
<title>RandomMiniHeapCore&lt;8, 7, 32ul, 4096ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false, true&gt;::malloc (353,535,350 samples, 0.48%)</title><rect x="93.0" y="245" width="5.7" height="15.0" fill="rgb(219,37,21)" rx="2" ry="2" />
<text  x="95.96" y="255.5" ></text>
</g>
<g >
<title>xxfree@plt (10,101,010 samples, 0.01%)</title><rect x="593.0" y="245" width="0.1" height="15.0" fill="rgb(236,144,52)" rx="2" ry="2" />
<text  x="595.98" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.1" y="117" width="0.2" height="15.0" fill="rgb(231,223,14)" rx="2" ry="2" />
<text  x="604.14" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.5" y="149" width="0.2" height="15.0" fill="rgb(234,135,54)" rx="2" ry="2" />
<text  x="602.51" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.5" y="117" width="0.2" height="15.0" fill="rgb(215,31,13)" rx="2" ry="2" />
<text  x="602.51" y="127.5" ></text>
</g>
<g >
<title>pcfrac (767,676,760 samples, 1.05%)</title><rect x="171.7" y="229" width="12.4" height="15.0" fill="rgb(252,181,52)" rx="2" ry="2" />
<text  x="174.67" y="239.5" ></text>
</g>
<g >
<title>pcmpz (50,505,050 samples, 0.07%)</title><rect x="191.1" y="229" width="0.8" height="15.0" fill="rgb(225,105,34)" rx="2" ry="2" />
<text  x="194.10" y="239.5" ></text>
</g>
<g >
<title>combineSoln (10,101,010 samples, 0.01%)</title><rect x="134.1" y="213" width="0.2" height="15.0" fill="rgb(254,182,19)" rx="2" ry="2" />
<text  x="137.11" y="223.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 32ul, 2048ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 32ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::free (161,616,160 samples, 0.22%)</title><rect x="111.6" y="245" width="2.6" height="15.0" fill="rgb(212,8,48)" rx="2" ry="2" />
<text  x="114.57" y="255.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 16ul, 8192ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 16ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::getPageFromIndex (20,202,020 samples, 0.03%)</title><rect x="109.4" y="245" width="0.4" height="15.0" fill="rgb(254,131,32)" rx="2" ry="2" />
<text  x="112.45" y="255.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 16ul, 8192ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 16ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::inBounds (20,202,020 samples, 0.03%)</title><rect x="109.8" y="245" width="0.3" height="15.0" fill="rgb(213,45,30)" rx="2" ry="2" />
<text  x="112.78" y="255.5" ></text>
</g>
<g >
<title>RandomMiniHeapDieHarderBase&lt;8, 7, 16ul, 4096ul, HL::OneHeap&lt;RandomHeap&lt;8, 7, 16ul, 65536ul, RandomMiniHeap, false, true&gt;::RoundUpHeap&lt;4096ul, HL::BumpAlloc&lt;4096ul, MmapAlloc, 1ul&gt; &gt; &gt;, false&gt;::free (202,020,200 samples, 0.28%)</title><rect x="99.5" y="245" width="3.3" height="15.0" fill="rgb(237,209,4)" rx="2" ry="2" />
<text  x="102.49" y="255.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.01%)</title><rect x="599.5" y="245" width="0.2" height="15.0" fill="rgb(214,83,45)" rx="2" ry="2" />
<text  x="602.51" y="255.5" ></text>
</g>
<g >
<title>xxfree (343,434,340 samples, 0.47%)</title><rect x="587.4" y="245" width="5.6" height="15.0" fill="rgb(218,105,39)" rx="2" ry="2" />
<text  x="590.43" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.8" y="213" width="0.2" height="15.0" fill="rgb(225,101,6)" rx="2" ry="2" />
<text  x="602.84" y="223.5" ></text>
</g>
<g >
<title>[unknown] (40,404,040 samples, 0.06%)</title><rect x="133.8" y="229" width="0.6" height="15.0" fill="rgb(211,111,12)" rx="2" ry="2" />
<text  x="136.78" y="239.5" ></text>
</g>
<g >
<title>xxmalloc (373,737,370 samples, 0.51%)</title><rect x="593.1" y="245" width="6.1" height="15.0" fill="rgb(211,30,26)" rx="2" ry="2" />
<text  x="596.14" y="255.5" ></text>
</g>
<g >
<title>[unknown] (8,929,292,840 samples, 12.23%)</title><rect x="129.2" y="245" width="144.4" height="15.0" fill="rgb(211,38,0)" rx="2" ry="2" />
<text  x="132.21" y="255.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (10,717,171,610 samples, 14.68%)</title><rect x="1016.7" y="213" width="173.3" height="15.0" fill="rgb(225,63,19)" rx="2" ry="2" />
<text  x="1019.74" y="223.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (36,393,939,030 samples, 49.86%)</title><rect x="601.6" y="245" width="588.4" height="15.0" fill="rgb(209,108,46)" rx="2" ry="2" />
<text  x="604.63" y="255.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[unknown] (10,717,171,610 samples, 14.68%)</title><rect x="1016.7" y="229" width="173.3" height="15.0" fill="rgb(253,54,45)" rx="2" ry="2" />
<text  x="1019.74" y="239.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="599.7" y="37" width="0.1" height="15.0" fill="rgb(231,185,18)" rx="2" ry="2" />
<text  x="602.67" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.01%)</title><rect x="601.3" y="181" width="0.2" height="15.0" fill="rgb(214,26,32)" rx="2" ry="2" />
<text  x="604.31" y="191.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (626,262,620 samples, 0.86%)</title><rect x="152.4" y="229" width="10.1" height="15.0" fill="rgb(247,188,38)" rx="2" ry="2" />
<text  x="155.40" y="239.5" ></text>
</g>
<g >
<title>pcmp (434,343,430 samples, 0.60%)</title><rect x="184.1" y="229" width="7.0" height="15.0" fill="rgb(224,175,38)" rx="2" ry="2" />
<text  x="187.08" y="239.5" ></text>
</g>
<g >
<title>pidiv (292,929,290 samples, 0.40%)</title><rect x="210.0" y="229" width="4.8" height="15.0" fill="rgb(226,163,5)" rx="2" ry="2" />
<text  x="213.04" y="239.5" ></text>
</g>
<g >
<title>padd (404,040,400 samples, 0.55%)</title><rect x="163.7" y="229" width="6.5" height="15.0" fill="rgb(238,183,37)" rx="2" ry="2" />
<text  x="166.66" y="239.5" ></text>
</g>
</g>
</svg>
