<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.49%)</title><rect x="733.5" y="117" width="5.8" height="15.0" fill="rgb(232,181,35)" rx="2" ry="2" />
<text  x="736.49" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.49%)</title><rect x="733.5" y="101" width="5.8" height="15.0" fill="rgb(228,47,29)" rx="2" ry="2" />
<text  x="736.49" y="111.5" ></text>
</g>
<g >
<title>larson-sized (9,888,888,790 samples, 68.37%)</title><rect x="12.5" y="277" width="806.7" height="15.0" fill="rgb(222,31,44)" rx="2" ry="2" />
<text  x="15.47" y="287.5" >larson-sized</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="813.4" y="133" width="0.8" height="15.0" fill="rgb(215,100,50)" rx="2" ry="2" />
<text  x="816.42" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="731.8" y="85" width="0.9" height="15.0" fill="rgb(217,30,5)" rx="2" ry="2" />
<text  x="734.84" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.35%)</title><rect x="735.1" y="85" width="4.2" height="15.0" fill="rgb(206,42,27)" rx="2" ry="2" />
<text  x="738.14" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (181,818,180 samples, 1.26%)</title><rect x="501.1" y="181" width="14.8" height="15.0" fill="rgb(210,48,18)" rx="2" ry="2" />
<text  x="504.12" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="813.4" y="197" width="0.8" height="15.0" fill="rgb(213,33,3)" rx="2" ry="2" />
<text  x="816.42" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="731.8" y="197" width="0.9" height="15.0" fill="rgb(243,149,2)" rx="2" ry="2" />
<text  x="734.84" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.8" y="229" width="0.8" height="15.0" fill="rgb(218,212,17)" rx="2" ry="2" />
<text  x="13.82" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.35%)</title><rect x="15.8" y="261" width="4.1" height="15.0" fill="rgb(240,186,40)" rx="2" ry="2" />
<text  x="18.77" y="271.5" ></text>
</g>
<g >
<title>dirname (10,101,010 samples, 0.07%)</title><rect x="11.6" y="277" width="0.9" height="15.0" fill="rgb(242,223,8)" rx="2" ry="2" />
<text  x="14.65" y="287.5" ></text>
</g>
<g >
<title>[larson-sized] (20,202,020 samples, 0.14%)</title><rect x="19.9" y="261" width="1.6" height="15.0" fill="rgb(227,109,1)" rx="2" ry="2" />
<text  x="22.89" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.70%)</title><rect x="793.6" y="149" width="8.3" height="15.0" fill="rgb(236,128,36)" rx="2" ry="2" />
<text  x="796.65" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.8" y="133" width="0.8" height="15.0" fill="rgb(254,209,29)" rx="2" ry="2" />
<text  x="13.82" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="117" width="0.8" height="15.0" fill="rgb(251,17,29)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.8" y="213" width="0.8" height="15.0" fill="rgb(243,65,41)" rx="2" ry="2" />
<text  x="13.82" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="731.8" y="165" width="0.9" height="15.0" fill="rgb(208,175,54)" rx="2" ry="2" />
<text  x="734.84" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="514.3" y="85" width="1.6" height="15.0" fill="rgb(210,101,30)" rx="2" ry="2" />
<text  x="517.30" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="133" width="0.8" height="15.0" fill="rgb(224,128,36)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="738.4" y="37" width="0.9" height="15.0" fill="rgb(252,146,12)" rx="2" ry="2" />
<text  x="741.44" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.56%)</title><rect x="732.7" y="181" width="6.6" height="15.0" fill="rgb(220,28,34)" rx="2" ry="2" />
<text  x="735.67" y="191.5" ></text>
</g>
<g >
<title>__open64_nocancel (10,101,010 samples, 0.07%)</title><rect x="11.6" y="229" width="0.9" height="15.0" fill="rgb(219,84,29)" rx="2" ry="2" />
<text  x="14.65" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="213" width="0.8" height="15.0" fill="rgb(225,87,49)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="19.1" y="37" width="0.8" height="15.0" fill="rgb(208,63,5)" rx="2" ry="2" />
<text  x="22.06" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="731.8" y="181" width="0.9" height="15.0" fill="rgb(226,174,35)" rx="2" ry="2" />
<text  x="734.84" y="191.5" ></text>
</g>
<g >
<title>BibopHeap::BibopFreeCache::getNext (111,111,110 samples, 0.77%)</title><rect x="722.8" y="197" width="9.0" height="15.0" fill="rgb(241,217,54)" rx="2" ry="2" />
<text  x="725.78" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.8" y="101" width="0.8" height="15.0" fill="rgb(235,84,7)" rx="2" ry="2" />
<text  x="13.82" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="29.0" y="181" width="0.8" height="15.0" fill="rgb(212,50,19)" rx="2" ry="2" />
<text  x="31.95" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,282,828,260 samples, 15.78%)</title><rect x="819.2" y="165" width="186.2" height="15.0" fill="rgb(225,11,48)" rx="2" ry="2" />
<text  x="822.19" y="175.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="197" width="0.9" height="15.0" fill="rgb(214,136,34)" rx="2" ry="2" />
<text  x="14.65" y="207.5" ></text>
</g>
<g >
<title>[unknown] (2,262,626,240 samples, 15.64%)</title><rect x="1005.4" y="245" width="184.6" height="15.0" fill="rgb(206,196,54)" rx="2" ry="2" />
<text  x="1008.42" y="255.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.35%)</title><rect x="15.8" y="213" width="4.1" height="15.0" fill="rgb(206,228,23)" rx="2" ry="2" />
<text  x="18.77" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (181,818,180 samples, 1.26%)</title><rect x="501.1" y="213" width="14.8" height="15.0" fill="rgb(240,86,22)" rx="2" ry="2" />
<text  x="504.12" y="223.5" ></text>
</g>
<g >
<title>BibopHeap::freeSmallObject (30,303,030 samples, 0.21%)</title><rect x="31.4" y="229" width="2.5" height="15.0" fill="rgb(207,74,34)" rx="2" ry="2" />
<text  x="34.42" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="19.1" y="53" width="0.8" height="15.0" fill="rgb(245,198,14)" rx="2" ry="2" />
<text  x="22.06" y="63.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::malloc (20,202,020 samples, 0.14%)</title><rect x="28.1" y="213" width="1.7" height="15.0" fill="rgb(212,225,35)" rx="2" ry="2" />
<text  x="31.13" y="223.5" ></text>
</g>
<g >
<title>BibopHeap::freeSmallObject (10,101,010 samples, 0.07%)</title><rect x="12.5" y="261" width="0.8" height="15.0" fill="rgb(243,209,20)" rx="2" ry="2" />
<text  x="15.47" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.21%)</title><rect x="515.9" y="197" width="2.5" height="15.0" fill="rgb(225,222,9)" rx="2" ry="2" />
<text  x="518.95" y="207.5" ></text>
</g>
<g >
<title>[unknown] (2,262,626,240 samples, 15.64%)</title><rect x="1005.4" y="213" width="184.6" height="15.0" fill="rgb(212,138,44)" rx="2" ry="2" />
<text  x="1008.42" y="223.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.56%)</title><rect x="732.7" y="165" width="6.6" height="15.0" fill="rgb(244,196,7)" rx="2" ry="2" />
<text  x="735.67" y="175.5" ></text>
</g>
<g >
<title>rand_sse (60,606,060 samples, 0.42%)</title><rect x="801.9" y="213" width="4.9" height="15.0" fill="rgb(216,132,35)" rx="2" ry="2" />
<text  x="804.89" y="223.5" ></text>
</g>
<g >
<title>xxmalloc (3,242,424,210 samples, 22.42%)</title><rect x="549.7" y="245" width="264.5" height="15.0" fill="rgb(249,120,4)" rx="2" ry="2" />
<text  x="552.73" y="255.5" >xxmalloc</text>
</g>
<g >
<title>__tls_get_addr (50,505,050 samples, 0.35%)</title><rect x="739.3" y="197" width="4.1" height="15.0" fill="rgb(217,217,0)" rx="2" ry="2" />
<text  x="742.26" y="207.5" ></text>
</g>
<g >
<title>__mprotect (80,808,080 samples, 0.56%)</title><rect x="732.7" y="197" width="6.6" height="15.0" fill="rgb(251,179,24)" rx="2" ry="2" />
<text  x="735.67" y="207.5" ></text>
</g>
<g >
<title>setlocale (10,101,010 samples, 0.07%)</title><rect x="11.6" y="261" width="0.9" height="15.0" fill="rgb(232,131,29)" rx="2" ry="2" />
<text  x="14.65" y="271.5" ></text>
</g>
<g >
<title>operator new[] (10,101,010 samples, 0.07%)</title><rect x="814.2" y="261" width="0.9" height="15.0" fill="rgb(231,176,51)" rx="2" ry="2" />
<text  x="817.25" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.21%)</title><rect x="515.9" y="213" width="2.5" height="15.0" fill="rgb(225,142,32)" rx="2" ry="2" />
<text  x="518.95" y="223.5" ></text>
</g>
<g >
<title>__GI___execve (10,101,010 samples, 0.07%)</title><rect x="10.0" y="245" width="0.8" height="15.0" fill="rgb(242,108,26)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>BibopHeap::BibopFreeCache::add@plt (40,404,040 samples, 0.28%)</title><rect x="136.9" y="245" width="3.3" height="15.0" fill="rgb(250,174,22)" rx="2" ry="2" />
<text  x="139.90" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,282,828,260 samples, 15.78%)</title><rect x="819.2" y="181" width="186.2" height="15.0" fill="rgb(253,55,39)" rx="2" ry="2" />
<text  x="822.19" y="191.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>operator new (3,383,838,350 samples, 23.39%)</title><rect x="538.2" y="261" width="276.0" height="15.0" fill="rgb(254,98,29)" rx="2" ry="2" />
<text  x="541.20" y="271.5" >operator new</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="133" width="0.9" height="15.0" fill="rgb(226,19,48)" rx="2" ry="2" />
<text  x="14.65" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.49%)</title><rect x="733.5" y="133" width="5.8" height="15.0" fill="rgb(225,219,52)" rx="2" ry="2" />
<text  x="736.49" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.8" y="245" width="0.8" height="15.0" fill="rgb(253,156,20)" rx="2" ry="2" />
<text  x="13.82" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,545,454,500 samples, 31.42%)</title><rect x="819.2" y="261" width="370.8" height="15.0" fill="rgb(226,109,41)" rx="2" ry="2" />
<text  x="822.19" y="271.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.49%)</title><rect x="510.2" y="133" width="5.7" height="15.0" fill="rgb(235,103,31)" rx="2" ry="2" />
<text  x="513.18" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="813.4" y="165" width="0.8" height="15.0" fill="rgb(236,30,9)" rx="2" ry="2" />
<text  x="816.42" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="779.6" y="181" width="1.7" height="15.0" fill="rgb(224,224,46)" rx="2" ry="2" />
<text  x="782.64" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.21%)</title><rect x="515.9" y="181" width="2.5" height="15.0" fill="rgb(225,60,24)" rx="2" ry="2" />
<text  x="518.95" y="191.5" ></text>
</g>
<g >
<title>BibopHeap::BibopFreeCache::add (40,404,040 samples, 0.28%)</title><rect x="133.6" y="245" width="3.3" height="15.0" fill="rgb(205,128,8)" rx="2" ry="2" />
<text  x="136.60" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="731.8" y="69" width="0.9" height="15.0" fill="rgb(210,36,5)" rx="2" ry="2" />
<text  x="734.84" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,262,626,240 samples, 15.64%)</title><rect x="1005.4" y="149" width="184.6" height="15.0" fill="rgb(247,195,42)" rx="2" ry="2" />
<text  x="1008.42" y="159.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="516.8" y="149" width="1.6" height="15.0" fill="rgb(216,31,33)" rx="2" ry="2" />
<text  x="519.77" y="159.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::getRandomObject@plt (20,202,020 samples, 0.14%)</title><rect x="576.1" y="229" width="1.7" height="15.0" fill="rgb(220,19,21)" rx="2" ry="2" />
<text  x="579.10" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="181" width="0.9" height="15.0" fill="rgb(231,108,20)" rx="2" ry="2" />
<text  x="14.65" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (131,313,130 samples, 0.91%)</title><rect x="791.2" y="165" width="10.7" height="15.0" fill="rgb(234,215,46)" rx="2" ry="2" />
<text  x="794.17" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 1.75%)</title><rect x="781.3" y="181" width="20.6" height="15.0" fill="rgb(215,56,17)" rx="2" ry="2" />
<text  x="784.28" y="191.5" ></text>
</g>
<g >
<title>BibopHeap::freeSmallObject (4,636,363,590 samples, 32.05%)</title><rect x="140.2" y="245" width="378.2" height="15.0" fill="rgb(250,150,15)" rx="2" ry="2" />
<text  x="143.20" y="255.5" >BibopHeap::freeSmallObject</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="731.8" y="117" width="0.9" height="15.0" fill="rgb(241,126,9)" rx="2" ry="2" />
<text  x="734.84" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="731.8" y="53" width="0.9" height="15.0" fill="rgb(229,36,51)" rx="2" ry="2" />
<text  x="734.84" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="149" width="0.9" height="15.0" fill="rgb(236,79,44)" rx="2" ry="2" />
<text  x="14.65" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="213" width="0.9" height="15.0" fill="rgb(251,142,35)" rx="2" ry="2" />
<text  x="14.65" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,262,626,240 samples, 15.64%)</title><rect x="1005.4" y="165" width="184.6" height="15.0" fill="rgb(243,159,16)" rx="2" ry="2" />
<text  x="1008.42" y="175.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="813.4" y="117" width="0.8" height="15.0" fill="rgb(224,51,29)" rx="2" ry="2" />
<text  x="816.42" y="127.5" ></text>
</g>
<g >
<title>_nl_find_locale (10,101,010 samples, 0.07%)</title><rect x="11.6" y="245" width="0.9" height="15.0" fill="rgb(249,176,43)" rx="2" ry="2" />
<text  x="14.65" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 1.75%)</title><rect x="781.3" y="213" width="20.6" height="15.0" fill="rgb(247,221,45)" rx="2" ry="2" />
<text  x="784.28" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,282,828,260 samples, 15.78%)</title><rect x="819.2" y="245" width="186.2" height="15.0" fill="rgb(235,215,38)" rx="2" ry="2" />
<text  x="822.19" y="255.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>operator delete[] (50,505,050 samples, 0.35%)</title><rect x="534.1" y="261" width="4.1" height="15.0" fill="rgb(219,98,31)" rx="2" ry="2" />
<text  x="537.08" y="271.5" ></text>
</g>
<g >
<title>BibopHeap::freeSmallObject@plt (30,303,030 samples, 0.21%)</title><rect x="13.3" y="261" width="2.5" height="15.0" fill="rgb(246,223,21)" rx="2" ry="2" />
<text  x="16.30" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 1.75%)</title><rect x="781.3" y="197" width="20.6" height="15.0" fill="rgb(229,136,35)" rx="2" ry="2" />
<text  x="784.28" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="19.1" y="69" width="0.8" height="15.0" fill="rgb(246,39,29)" rx="2" ry="2" />
<text  x="22.06" y="79.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::malloc (40,404,040 samples, 0.28%)</title><rect x="545.6" y="245" width="3.3" height="15.0" fill="rgb(206,43,47)" rx="2" ry="2" />
<text  x="548.61" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="149" width="0.8" height="15.0" fill="rgb(228,53,35)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="813.4" y="181" width="0.8" height="15.0" fill="rgb(252,5,28)" rx="2" ry="2" />
<text  x="816.42" y="191.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.14%)</title><rect x="28.1" y="245" width="1.7" height="15.0" fill="rgb(213,62,54)" rx="2" ry="2" />
<text  x="31.13" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.35%)</title><rect x="15.8" y="245" width="4.1" height="15.0" fill="rgb(211,19,51)" rx="2" ry="2" />
<text  x="18.77" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.21%)</title><rect x="515.9" y="229" width="2.5" height="15.0" fill="rgb(206,154,7)" rx="2" ry="2" />
<text  x="518.95" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.8" y="149" width="0.8" height="15.0" fill="rgb(242,129,4)" rx="2" ry="2" />
<text  x="13.82" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.35%)</title><rect x="735.1" y="69" width="4.2" height="15.0" fill="rgb(231,120,15)" rx="2" ry="2" />
<text  x="738.14" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.8" y="85" width="0.8" height="15.0" fill="rgb(216,104,41)" rx="2" ry="2" />
<text  x="13.82" y="95.5" ></text>
</g>
<g >
<title>xxfree (181,818,180 samples, 1.26%)</title><rect x="518.4" y="245" width="14.9" height="15.0" fill="rgb(233,63,43)" rx="2" ry="2" />
<text  x="521.42" y="255.5" ></text>
</g>
<g >
<title>runthreads (50,505,050 samples, 0.35%)</title><rect x="29.8" y="245" width="4.1" height="15.0" fill="rgb(217,130,30)" rx="2" ry="2" />
<text  x="32.78" y="255.5" ></text>
</g>
<g >
<title>xxmalloc (20,202,020 samples, 0.14%)</title><rect x="28.1" y="229" width="1.7" height="15.0" fill="rgb(215,27,20)" rx="2" ry="2" />
<text  x="31.13" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="165" width="0.9" height="15.0" fill="rgb(207,167,21)" rx="2" ry="2" />
<text  x="14.65" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="101" width="0.9" height="15.0" fill="rgb(241,207,41)" rx="2" ry="2" />
<text  x="14.65" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="19.1" y="85" width="0.8" height="15.0" fill="rgb(253,211,30)" rx="2" ry="2" />
<text  x="22.06" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.49%)</title><rect x="510.2" y="117" width="5.7" height="15.0" fill="rgb(238,10,11)" rx="2" ry="2" />
<text  x="513.18" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="101" width="0.8" height="15.0" fill="rgb(215,120,50)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::markObjectUsed@plt (40,404,040 samples, 0.28%)</title><rect x="810.1" y="229" width="3.3" height="15.0" fill="rgb(227,143,9)" rx="2" ry="2" />
<text  x="813.13" y="239.5" ></text>
</g>
<g >
<title>xxfree (30,303,030 samples, 0.21%)</title><rect x="815.1" y="261" width="2.4" height="15.0" fill="rgb(234,87,18)" rx="2" ry="2" />
<text  x="818.07" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="779.6" y="165" width="1.7" height="15.0" fill="rgb(232,113,53)" rx="2" ry="2" />
<text  x="782.64" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="515.1" y="53" width="0.8" height="15.0" fill="rgb(240,15,2)" rx="2" ry="2" />
<text  x="518.13" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.35%)</title><rect x="15.8" y="181" width="4.1" height="15.0" fill="rgb(238,8,30)" rx="2" ry="2" />
<text  x="18.77" y="191.5" ></text>
</g>
<g >
<title>exercise_heap (6,111,111,050 samples, 42.25%)</title><rect x="34.7" y="261" width="498.6" height="15.0" fill="rgb(217,149,11)" rx="2" ry="2" />
<text  x="37.72" y="271.5" >exercise_heap</text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.56%)</title><rect x="509.4" y="149" width="6.5" height="15.0" fill="rgb(245,48,25)" rx="2" ry="2" />
<text  x="512.36" y="159.5" ></text>
</g>
<g >
<title>[unknown] (2,262,626,240 samples, 15.64%)</title><rect x="1005.4" y="197" width="184.6" height="15.0" fill="rgb(206,127,43)" rx="2" ry="2" />
<text  x="1008.42" y="207.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,282,828,260 samples, 15.78%)</title><rect x="819.2" y="197" width="186.2" height="15.0" fill="rgb(218,165,39)" rx="2" ry="2" />
<text  x="822.19" y="207.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="29.0" y="165" width="0.8" height="15.0" fill="rgb(235,200,35)" rx="2" ry="2" />
<text  x="31.95" y="175.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::getRandomObject (1,282,828,270 samples, 8.87%)</title><rect x="656.0" y="213" width="104.7" height="15.0" fill="rgb(207,180,16)" rx="2" ry="2" />
<text  x="659.03" y="223.5" >BibopHeap::B..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,262,626,240 samples, 15.64%)</title><rect x="1005.4" y="117" width="184.6" height="15.0" fill="rgb(214,63,20)" rx="2" ry="2" />
<text  x="1008.42" y="127.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>__libc_fork (10,101,010 samples, 0.07%)</title><rect x="10.8" y="261" width="0.8" height="15.0" fill="rgb(235,140,22)" rx="2" ry="2" />
<text  x="13.82" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.63%)</title><rect x="794.5" y="101" width="7.4" height="15.0" fill="rgb(247,171,5)" rx="2" ry="2" />
<text  x="797.47" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="181" width="0.8" height="15.0" fill="rgb(234,36,15)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::markObjectUsed (10,101,010 samples, 0.07%)</title><rect x="809.3" y="229" width="0.8" height="15.0" fill="rgb(252,14,25)" rx="2" ry="2" />
<text  x="812.30" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="801.1" y="53" width="0.8" height="15.0" fill="rgb(230,127,34)" rx="2" ry="2" />
<text  x="804.06" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="813.4" y="149" width="0.8" height="15.0" fill="rgb(227,6,25)" rx="2" ry="2" />
<text  x="816.42" y="159.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::malloc@plt (10,101,010 samples, 0.07%)</title><rect x="548.9" y="245" width="0.8" height="15.0" fill="rgb(219,209,51)" rx="2" ry="2" />
<text  x="551.91" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.8" y="117" width="0.8" height="15.0" fill="rgb(221,203,23)" rx="2" ry="2" />
<text  x="13.82" y="127.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::getRandomObject (10,101,010 samples, 0.07%)</title><rect x="28.1" y="197" width="0.9" height="15.0" fill="rgb(236,39,25)" rx="2" ry="2" />
<text  x="31.13" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.28%)</title><rect x="16.6" y="101" width="3.3" height="15.0" fill="rgb(230,136,37)" rx="2" ry="2" />
<text  x="19.59" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="731.8" y="101" width="0.9" height="15.0" fill="rgb(209,120,36)" rx="2" ry="2" />
<text  x="734.84" y="111.5" ></text>
</g>
<g >
<title>BibopHeap::BibopObjCache::markObjectUsed (252,525,250 samples, 1.75%)</title><rect x="760.7" y="213" width="20.6" height="15.0" fill="rgb(230,7,48)" rx="2" ry="2" />
<text  x="763.68" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="517.6" y="133" width="0.8" height="15.0" fill="rgb(230,35,39)" rx="2" ry="2" />
<text  x="520.60" y="143.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.07%)</title><rect x="533.3" y="261" width="0.8" height="15.0" fill="rgb(219,161,12)" rx="2" ry="2" />
<text  x="536.25" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.42%)</title><rect x="511.0" y="101" width="4.9" height="15.0" fill="rgb(226,79,42)" rx="2" ry="2" />
<text  x="514.01" y="111.5" ></text>
</g>
<g >
<title>__sched_yield (10,101,010 samples, 0.07%)</title><rect x="33.9" y="261" width="0.8" height="15.0" fill="rgb(214,209,25)" rx="2" ry="2" />
<text  x="36.90" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.35%)</title><rect x="15.8" y="197" width="4.1" height="15.0" fill="rgb(247,45,50)" rx="2" ry="2" />
<text  x="18.77" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.35%)</title><rect x="797.8" y="85" width="4.1" height="15.0" fill="rgb(206,207,27)" rx="2" ry="2" />
<text  x="800.77" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,282,828,260 samples, 15.78%)</title><rect x="819.2" y="213" width="186.2" height="15.0" fill="rgb(254,155,27)" rx="2" ry="2" />
<text  x="822.19" y="223.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="800.2" y="69" width="1.7" height="15.0" fill="rgb(237,7,26)" rx="2" ry="2" />
<text  x="803.24" y="79.5" ></text>
</g>
<g >
<title>BibopHeap::BibopFreeCache::getNext (60,606,060 samples, 0.42%)</title><rect x="651.1" y="213" width="4.9" height="15.0" fill="rgb(214,22,2)" rx="2" ry="2" />
<text  x="654.09" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.63%)</title><rect x="794.5" y="133" width="7.4" height="15.0" fill="rgb(239,72,54)" rx="2" ry="2" />
<text  x="797.47" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (181,818,180 samples, 1.26%)</title><rect x="501.1" y="197" width="14.8" height="15.0" fill="rgb(226,229,25)" rx="2" ry="2" />
<text  x="504.12" y="207.5" ></text>
</g>
<g >
<title>[unknown] (2,262,626,240 samples, 15.64%)</title><rect x="1005.4" y="229" width="184.6" height="15.0" fill="rgb(233,190,27)" rx="2" ry="2" />
<text  x="1008.42" y="239.5" >[unknown]</text>
</g>
<g >
<title>BibopHeap::BibopObjCache::malloc (2,838,383,810 samples, 19.62%)</title><rect x="577.8" y="229" width="231.5" height="15.0" fill="rgb(223,147,20)" rx="2" ry="2" />
<text  x="580.75" y="239.5" >BibopHeap::BibopObjCache::malloc</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="515.1" y="69" width="0.8" height="15.0" fill="rgb(240,194,14)" rx="2" ry="2" />
<text  x="518.13" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="517.6" y="117" width="0.8" height="15.0" fill="rgb(228,15,8)" rx="2" ry="2" />
<text  x="520.60" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.35%)</title><rect x="15.8" y="229" width="4.1" height="15.0" fill="rgb(250,118,29)" rx="2" ry="2" />
<text  x="18.77" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.35%)</title><rect x="15.8" y="133" width="4.1" height="15.0" fill="rgb(243,77,38)" rx="2" ry="2" />
<text  x="18.77" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.8" y="181" width="0.8" height="15.0" fill="rgb(230,159,45)" rx="2" ry="2" />
<text  x="13.82" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="780.5" y="149" width="0.8" height="15.0" fill="rgb(221,198,32)" rx="2" ry="2" />
<text  x="783.46" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="731.8" y="149" width="0.9" height="15.0" fill="rgb(237,120,31)" rx="2" ry="2" />
<text  x="734.84" y="159.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (80,808,080 samples, 0.56%)</title><rect x="21.5" y="261" width="6.6" height="15.0" fill="rgb(245,72,6)" rx="2" ry="2" />
<text  x="24.54" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,262,626,240 samples, 15.64%)</title><rect x="1005.4" y="181" width="184.6" height="15.0" fill="rgb(251,167,35)" rx="2" ry="2" />
<text  x="1008.42" y="191.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,282,828,260 samples, 15.78%)</title><rect x="819.2" y="229" width="186.2" height="15.0" fill="rgb(209,57,38)" rx="2" ry="2" />
<text  x="822.19" y="239.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>rand_sse (161,616,160 samples, 1.12%)</title><rect x="747.5" y="197" width="13.2" height="15.0" fill="rgb(217,139,38)" rx="2" ry="2" />
<text  x="750.50" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,262,626,240 samples, 15.64%)</title><rect x="1005.4" y="101" width="184.6" height="15.0" fill="rgb(236,224,12)" rx="2" ry="2" />
<text  x="1008.42" y="111.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="731.8" y="133" width="0.9" height="15.0" fill="rgb(231,73,45)" rx="2" ry="2" />
<text  x="734.84" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.35%)</title><rect x="15.8" y="165" width="4.1" height="15.0" fill="rgb(238,177,25)" rx="2" ry="2" />
<text  x="18.77" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="813.4" y="229" width="0.8" height="15.0" fill="rgb(234,58,38)" rx="2" ry="2" />
<text  x="816.42" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.8" y="165" width="0.8" height="15.0" fill="rgb(221,47,26)" rx="2" ry="2" />
<text  x="13.82" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="11.6" y="117" width="0.9" height="15.0" fill="rgb(208,6,8)" rx="2" ry="2" />
<text  x="14.65" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="516.8" y="165" width="1.6" height="15.0" fill="rgb(228,229,17)" rx="2" ry="2" />
<text  x="519.77" y="175.5" ></text>
</g>
<g >
<title>bench.sh (20,202,020 samples, 0.14%)</title><rect x="10.0" y="277" width="1.6" height="15.0" fill="rgb(251,40,29)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="165" width="0.8" height="15.0" fill="rgb(207,75,27)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (50,505,050 samples, 0.35%)</title><rect x="743.4" y="197" width="4.1" height="15.0" fill="rgb(235,103,16)" rx="2" ry="2" />
<text  x="746.38" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.8" y="197" width="0.8" height="15.0" fill="rgb(218,146,6)" rx="2" ry="2" />
<text  x="13.82" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.21%)</title><rect x="736.8" y="53" width="2.5" height="15.0" fill="rgb(239,37,50)" rx="2" ry="2" />
<text  x="739.79" y="63.5" ></text>
</g>
<g >
<title>xxmalloc (20,202,020 samples, 0.14%)</title><rect x="817.5" y="261" width="1.7" height="15.0" fill="rgb(209,7,9)" rx="2" ry="2" />
<text  x="820.54" y="271.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="261" width="0.8" height="15.0" fill="rgb(247,189,34)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="229" width="0.8" height="15.0" fill="rgb(240,222,30)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.56%)</title><rect x="732.7" y="149" width="6.6" height="15.0" fill="rgb(213,12,5)" rx="2" ry="2" />
<text  x="735.67" y="159.5" ></text>
</g>
<g >
<title>rand_sse@plt (30,303,030 samples, 0.21%)</title><rect x="806.8" y="213" width="2.5" height="15.0" fill="rgb(208,170,25)" rx="2" ry="2" />
<text  x="809.83" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="813.4" y="213" width="0.8" height="15.0" fill="rgb(211,99,10)" rx="2" ry="2" />
<text  x="816.42" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="29.0" y="197" width="0.8" height="15.0" fill="rgb(253,87,29)" rx="2" ry="2" />
<text  x="31.95" y="207.5" ></text>
</g>
<g >
<title>all (14,464,646,320 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(249,118,38)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>BibopHeap::BibopFreeCache::add (676,767,670 samples, 4.68%)</title><rect x="460.7" y="229" width="55.2" height="15.0" fill="rgb(217,6,6)" rx="2" ry="2" />
<text  x="463.74" y="239.5" >Bibop..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.63%)</title><rect x="794.5" y="117" width="7.4" height="15.0" fill="rgb(232,102,52)" rx="2" ry="2" />
<text  x="797.47" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.35%)</title><rect x="15.8" y="117" width="4.1" height="15.0" fill="rgb(213,92,42)" rx="2" ry="2" />
<text  x="18.77" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="779.6" y="197" width="1.7" height="15.0" fill="rgb(245,153,15)" rx="2" ry="2" />
<text  x="782.64" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="197" width="0.8" height="15.0" fill="rgb(221,207,24)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>[unknown] (70,707,070 samples, 0.49%)</title><rect x="28.1" y="261" width="5.8" height="15.0" fill="rgb(237,52,8)" rx="2" ry="2" />
<text  x="31.13" y="271.5" ></text>
</g>
<g >
<title>swapper (4,545,454,500 samples, 31.42%)</title><rect x="819.2" y="277" width="370.8" height="15.0" fill="rgb(229,170,4)" rx="2" ry="2" />
<text  x="822.19" y="287.5" >swapper</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,262,626,240 samples, 15.64%)</title><rect x="1005.4" y="133" width="184.6" height="15.0" fill="rgb(237,111,13)" rx="2" ry="2" />
<text  x="1008.42" y="143.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.35%)</title><rect x="15.8" y="149" width="4.1" height="15.0" fill="rgb(215,172,17)" rx="2" ry="2" />
<text  x="18.77" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.70%)</title><rect x="507.7" y="165" width="8.2" height="15.0" fill="rgb(205,210,33)" rx="2" ry="2" />
<text  x="510.71" y="175.5" ></text>
</g>
</g>
</svg>
