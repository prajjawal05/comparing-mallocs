<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="117" width="0.3" height="15.0" fill="rgb(217,207,29)" rx="2" ry="2" />
<text  x="14.85" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="213" width="0.4" height="15.0" fill="rgb(227,50,18)" rx="2" ry="2" />
<text  x="15.22" y="223.5" ></text>
</g>
<g >
<title>xxfree (10,101,010 samples, 0.03%)</title><rect x="100.3" y="277" width="0.4" height="15.0" fill="rgb(234,120,36)" rx="2" ry="2" />
<text  x="103.31" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="293" width="0.4" height="15.0" fill="rgb(244,30,33)" rx="2" ry="2" />
<text  x="13.74" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,232,323,090 samples, 44.20%)</title><rect x="668.5" y="165" width="521.5" height="15.0" fill="rgb(230,113,35)" rx="2" ry="2" />
<text  x="671.48" y="175.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="149" width="0.3" height="15.0" fill="rgb(240,92,33)" rx="2" ry="2" />
<text  x="14.85" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.16%)</title><rect x="13.0" y="277" width="1.8" height="15.0" fill="rgb(216,101,36)" rx="2" ry="2" />
<text  x="15.96" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.31%)</title><rect x="106.6" y="229" width="3.7" height="15.0" fill="rgb(233,66,25)" rx="2" ry="2" />
<text  x="109.61" y="239.5" ></text>
</g>
<g >
<title>pthread_spin_lock (565,656,560 samples, 1.76%)</title><rect x="61.4" y="277" width="20.8" height="15.0" fill="rgb(228,71,17)" rx="2" ry="2" />
<text  x="64.45" y="287.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="277" width="0.4" height="15.0" fill="rgb(218,146,23)" rx="2" ry="2" />
<text  x="14.48" y="287.5" ></text>
</g>
<g >
<title>__tls_get_addr (10,101,010 samples, 0.03%)</title><rect x="112.5" y="245" width="0.4" height="15.0" fill="rgb(210,226,17)" rx="2" ry="2" />
<text  x="115.53" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="668.1" y="53" width="0.4" height="15.0" fill="rgb(252,96,0)" rx="2" ry="2" />
<text  x="671.11" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="44.1" y="213" width="0.3" height="15.0" fill="rgb(223,204,23)" rx="2" ry="2" />
<text  x="47.05" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="667.7" y="181" width="0.8" height="15.0" fill="rgb(248,127,45)" rx="2" ry="2" />
<text  x="670.74" y="191.5" ></text>
</g>
<g >
<title>all (32,202,019,880 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(228,64,6)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>python3 (10,101,010 samples, 0.03%)</title><rect x="11.1" y="309" width="0.4" height="15.0" fill="rgb(220,37,51)" rx="2" ry="2" />
<text  x="14.11" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="213" width="0.3" height="15.0" fill="rgb(246,71,1)" rx="2" ry="2" />
<text  x="14.85" y="223.5" ></text>
</g>
<g >
<title>swapper (28,717,171,430 samples, 89.18%)</title><rect x="137.7" y="309" width="1052.3" height="15.0" fill="rgb(219,6,34)" rx="2" ry="2" />
<text  x="140.70" y="319.5" >swapper</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="229" width="0.4" height="15.0" fill="rgb(232,170,4)" rx="2" ry="2" />
<text  x="15.22" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="58.5" y="229" width="2.2" height="15.0" fill="rgb(232,77,29)" rx="2" ry="2" />
<text  x="61.49" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,232,323,090 samples, 44.20%)</title><rect x="668.5" y="197" width="521.5" height="15.0" fill="rgb(211,129,22)" rx="2" ry="2" />
<text  x="671.48" y="207.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>PyObject_GetAttr (10,101,010 samples, 0.03%)</title><rect x="11.1" y="277" width="0.4" height="15.0" fill="rgb(246,25,13)" rx="2" ry="2" />
<text  x="14.11" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.28%)</title><rect x="87.7" y="245" width="3.4" height="15.0" fill="rgb(224,218,3)" rx="2" ry="2" />
<text  x="90.73" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="165" width="0.3" height="15.0" fill="rgb(240,73,21)" rx="2" ry="2" />
<text  x="14.85" y="175.5" ></text>
</g>
<g >
<title>expand_word_leave_quoted (10,101,010 samples, 0.03%)</title><rect x="10.0" y="277" width="0.4" height="15.0" fill="rgb(226,129,28)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="667.7" y="149" width="0.8" height="15.0" fill="rgb(254,194,29)" rx="2" ry="2" />
<text  x="670.74" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,212,121,070 samples, 44.13%)</title><rect x="669.2" y="133" width="520.8" height="15.0" fill="rgb(216,216,13)" rx="2" ry="2" />
<text  x="672.22" y="143.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="44.1" y="229" width="0.3" height="15.0" fill="rgb(217,82,48)" rx="2" ry="2" />
<text  x="47.05" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="43.7" y="245" width="0.4" height="15.0" fill="rgb(227,192,13)" rx="2" ry="2" />
<text  x="46.68" y="255.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="293" width="0.4" height="15.0" fill="rgb(240,103,42)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,484,848,340 samples, 44.98%)</title><rect x="137.7" y="229" width="530.8" height="15.0" fill="rgb(210,146,12)" rx="2" ry="2" />
<text  x="140.70" y="239.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="668.1" y="37" width="0.4" height="15.0" fill="rgb(252,116,42)" rx="2" ry="2" />
<text  x="671.11" y="47.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (444,444,440 samples, 1.38%)</title><rect x="44.4" y="277" width="16.3" height="15.0" fill="rgb(236,0,33)" rx="2" ry="2" />
<text  x="47.42" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,484,848,340 samples, 44.98%)</title><rect x="137.7" y="277" width="530.8" height="15.0" fill="rgb(223,107,13)" rx="2" ry="2" />
<text  x="140.70" y="287.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (10,101,010 samples, 0.03%)</title><rect x="14.8" y="293" width="0.4" height="15.0" fill="rgb(209,215,20)" rx="2" ry="2" />
<text  x="17.81" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,454,545,310 samples, 44.89%)</title><rect x="138.8" y="197" width="529.7" height="15.0" fill="rgb(246,63,47)" rx="2" ry="2" />
<text  x="141.81" y="207.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.16%)</title><rect x="110.7" y="133" width="1.8" height="15.0" fill="rgb(220,9,53)" rx="2" ry="2" />
<text  x="113.68" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="44.1" y="245" width="0.3" height="15.0" fill="rgb(222,156,3)" rx="2" ry="2" />
<text  x="47.05" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="59.6" y="149" width="1.1" height="15.0" fill="rgb(249,29,40)" rx="2" ry="2" />
<text  x="62.60" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.16%)</title><rect x="13.0" y="293" width="1.8" height="15.0" fill="rgb(237,8,22)" rx="2" ry="2" />
<text  x="15.96" y="303.5" ></text>
</g>
<g >
<title>BibopHeap::allocateSmallObject (10,101,010 samples, 0.03%)</title><rect x="34.1" y="277" width="0.3" height="15.0" fill="rgb(212,47,52)" rx="2" ry="2" />
<text  x="37.06" y="287.5" ></text>
</g>
<g >
<title>__mprotect (10,101,010 samples, 0.03%)</title><rect x="14.8" y="245" width="0.4" height="15.0" fill="rgb(222,110,33)" rx="2" ry="2" />
<text  x="17.81" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="58.5" y="245" width="2.2" height="15.0" fill="rgb(228,61,53)" rx="2" ry="2" />
<text  x="61.49" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="14.4" y="85" width="0.4" height="15.0" fill="rgb(221,202,45)" rx="2" ry="2" />
<text  x="17.44" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="108.8" y="149" width="1.5" height="15.0" fill="rgb(206,59,31)" rx="2" ry="2" />
<text  x="111.83" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.31%)</title><rect x="106.6" y="213" width="3.7" height="15.0" fill="rgb(228,200,8)" rx="2" ry="2" />
<text  x="109.61" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.97%)</title><rect x="125.9" y="181" width="11.4" height="15.0" fill="rgb(243,51,13)" rx="2" ry="2" />
<text  x="128.85" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.28%)</title><rect x="87.7" y="229" width="3.4" height="15.0" fill="rgb(223,6,49)" rx="2" ry="2" />
<text  x="90.73" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="133" width="0.4" height="15.0" fill="rgb(212,217,49)" rx="2" ry="2" />
<text  x="15.22" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="59.6" y="181" width="1.1" height="15.0" fill="rgb(237,16,44)" rx="2" ry="2" />
<text  x="62.60" y="191.5" ></text>
</g>
<g >
<title>rand_sse (10,101,010 samples, 0.03%)</title><rect x="99.6" y="261" width="0.3" height="15.0" fill="rgb(251,212,6)" rx="2" ry="2" />
<text  x="102.57" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="261" width="0.3" height="15.0" fill="rgb(208,41,43)" rx="2" ry="2" />
<text  x="14.85" y="271.5" ></text>
</g>
<g >
<title>[unknown] (14,232,323,090 samples, 44.20%)</title><rect x="668.5" y="245" width="521.5" height="15.0" fill="rgb(232,183,38)" rx="2" ry="2" />
<text  x="671.48" y="255.5" >[unknown]</text>
</g>
<g >
<title>_dl_addr (10,101,010 samples, 0.03%)</title><rect x="10.4" y="293" width="0.3" height="15.0" fill="rgb(223,87,6)" rx="2" ry="2" />
<text  x="13.37" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="277" width="0.4" height="15.0" fill="rgb(234,54,7)" rx="2" ry="2" />
<text  x="15.22" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,232,323,090 samples, 44.20%)</title><rect x="668.5" y="181" width="521.5" height="15.0" fill="rgb(228,224,45)" rx="2" ry="2" />
<text  x="671.48" y="191.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="44.1" y="261" width="0.3" height="15.0" fill="rgb(210,125,41)" rx="2" ry="2" />
<text  x="47.05" y="271.5" ></text>
</g>
<g >
<title>BibopHeap::freeSmallObject (10,101,010 samples, 0.03%)</title><rect x="12.6" y="293" width="0.4" height="15.0" fill="rgb(252,27,39)" rx="2" ry="2" />
<text  x="15.59" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 1.00%)</title><rect x="125.5" y="213" width="11.8" height="15.0" fill="rgb(206,18,39)" rx="2" ry="2" />
<text  x="128.48" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="92.5" y="133" width="1.5" height="15.0" fill="rgb(231,155,19)" rx="2" ry="2" />
<text  x="95.54" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="43.7" y="261" width="0.4" height="15.0" fill="rgb(220,10,19)" rx="2" ry="2" />
<text  x="46.68" y="271.5" ></text>
</g>
<g >
<title>BibopHeap::freeSmallObject (262,626,260 samples, 0.82%)</title><rect x="34.4" y="277" width="9.7" height="15.0" fill="rgb(220,190,41)" rx="2" ry="2" />
<text  x="37.43" y="287.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (10,101,010 samples, 0.03%)</title><rect x="118.8" y="293" width="0.4" height="15.0" fill="rgb(230,86,50)" rx="2" ry="2" />
<text  x="121.82" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="59.6" y="197" width="1.1" height="15.0" fill="rgb(224,161,46)" rx="2" ry="2" />
<text  x="62.60" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 1.19%)</title><rect x="123.3" y="261" width="14.0" height="15.0" fill="rgb(240,114,16)" rx="2" ry="2" />
<text  x="126.26" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,484,848,340 samples, 44.98%)</title><rect x="137.7" y="245" width="530.8" height="15.0" fill="rgb(254,209,5)" rx="2" ry="2" />
<text  x="140.70" y="255.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="92.9" y="117" width="1.1" height="15.0" fill="rgb(250,212,53)" rx="2" ry="2" />
<text  x="95.91" y="127.5" ></text>
</g>
<g >
<title>kworker/u4:0-ex (10,101,010 samples, 0.03%)</title><rect x="10.7" y="309" width="0.4" height="15.0" fill="rgb(221,76,52)" rx="2" ry="2" />
<text  x="13.74" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (262,626,260 samples, 0.82%)</title><rect x="127.7" y="165" width="9.6" height="15.0" fill="rgb(230,118,23)" rx="2" ry="2" />
<text  x="130.70" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="667.7" y="117" width="0.8" height="15.0" fill="rgb(243,56,49)" rx="2" ry="2" />
<text  x="670.74" y="127.5" ></text>
</g>
<g >
<title>[unknown] (14,232,323,090 samples, 44.20%)</title><rect x="668.5" y="229" width="521.5" height="15.0" fill="rgb(206,135,17)" rx="2" ry="2" />
<text  x="671.48" y="239.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.16%)</title><rect x="89.2" y="181" width="1.9" height="15.0" fill="rgb(234,42,21)" rx="2" ry="2" />
<text  x="92.21" y="191.5" ></text>
</g>
<g >
<title>xxmalloc (10,101,010 samples, 0.03%)</title><rect x="14.8" y="277" width="0.4" height="15.0" fill="rgb(213,183,22)" rx="2" ry="2" />
<text  x="17.81" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="110.3" y="213" width="2.2" height="15.0" fill="rgb(230,210,22)" rx="2" ry="2" />
<text  x="113.31" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (373,737,370 samples, 1.16%)</title><rect x="123.6" y="245" width="13.7" height="15.0" fill="rgb(214,5,15)" rx="2" ry="2" />
<text  x="126.63" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="229" width="0.3" height="15.0" fill="rgb(222,197,1)" rx="2" ry="2" />
<text  x="14.85" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="89.6" y="149" width="1.5" height="15.0" fill="rgb(227,222,4)" rx="2" ry="2" />
<text  x="92.58" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,222,222,080 samples, 44.17%)</title><rect x="668.8" y="149" width="521.2" height="15.0" fill="rgb(235,146,34)" rx="2" ry="2" />
<text  x="671.85" y="159.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="43.7" y="197" width="0.4" height="15.0" fill="rgb(212,127,21)" rx="2" ry="2" />
<text  x="46.68" y="207.5" ></text>
</g>
<g >
<title>pthread_spin_lock (111,111,110 samples, 0.35%)</title><rect x="114.0" y="261" width="4.1" height="15.0" fill="rgb(227,115,28)" rx="2" ry="2" />
<text  x="117.01" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="197" width="0.3" height="15.0" fill="rgb(231,161,54)" rx="2" ry="2" />
<text  x="14.85" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="59.6" y="213" width="1.1" height="15.0" fill="rgb(205,136,41)" rx="2" ry="2" />
<text  x="62.60" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.16%)</title><rect x="13.0" y="229" width="1.8" height="15.0" fill="rgb(213,24,48)" rx="2" ry="2" />
<text  x="15.96" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="261" width="0.4" height="15.0" fill="rgb(252,202,22)" rx="2" ry="2" />
<text  x="13.74" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,232,323,090 samples, 44.20%)</title><rect x="668.5" y="213" width="521.5" height="15.0" fill="rgb(243,48,44)" rx="2" ry="2" />
<text  x="671.48" y="223.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[unknown] (14,232,323,090 samples, 44.20%)</title><rect x="668.5" y="261" width="521.5" height="15.0" fill="rgb(228,49,32)" rx="2" ry="2" />
<text  x="671.48" y="271.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="667.7" y="165" width="0.8" height="15.0" fill="rgb(240,88,11)" rx="2" ry="2" />
<text  x="670.74" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.16%)</title><rect x="110.7" y="117" width="1.8" height="15.0" fill="rgb(209,100,5)" rx="2" ry="2" />
<text  x="113.68" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="110.3" y="181" width="2.2" height="15.0" fill="rgb(217,2,53)" rx="2" ry="2" />
<text  x="113.31" y="191.5" ></text>
</g>
<g >
<title>dirname (10,101,010 samples, 0.03%)</title><rect x="10.4" y="309" width="0.3" height="15.0" fill="rgb(217,194,20)" rx="2" ry="2" />
<text  x="13.37" y="319.5" ></text>
</g>
<g >
<title>__mprotect (80,808,080 samples, 0.25%)</title><rect x="91.1" y="245" width="2.9" height="15.0" fill="rgb(214,177,37)" rx="2" ry="2" />
<text  x="94.06" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="111.8" y="101" width="0.7" height="15.0" fill="rgb(221,45,48)" rx="2" ry="2" />
<text  x="114.79" y="111.5" ></text>
</g>
<g >
<title>rand_sse (10,101,010 samples, 0.03%)</title><rect x="94.0" y="245" width="0.4" height="15.0" fill="rgb(219,131,47)" rx="2" ry="2" />
<text  x="97.02" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.16%)</title><rect x="13.0" y="261" width="1.8" height="15.0" fill="rgb(244,168,15)" rx="2" ry="2" />
<text  x="15.96" y="271.5" ></text>
</g>
<g >
<title>BibopHeap::allocateSmallObject (323,232,320 samples, 1.00%)</title><rect x="102.2" y="261" width="11.8" height="15.0" fill="rgb(246,127,30)" rx="2" ry="2" />
<text  x="105.16" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="108.8" y="165" width="1.5" height="15.0" fill="rgb(218,138,17)" rx="2" ry="2" />
<text  x="111.83" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="89.9" y="133" width="1.2" height="15.0" fill="rgb(209,187,25)" rx="2" ry="2" />
<text  x="92.95" y="143.5" ></text>
</g>
<g >
<title>pthread_spin_lock (141,414,140 samples, 0.44%)</title><rect x="94.4" y="261" width="5.2" height="15.0" fill="rgb(205,103,26)" rx="2" ry="2" />
<text  x="97.39" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="667.7" y="69" width="0.8" height="15.0" fill="rgb(222,4,21)" rx="2" ry="2" />
<text  x="670.74" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="110.3" y="229" width="2.2" height="15.0" fill="rgb(220,211,44)" rx="2" ry="2" />
<text  x="113.31" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="13.3" y="165" width="1.5" height="15.0" fill="rgb(241,59,46)" rx="2" ry="2" />
<text  x="16.33" y="175.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.06%)</title><rect x="11.5" y="293" width="0.7" height="15.0" fill="rgb(229,93,15)" rx="2" ry="2" />
<text  x="14.48" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="261" width="0.4" height="15.0" fill="rgb(249,73,52)" rx="2" ry="2" />
<text  x="15.22" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="89.6" y="165" width="1.5" height="15.0" fill="rgb(218,225,30)" rx="2" ry="2" />
<text  x="92.58" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.28%)</title><rect x="107.0" y="197" width="3.3" height="15.0" fill="rgb(238,73,2)" rx="2" ry="2" />
<text  x="109.98" y="207.5" ></text>
</g>
<g >
<title>rptest (3,414,141,380 samples, 10.60%)</title><rect x="12.6" y="309" width="125.1" height="15.0" fill="rgb(247,172,7)" rx="2" ry="2" />
<text  x="15.59" y="319.5" >rptest</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="245" width="0.4" height="15.0" fill="rgb(235,48,11)" rx="2" ry="2" />
<text  x="13.74" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="13.3" y="149" width="1.5" height="15.0" fill="rgb(236,140,14)" rx="2" ry="2" />
<text  x="16.33" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.16%)</title><rect x="13.0" y="245" width="1.8" height="15.0" fill="rgb(228,157,33)" rx="2" ry="2" />
<text  x="15.96" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.28%)</title><rect x="87.7" y="213" width="3.4" height="15.0" fill="rgb(221,36,22)" rx="2" ry="2" />
<text  x="90.73" y="223.5" ></text>
</g>
<g >
<title>heapinitialize (10,101,010 samples, 0.03%)</title><rect x="14.8" y="261" width="0.4" height="15.0" fill="rgb(232,215,8)" rx="2" ry="2" />
<text  x="17.81" y="271.5" ></text>
</g>
<g >
<title>xxcalloc (494,949,490 samples, 1.54%)</title><rect x="82.2" y="277" width="18.1" height="15.0" fill="rgb(236,183,16)" rx="2" ry="2" />
<text  x="85.18" y="287.5" ></text>
</g>
<g >
<title>thread_sleep (10,101,010 samples, 0.03%)</title><rect x="137.3" y="293" width="0.4" height="15.0" fill="rgb(225,152,12)" rx="2" ry="2" />
<text  x="140.33" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,454,545,310 samples, 44.89%)</title><rect x="138.8" y="213" width="529.7" height="15.0" fill="rgb(249,143,6)" rx="2" ry="2" />
<text  x="141.81" y="223.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="88.8" y="197" width="2.3" height="15.0" fill="rgb(225,47,19)" rx="2" ry="2" />
<text  x="91.84" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="14.1" y="101" width="0.7" height="15.0" fill="rgb(229,204,28)" rx="2" ry="2" />
<text  x="17.07" y="111.5" ></text>
</g>
<g >
<title>[rptest] (10,101,010 samples, 0.03%)</title><rect x="15.2" y="293" width="0.4" height="15.0" fill="rgb(229,88,22)" rx="2" ry="2" />
<text  x="18.18" y="303.5" ></text>
</g>
<g >
<title>rand_sse (30,303,030 samples, 0.09%)</title><rect x="112.9" y="245" width="1.1" height="15.0" fill="rgb(206,90,18)" rx="2" ry="2" />
<text  x="115.90" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.16%)</title><rect x="13.0" y="213" width="1.8" height="15.0" fill="rgb(206,133,12)" rx="2" ry="2" />
<text  x="15.96" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="43.7" y="229" width="0.4" height="15.0" fill="rgb(245,67,29)" rx="2" ry="2" />
<text  x="46.68" y="239.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (60,606,060 samples, 0.19%)</title><rect x="15.6" y="293" width="2.2" height="15.0" fill="rgb(235,202,10)" rx="2" ry="2" />
<text  x="18.55" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.78%)</title><rect x="128.1" y="149" width="9.2" height="15.0" fill="rgb(245,229,8)" rx="2" ry="2" />
<text  x="131.07" y="159.5" ></text>
</g>
<g >
<title>__open64 (10,101,010 samples, 0.03%)</title><rect x="11.9" y="277" width="0.3" height="15.0" fill="rgb(251,30,30)" rx="2" ry="2" />
<text  x="14.85" y="287.5" ></text>
</g>
<g >
<title>bench.sh (10,101,010 samples, 0.03%)</title><rect x="10.0" y="309" width="0.4" height="15.0" fill="rgb(234,213,2)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="13.7" y="133" width="1.1" height="15.0" fill="rgb(225,134,20)" rx="2" ry="2" />
<text  x="16.70" y="143.5" ></text>
</g>
<g >
<title>__mprotect (60,606,060 samples, 0.19%)</title><rect x="110.3" y="245" width="2.2" height="15.0" fill="rgb(249,184,46)" rx="2" ry="2" />
<text  x="113.31" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 1.00%)</title><rect x="125.5" y="229" width="11.8" height="15.0" fill="rgb(226,181,19)" rx="2" ry="2" />
<text  x="128.48" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="110.3" y="149" width="2.2" height="15.0" fill="rgb(233,177,47)" rx="2" ry="2" />
<text  x="113.31" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="91.8" y="149" width="2.2" height="15.0" fill="rgb(210,172,0)" rx="2" ry="2" />
<text  x="94.80" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,484,848,340 samples, 44.98%)</title><rect x="137.7" y="261" width="530.8" height="15.0" fill="rgb(249,15,39)" rx="2" ry="2" />
<text  x="140.70" y="271.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="109.9" y="133" width="0.4" height="15.0" fill="rgb(207,106,47)" rx="2" ry="2" />
<text  x="112.94" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="59.6" y="165" width="1.1" height="15.0" fill="rgb(233,66,43)" rx="2" ry="2" />
<text  x="62.60" y="175.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (80,808,080 samples, 0.25%)</title><rect x="17.8" y="293" width="2.9" height="15.0" fill="rgb(225,81,27)" rx="2" ry="2" />
<text  x="20.77" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28,717,171,430 samples, 89.18%)</title><rect x="137.7" y="293" width="1052.3" height="15.0" fill="rgb(212,90,40)" rx="2" ry="2" />
<text  x="140.70" y="303.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>clock_nanosleep@@GLIBC_2.17 (494,949,490 samples, 1.54%)</title><rect x="119.2" y="293" width="18.1" height="15.0" fill="rgb(235,223,52)" rx="2" ry="2" />
<text  x="122.19" y="303.5" ></text>
</g>
<g >
<title>xxmemalign (454,545,450 samples, 1.41%)</title><rect x="102.2" y="277" width="16.6" height="15.0" fill="rgb(239,125,16)" rx="2" ry="2" />
<text  x="105.16" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="181" width="0.3" height="15.0" fill="rgb(205,2,28)" rx="2" ry="2" />
<text  x="14.85" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="14.1" y="117" width="0.7" height="15.0" fill="rgb(213,193,35)" rx="2" ry="2" />
<text  x="17.07" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="101" width="0.3" height="15.0" fill="rgb(213,105,40)" rx="2" ry="2" />
<text  x="14.85" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="110.3" y="165" width="2.2" height="15.0" fill="rgb(238,48,8)" rx="2" ry="2" />
<text  x="113.31" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="667.7" y="133" width="0.8" height="15.0" fill="rgb(210,50,43)" rx="2" ry="2" />
<text  x="670.74" y="143.5" ></text>
</g>
<g >
<title>BibopHeap::allocateSmallObject (323,232,320 samples, 1.00%)</title><rect x="82.5" y="261" width="11.9" height="15.0" fill="rgb(226,100,29)" rx="2" ry="2" />
<text  x="85.55" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="245" width="0.3" height="15.0" fill="rgb(216,44,30)" rx="2" ry="2" />
<text  x="14.85" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="44.1" y="277" width="0.3" height="15.0" fill="rgb(235,225,2)" rx="2" ry="2" />
<text  x="47.05" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="110.3" y="197" width="2.2" height="15.0" fill="rgb(249,95,3)" rx="2" ry="2" />
<text  x="113.31" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="277" width="0.4" height="15.0" fill="rgb(232,147,30)" rx="2" ry="2" />
<text  x="13.74" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.16%)</title><rect x="13.0" y="197" width="1.8" height="15.0" fill="rgb(226,96,16)" rx="2" ry="2" />
<text  x="15.96" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.22%)</title><rect x="91.4" y="197" width="2.6" height="15.0" fill="rgb(244,47,39)" rx="2" ry="2" />
<text  x="94.43" y="207.5" ></text>
</g>
<g >
<title>__libc_read (10,101,010 samples, 0.03%)</title><rect x="12.2" y="293" width="0.4" height="15.0" fill="rgb(225,89,25)" rx="2" ry="2" />
<text  x="15.22" y="303.5" ></text>
</g>
<g >
<title>xxmalloc (20,202,020 samples, 0.06%)</title><rect x="118.1" y="261" width="0.7" height="15.0" fill="rgb(238,187,15)" rx="2" ry="2" />
<text  x="121.08" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="43.7" y="213" width="0.4" height="15.0" fill="rgb(212,40,43)" rx="2" ry="2" />
<text  x="46.68" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.22%)</title><rect x="91.4" y="181" width="2.6" height="15.0" fill="rgb(239,160,54)" rx="2" ry="2" />
<text  x="94.43" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.22%)</title><rect x="91.4" y="229" width="2.6" height="15.0" fill="rgb(225,87,38)" rx="2" ry="2" />
<text  x="94.43" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="181" width="0.4" height="15.0" fill="rgb(215,208,46)" rx="2" ry="2" />
<text  x="15.22" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.16%)</title><rect x="13.0" y="181" width="1.8" height="15.0" fill="rgb(238,96,1)" rx="2" ry="2" />
<text  x="15.96" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.22%)</title><rect x="91.4" y="213" width="2.6" height="15.0" fill="rgb(242,25,30)" rx="2" ry="2" />
<text  x="94.43" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="165" width="0.4" height="15.0" fill="rgb(206,26,31)" rx="2" ry="2" />
<text  x="15.22" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.31%)</title><rect x="106.6" y="245" width="3.7" height="15.0" fill="rgb(245,23,27)" rx="2" ry="2" />
<text  x="109.61" y="255.5" ></text>
</g>
<g >
<title>redis-server (30,303,030 samples, 0.09%)</title><rect x="11.5" y="309" width="1.1" height="15.0" fill="rgb(229,25,31)" rx="2" ry="2" />
<text  x="14.48" y="319.5" ></text>
</g>
<g >
<title>benchmark_worker (2,676,767,650 samples, 8.31%)</title><rect x="20.7" y="293" width="98.1" height="15.0" fill="rgb(229,65,5)" rx="2" ry="2" />
<text  x="23.73" y="303.5" >benchmark_w..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 1.19%)</title><rect x="123.3" y="277" width="14.0" height="15.0" fill="rgb(241,66,14)" rx="2" ry="2" />
<text  x="126.26" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="245" width="0.4" height="15.0" fill="rgb(253,192,33)" rx="2" ry="2" />
<text  x="15.22" y="255.5" ></text>
</g>
<g >
<title>xxmalloc (10,101,010 samples, 0.03%)</title><rect x="99.9" y="261" width="0.4" height="15.0" fill="rgb(250,103,30)" rx="2" ry="2" />
<text  x="102.94" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.97%)</title><rect x="125.9" y="197" width="11.4" height="15.0" fill="rgb(246,48,49)" rx="2" ry="2" />
<text  x="128.85" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="667.7" y="85" width="0.8" height="15.0" fill="rgb(237,118,4)" rx="2" ry="2" />
<text  x="670.74" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="91.8" y="165" width="2.2" height="15.0" fill="rgb(224,130,44)" rx="2" ry="2" />
<text  x="94.80" y="175.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="11.1" y="293" width="0.4" height="15.0" fill="rgb(230,105,1)" rx="2" ry="2" />
<text  x="14.11" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="667.7" y="101" width="0.8" height="15.0" fill="rgb(223,107,40)" rx="2" ry="2" />
<text  x="670.74" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="133" width="0.3" height="15.0" fill="rgb(211,59,41)" rx="2" ry="2" />
<text  x="14.85" y="143.5" ></text>
</g>
<g >
<title>[unknown] (14,232,323,090 samples, 44.20%)</title><rect x="668.5" y="277" width="521.5" height="15.0" fill="rgb(212,71,3)" rx="2" ry="2" />
<text  x="671.48" y="287.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="14.4" y="69" width="0.4" height="15.0" fill="rgb(244,58,44)" rx="2" ry="2" />
<text  x="17.44" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="58.5" y="261" width="2.2" height="15.0" fill="rgb(230,8,26)" rx="2" ry="2" />
<text  x="61.49" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="108.1" y="181" width="2.2" height="15.0" fill="rgb(230,187,41)" rx="2" ry="2" />
<text  x="111.09" y="191.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (20,202,020 samples, 0.06%)</title><rect x="60.7" y="277" width="0.7" height="15.0" fill="rgb(244,78,9)" rx="2" ry="2" />
<text  x="63.71" y="287.5" ></text>
</g>
<g >
<title>BibopHeap::getShadowObjectInfo (50,505,050 samples, 0.16%)</title><rect x="41.8" y="261" width="1.9" height="15.0" fill="rgb(249,126,27)" rx="2" ry="2" />
<text  x="44.83" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="197" width="0.4" height="15.0" fill="rgb(249,134,12)" rx="2" ry="2" />
<text  x="15.22" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="149" width="0.4" height="15.0" fill="rgb(231,217,53)" rx="2" ry="2" />
<text  x="15.22" y="159.5" ></text>
</g>
<g >
<title>xxmalloc (40,404,040 samples, 0.13%)</title><rect x="100.7" y="277" width="1.5" height="15.0" fill="rgb(234,190,53)" rx="2" ry="2" />
<text  x="103.68" y="287.5" ></text>
</g>
</g>
</svg>
