<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="454.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="437" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="437" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1073.1" y="229" width="1.8" height="15.0" fill="rgb(236,163,33)" rx="2" ry="2" />
<text  x="1076.08" y="239.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::PageAllocator::ShrinkToUsageLimit (10,101,010 samples, 0.15%)</title><rect x="1053.3" y="293" width="1.8" height="15.0" fill="rgb(237,224,2)" rx="2" ry="2" />
<text  x="1056.29" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="673.8" y="165" width="1.7" height="15.0" fill="rgb(236,12,26)" rx="2" ry="2" />
<text  x="676.75" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="673.8" y="133" width="1.7" height="15.0" fill="rgb(227,94,4)" rx="2" ry="2" />
<text  x="676.75" y="143.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::central_freelist_internal::CentralFreeList&lt;tcmalloc::tcmalloc_internal::central_freelist_internal::StaticForwarder&gt;::RemoveRange (80,808,080 samples, 1.22%)</title><rect x="1065.9" y="309" width="14.4" height="15.0" fill="rgb(239,67,36)" rx="2" ry="2" />
<text  x="1068.88" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 1.37%)</title><rect x="1080.3" y="357" width="16.2" height="15.0" fill="rgb(217,35,48)" rx="2" ry="2" />
<text  x="1083.27" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="634.2" y="197" width="1.8" height="15.0" fill="rgb(210,167,41)" rx="2" ry="2" />
<text  x="637.18" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="679.1" y="229" width="1.8" height="15.0" fill="rgb(236,184,53)" rx="2" ry="2" />
<text  x="682.15" y="239.5" ></text>
</g>
<g >
<title>dirname (10,101,010 samples, 0.15%)</title><rect x="13.6" y="389" width="1.8" height="15.0" fill="rgb(231,118,15)" rx="2" ry="2" />
<text  x="16.60" y="399.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::huge_page_allocator_internal::HugePageAwareAllocator&lt;tcmalloc::tcmalloc_internal::huge_page_allocator_internal::StaticForwarder&gt;::New (10,101,010 samples, 0.15%)</title><rect x="1078.5" y="293" width="1.8" height="15.0" fill="rgb(233,39,52)" rx="2" ry="2" />
<text  x="1081.48" y="303.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::huge_page_allocator_internal::HugePageAwareAllocator&lt;tcmalloc::tcmalloc_internal::huge_page_allocator_internal::StaticForwarder&gt;::stats (10,101,010 samples, 0.15%)</title><rect x="1053.3" y="277" width="1.8" height="15.0" fill="rgb(228,155,17)" rx="2" ry="2" />
<text  x="1056.29" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1073.1" y="277" width="1.8" height="15.0" fill="rgb(229,33,35)" rx="2" ry="2" />
<text  x="1076.08" y="287.5" ></text>
</g>
<g >
<title>thread_entry (2,838,383,810 samples, 42.84%)</title><rect x="175.5" y="357" width="505.4" height="15.0" fill="rgb(210,67,1)" rx="2" ry="2" />
<text  x="178.49" y="367.5" >thread_entry</text>
</g>
<g >
<title>[libtcmalloc.so] (10,101,010 samples, 0.15%)</title><rect x="632.4" y="325" width="1.8" height="15.0" fill="rgb(252,58,46)" rx="2" ry="2" />
<text  x="635.38" y="335.5" ></text>
</g>
<g >
<title>__strchr_avx2 (10,101,010 samples, 0.15%)</title><rect x="1173.8" y="357" width="1.8" height="15.0" fill="rgb(230,156,9)" rx="2" ry="2" />
<text  x="1176.81" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="10.0" y="229" width="1.8" height="15.0" fill="rgb(233,72,10)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="10.0" y="325" width="1.8" height="15.0" fill="rgb(229,21,4)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="673.8" y="53" width="1.7" height="15.0" fill="rgb(246,125,40)" rx="2" ry="2" />
<text  x="676.75" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.61%)</title><rect x="1175.6" y="357" width="7.2" height="15.0" fill="rgb(212,62,32)" rx="2" ry="2" />
<text  x="1178.61" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.61%)</title><rect x="1182.8" y="213" width="7.2" height="15.0" fill="rgb(246,201,8)" rx="2" ry="2" />
<text  x="1185.80" y="223.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (373,737,370 samples, 5.64%)</title><rect x="610.8" y="341" width="66.5" height="15.0" fill="rgb(223,189,30)" rx="2" ry="2" />
<text  x="613.79" y="351.5" >TCMallo..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="634.2" y="229" width="1.8" height="15.0" fill="rgb(242,101,33)" rx="2" ry="2" />
<text  x="637.18" y="239.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::central_freelist_internal::CentralFreeList&lt;tcmalloc::tcmalloc_internal::central_freelist_internal::StaticForwarder&gt;::InsertRange (90,909,090 samples, 1.37%)</title><rect x="655.8" y="293" width="16.2" height="15.0" fill="rgb(242,165,36)" rx="2" ry="2" />
<text  x="658.76" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="673.8" y="261" width="1.7" height="15.0" fill="rgb(254,155,1)" rx="2" ry="2" />
<text  x="676.75" y="271.5" ></text>
</g>
<g >
<title>[libtcmalloc.so] (10,101,010 samples, 0.15%)</title><rect x="648.6" y="277" width="1.8" height="15.0" fill="rgb(214,108,35)" rx="2" ry="2" />
<text  x="651.57" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1073.1" y="245" width="1.8" height="15.0" fill="rgb(230,5,52)" rx="2" ry="2" />
<text  x="1076.08" y="255.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::Span::FreelistPopBatchSized&lt; (10,101,010 samples, 0.15%)</title><rect x="1074.9" y="293" width="1.8" height="15.0" fill="rgb(248,35,5)" rx="2" ry="2" />
<text  x="1077.88" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 1.37%)</title><rect x="1080.3" y="245" width="16.2" height="15.0" fill="rgb(219,143,47)" rx="2" ry="2" />
<text  x="1083.27" y="255.5" ></text>
</g>
<g >
<title>absl::base_internal::CycleClock::Now (10,101,010 samples, 0.15%)</title><rect x="1051.5" y="261" width="1.8" height="15.0" fill="rgb(220,118,30)" rx="2" ry="2" />
<text  x="1054.49" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="680.9" y="341" width="1.8" height="15.0" fill="rgb(229,178,12)" rx="2" ry="2" />
<text  x="683.95" y="351.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::Span::BitmapFreelistPopBatch (10,101,010 samples, 0.15%)</title><rect x="1071.3" y="293" width="1.8" height="15.0" fill="rgb(241,206,21)" rx="2" ry="2" />
<text  x="1074.28" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="11.8" y="277" width="1.8" height="15.0" fill="rgb(242,21,18)" rx="2" ry="2" />
<text  x="14.80" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1096.5" y="245" width="1.8" height="15.0" fill="rgb(210,94,32)" rx="2" ry="2" />
<text  x="1099.46" y="255.5" ></text>
</g>
<g >
<title>redis-server (10,101,010 samples, 0.15%)</title><rect x="1173.8" y="389" width="1.8" height="15.0" fill="rgb(207,171,18)" rx="2" ry="2" />
<text  x="1176.81" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="680.9" y="309" width="1.8" height="15.0" fill="rgb(243,114,24)" rx="2" ry="2" />
<text  x="683.95" y="319.5" ></text>
</g>
<g >
<title>__madvise (10,101,010 samples, 0.15%)</title><rect x="634.2" y="245" width="1.8" height="15.0" fill="rgb(224,119,15)" rx="2" ry="2" />
<text  x="637.18" y="255.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::huge_page_allocator_internal::HugePageAwareAllocator&lt;tcmalloc::tcmalloc_internal::huge_page_allocator_internal::StaticForwarder&gt;::UnbackWithoutLock (10,101,010 samples, 0.15%)</title><rect x="634.2" y="277" width="1.8" height="15.0" fill="rgb(219,62,14)" rx="2" ry="2" />
<text  x="637.18" y="287.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Overflow (10,101,010 samples, 0.15%)</title><rect x="173.7" y="293" width="1.8" height="15.0" fill="rgb(247,125,12)" rx="2" ry="2" />
<text  x="176.69" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.61%)</title><rect x="1182.8" y="261" width="7.2" height="15.0" fill="rgb(235,57,8)" rx="2" ry="2" />
<text  x="1185.80" y="271.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::central_freelist_internal::StaticForwarder::AllocateSpan (10,101,010 samples, 0.15%)</title><rect x="1076.7" y="293" width="1.8" height="15.0" fill="rgb(211,227,26)" rx="2" ry="2" />
<text  x="1079.68" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="673.8" y="117" width="1.7" height="15.0" fill="rgb(209,159,22)" rx="2" ry="2" />
<text  x="676.75" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.61%)</title><rect x="1182.8" y="229" width="7.2" height="15.0" fill="rgb(207,139,8)" rx="2" ry="2" />
<text  x="1185.80" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="679.1" y="277" width="1.8" height="15.0" fill="rgb(207,28,4)" rx="2" ry="2" />
<text  x="682.15" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="634.2" y="181" width="1.8" height="15.0" fill="rgb(209,13,38)" rx="2" ry="2" />
<text  x="637.18" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="11.8" y="341" width="1.8" height="15.0" fill="rgb(220,137,10)" rx="2" ry="2" />
<text  x="14.80" y="351.5" ></text>
</g>
<g >
<title>TCMallocInternalMalloc (10,101,010 samples, 0.15%)</title><rect x="15.4" y="373" width="1.8" height="15.0" fill="rgb(235,95,49)" rx="2" ry="2" />
<text  x="18.40" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1096.5" y="341" width="1.8" height="15.0" fill="rgb(251,163,45)" rx="2" ry="2" />
<text  x="1099.46" y="351.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (70,707,070 samples, 1.07%)</title><rect x="162.9" y="325" width="12.6" height="15.0" fill="rgb(242,128,44)" rx="2" ry="2" />
<text  x="165.90" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="10.0" y="357" width="1.8" height="15.0" fill="rgb(231,8,44)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Deallocate (232,323,230 samples, 3.51%)</title><rect x="636.0" y="325" width="41.3" height="15.0" fill="rgb(211,71,31)" rx="2" ry="2" />
<text  x="638.98" y="335.5" >tcm..</text>
</g>
<g >
<title>__madvise (10,101,010 samples, 0.15%)</title><rect x="680.9" y="373" width="1.8" height="15.0" fill="rgb(238,5,51)" rx="2" ry="2" />
<text  x="683.95" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1096.5" y="261" width="1.8" height="15.0" fill="rgb(210,90,46)" rx="2" ry="2" />
<text  x="1099.46" y="271.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::UpdateCapacity (10,101,010 samples, 0.15%)</title><rect x="173.7" y="277" width="1.8" height="15.0" fill="rgb(213,57,12)" rx="2" ry="2" />
<text  x="176.69" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="673.8" y="277" width="1.7" height="15.0" fill="rgb(252,51,22)" rx="2" ry="2" />
<text  x="676.75" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 1.22%)</title><rect x="1175.6" y="373" width="14.4" height="15.0" fill="rgb(253,146,10)" rx="2" ry="2" />
<text  x="1178.61" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="673.8" y="229" width="1.7" height="15.0" fill="rgb(226,36,43)" rx="2" ry="2" />
<text  x="676.75" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="673.8" y="37" width="1.7" height="15.0" fill="rgb(238,82,7)" rx="2" ry="2" />
<text  x="676.75" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.61%)</title><rect x="1175.6" y="341" width="7.2" height="15.0" fill="rgb(210,156,52)" rx="2" ry="2" />
<text  x="1178.61" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.76%)</title><rect x="1087.5" y="213" width="9.0" height="15.0" fill="rgb(231,195,8)" rx="2" ry="2" />
<text  x="1090.47" y="223.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::Span::BuildFreelist (10,101,010 samples, 0.15%)</title><rect x="1073.1" y="293" width="1.8" height="15.0" fill="rgb(233,48,40)" rx="2" ry="2" />
<text  x="1076.08" y="303.5" ></text>
</g>
<g >
<title>mstress (6,505,050,440 samples, 98.17%)</title><rect x="15.4" y="389" width="1158.4" height="15.0" fill="rgb(235,164,7)" rx="2" ry="2" />
<text  x="18.40" y="399.5" >mstress</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="10.0" y="293" width="1.8" height="15.0" fill="rgb(247,213,23)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1073.1" y="197" width="1.8" height="15.0" fill="rgb(233,162,29)" rx="2" ry="2" />
<text  x="1076.08" y="207.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Refill (131,313,130 samples, 1.98%)</title><rect x="1056.9" y="325" width="23.4" height="15.0" fill="rgb(246,140,37)" rx="2" ry="2" />
<text  x="1059.89" y="335.5" >t..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="673.8" y="149" width="1.7" height="15.0" fill="rgb(235,182,24)" rx="2" ry="2" />
<text  x="676.75" y="159.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Overflow (202,020,200 samples, 3.05%)</title><rect x="641.4" y="309" width="35.9" height="15.0" fill="rgb(213,15,45)" rx="2" ry="2" />
<text  x="644.37" y="319.5" >tcm..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="11.8" y="261" width="1.8" height="15.0" fill="rgb(252,228,25)" rx="2" ry="2" />
<text  x="14.80" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.61%)</title><rect x="1175.6" y="325" width="7.2" height="15.0" fill="rgb(252,168,28)" rx="2" ry="2" />
<text  x="1178.61" y="335.5" ></text>
</g>
<g >
<title>__libc_fork (10,101,010 samples, 0.15%)</title><rect x="11.8" y="373" width="1.8" height="15.0" fill="rgb(212,90,20)" rx="2" ry="2" />
<text  x="14.80" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 1.37%)</title><rect x="1080.3" y="277" width="16.2" height="15.0" fill="rgb(207,40,43)" rx="2" ry="2" />
<text  x="1083.27" y="287.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::UpdateCapacity (10,101,010 samples, 0.15%)</title><rect x="675.5" y="293" width="1.8" height="15.0" fill="rgb(243,177,25)" rx="2" ry="2" />
<text  x="678.55" y="303.5" ></text>
</g>
<g >
<title>all (6,626,262,560 samples, 100%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(230,192,38)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="11.8" y="293" width="1.8" height="15.0" fill="rgb(208,206,14)" rx="2" ry="2" />
<text  x="14.80" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1096.5" y="325" width="1.8" height="15.0" fill="rgb(209,82,48)" rx="2" ry="2" />
<text  x="1099.46" y="335.5" ></text>
</g>
<g >
<title>[mstress] (30,303,030 samples, 0.46%)</title><rect x="28.0" y="341" width="5.4" height="15.0" fill="rgb(253,173,29)" rx="2" ry="2" />
<text  x="30.99" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 1.37%)</title><rect x="1080.3" y="309" width="16.2" height="15.0" fill="rgb(215,144,34)" rx="2" ry="2" />
<text  x="1083.27" y="319.5" ></text>
</g>
<g >
<title>[unknown] (40,404,040 samples, 0.61%)</title><rect x="1182.8" y="357" width="7.2" height="15.0" fill="rgb(254,87,22)" rx="2" ry="2" />
<text  x="1185.80" y="367.5" ></text>
</g>
<g >
<title>bench.sh (20,202,020 samples, 0.30%)</title><rect x="10.0" y="389" width="3.6" height="15.0" fill="rgb(212,191,31)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="680.9" y="229" width="1.8" height="15.0" fill="rgb(208,84,12)" rx="2" ry="2" />
<text  x="683.95" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.30%)</title><rect x="677.3" y="341" width="3.6" height="15.0" fill="rgb(208,33,27)" rx="2" ry="2" />
<text  x="680.35" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.30%)</title><rect x="677.3" y="309" width="3.6" height="15.0" fill="rgb(239,183,51)" rx="2" ry="2" />
<text  x="680.35" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1073.1" y="261" width="1.8" height="15.0" fill="rgb(241,101,19)" rx="2" ry="2" />
<text  x="1076.08" y="271.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free_pages (10,101,010 samples, 0.15%)</title><rect x="634.2" y="325" width="1.8" height="15.0" fill="rgb(223,83,34)" rx="2" ry="2" />
<text  x="637.18" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="11.8" y="357" width="1.8" height="15.0" fill="rgb(251,53,35)" rx="2" ry="2" />
<text  x="14.80" y="367.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::central_freelist_internal::StaticForwarder::MapObjectToSpan (20,202,020 samples, 0.30%)</title><rect x="672.0" y="293" width="3.5" height="15.0" fill="rgb(243,88,53)" rx="2" ry="2" />
<text  x="674.95" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="673.8" y="197" width="1.7" height="15.0" fill="rgb(236,155,46)" rx="2" ry="2" />
<text  x="676.75" y="207.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Allocate&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::MallocOomPolicy, tcmalloc::tcmalloc_internal::MallocAlignPolicy, tcmalloc::tcmalloc_internal::AllocationAccessHotPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::NonSizeReturningPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (141,414,140 samples, 2.13%)</title><rect x="1055.1" y="341" width="25.2" height="15.0" fill="rgb(226,102,3)" rx="2" ry="2" />
<text  x="1058.09" y="351.5" >t..</text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (20,202,020 samples, 0.30%)</title><rect x="17.2" y="357" width="3.6" height="15.0" fill="rgb(208,150,37)" rx="2" ry="2" />
<text  x="20.20" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.61%)</title><rect x="1182.8" y="277" width="7.2" height="15.0" fill="rgb(216,91,51)" rx="2" ry="2" />
<text  x="1185.80" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1073.1" y="149" width="1.8" height="15.0" fill="rgb(254,206,48)" rx="2" ry="2" />
<text  x="1076.08" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="11.8" y="229" width="1.8" height="15.0" fill="rgb(231,103,43)" rx="2" ry="2" />
<text  x="14.80" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.76%)</title><rect x="1087.5" y="197" width="9.0" height="15.0" fill="rgb(234,89,53)" rx="2" ry="2" />
<text  x="1090.47" y="207.5" ></text>
</g>
<g >
<title>alloc_items (2,323,232,300 samples, 35.06%)</title><rect x="682.7" y="373" width="413.8" height="15.0" fill="rgb(247,196,22)" rx="2" ry="2" />
<text  x="685.74" y="383.5" >alloc_items</text>
</g>
<g >
<title>[unknown] (3,727,272,690 samples, 56.25%)</title><rect x="17.2" y="373" width="663.7" height="15.0" fill="rgb(254,156,44)" rx="2" ry="2" />
<text  x="20.20" y="383.5" >[unknown]</text>
</g>
<g >
<title>[libtcmalloc.so] (20,202,020 samples, 0.30%)</title><rect x="652.2" y="293" width="3.6" height="15.0" fill="rgb(249,182,8)" rx="2" ry="2" />
<text  x="655.16" y="303.5" ></text>
</g>
<g >
<title>[mstress] (40,404,040 samples, 0.61%)</title><rect x="20.8" y="357" width="7.2" height="15.0" fill="rgb(226,172,0)" rx="2" ry="2" />
<text  x="23.79" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="634.2" y="213" width="1.8" height="15.0" fill="rgb(223,105,19)" rx="2" ry="2" />
<text  x="637.18" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="680.9" y="261" width="1.8" height="15.0" fill="rgb(220,28,46)" rx="2" ry="2" />
<text  x="683.95" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1096.5" y="309" width="1.8" height="15.0" fill="rgb(252,201,3)" rx="2" ry="2" />
<text  x="1099.46" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.61%)</title><rect x="1175.6" y="293" width="7.2" height="15.0" fill="rgb(225,153,51)" rx="2" ry="2" />
<text  x="1178.61" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="10.0" y="245" width="1.8" height="15.0" fill="rgb(239,109,29)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.61%)</title><rect x="1182.8" y="245" width="7.2" height="15.0" fill="rgb(206,85,26)" rx="2" ry="2" />
<text  x="1185.80" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.30%)</title><rect x="677.3" y="293" width="3.6" height="15.0" fill="rgb(207,112,17)" rx="2" ry="2" />
<text  x="680.35" y="303.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SampleifyAllocation&lt;tcmalloc::tcmalloc_internal::Static, tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::MallocOomPolicy, tcmalloc::tcmalloc_internal::MallocAlignPolicy, tcmalloc::tcmalloc_internal::AllocationAccessHotPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::NonSizeReturningPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt; &gt; (20,202,020 samples, 0.30%)</title><rect x="1051.5" y="325" width="3.6" height="15.0" fill="rgb(206,103,34)" rx="2" ry="2" />
<text  x="1054.49" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="679.1" y="261" width="1.8" height="15.0" fill="rgb(245,85,26)" rx="2" ry="2" />
<text  x="682.15" y="271.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::huge_page_allocator_internal::HugePageAwareAllocator&lt;tcmalloc::tcmalloc_internal::huge_page_allocator_internal::StaticForwarder&gt;::New (20,202,020 samples, 0.30%)</title><rect x="1051.5" y="309" width="3.6" height="15.0" fill="rgb(242,52,24)" rx="2" ry="2" />
<text  x="1054.49" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1073.1" y="213" width="1.8" height="15.0" fill="rgb(247,94,25)" rx="2" ry="2" />
<text  x="1076.08" y="223.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.15%)</title><rect x="1173.8" y="373" width="1.8" height="15.0" fill="rgb(226,17,45)" rx="2" ry="2" />
<text  x="1176.81" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="10.0" y="341" width="1.8" height="15.0" fill="rgb(247,29,27)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>[unknown] (40,404,040 samples, 0.61%)</title><rect x="1182.8" y="325" width="7.2" height="15.0" fill="rgb(214,14,36)" rx="2" ry="2" />
<text  x="1185.80" y="335.5" ></text>
</g>
<g >
<title>thread_entry (797,979,790 samples, 12.04%)</title><rect x="33.4" y="341" width="142.1" height="15.0" fill="rgb(230,142,41)" rx="2" ry="2" />
<text  x="36.38" y="351.5" >thread_entry</text>
</g>
<g >
<title>swapper (80,808,080 samples, 1.22%)</title><rect x="1175.6" y="389" width="14.4" height="15.0" fill="rgb(213,142,38)" rx="2" ry="2" />
<text  x="1178.61" y="399.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugeCache::ShrinkCache (10,101,010 samples, 0.15%)</title><rect x="634.2" y="293" width="1.8" height="15.0" fill="rgb(219,75,36)" rx="2" ry="2" />
<text  x="637.18" y="303.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugePageFiller&lt;tcmalloc::tcmalloc_internal::PageTracker&gt;::TryGet (10,101,010 samples, 0.15%)</title><rect x="1051.5" y="293" width="1.8" height="15.0" fill="rgb(239,158,8)" rx="2" ry="2" />
<text  x="1054.49" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="673.8" y="213" width="1.7" height="15.0" fill="rgb(229,39,35)" rx="2" ry="2" />
<text  x="676.75" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="673.8" y="101" width="1.7" height="15.0" fill="rgb(216,175,4)" rx="2" ry="2" />
<text  x="676.75" y="111.5" ></text>
</g>
<g >
<title>[unknown] (40,404,040 samples, 0.61%)</title><rect x="1182.8" y="341" width="7.2" height="15.0" fill="rgb(246,223,4)" rx="2" ry="2" />
<text  x="1185.80" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="673.8" y="85" width="1.7" height="15.0" fill="rgb(218,7,0)" rx="2" ry="2" />
<text  x="676.75" y="95.5" ></text>
</g>
<g >
<title>slow_alloc&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::MallocOomPolicy, tcmalloc::tcmalloc_internal::MallocAlignPolicy, tcmalloc::tcmalloc_internal::AllocationAccessHotPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::NonSizeReturningPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;, decltype (20,202,020 samples, 0.30%)</title><rect x="1051.5" y="341" width="3.6" height="15.0" fill="rgb(225,53,40)" rx="2" ry="2" />
<text  x="1054.49" y="351.5" ></text>
</g>
<g >
<title>[unknown] (828,282,820 samples, 12.50%)</title><rect x="28.0" y="357" width="147.5" height="15.0" fill="rgb(207,125,3)" rx="2" ry="2" />
<text  x="30.99" y="367.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.30%)</title><rect x="677.3" y="325" width="3.6" height="15.0" fill="rgb(208,45,15)" rx="2" ry="2" />
<text  x="680.35" y="335.5" ></text>
</g>
<g >
<title>[libtcmalloc.so] (10,101,010 samples, 0.15%)</title><rect x="639.6" y="309" width="1.8" height="15.0" fill="rgb(208,22,9)" rx="2" ry="2" />
<text  x="642.57" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1073.1" y="117" width="1.8" height="15.0" fill="rgb(206,35,37)" rx="2" ry="2" />
<text  x="1076.08" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="680.9" y="293" width="1.8" height="15.0" fill="rgb(238,15,8)" rx="2" ry="2" />
<text  x="683.95" y="303.5" ></text>
</g>
<g >
<title>check_match (10,101,010 samples, 0.15%)</title><rect x="13.6" y="373" width="1.8" height="15.0" fill="rgb(216,140,3)" rx="2" ry="2" />
<text  x="16.60" y="383.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugeCache::Release (10,101,010 samples, 0.15%)</title><rect x="634.2" y="309" width="1.8" height="15.0" fill="rgb(215,78,6)" rx="2" ry="2" />
<text  x="637.18" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1096.5" y="293" width="1.8" height="15.0" fill="rgb(219,63,38)" rx="2" ry="2" />
<text  x="1099.46" y="303.5" ></text>
</g>
<g >
<title>__GI___getdents64 (10,101,010 samples, 0.15%)</title><rect x="10.0" y="373" width="1.8" height="15.0" fill="rgb(232,76,7)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="680.9" y="277" width="1.8" height="15.0" fill="rgb(241,171,23)" rx="2" ry="2" />
<text  x="683.95" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1073.1" y="165" width="1.8" height="15.0" fill="rgb(221,14,41)" rx="2" ry="2" />
<text  x="1076.08" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 1.37%)</title><rect x="1080.3" y="229" width="16.2" height="15.0" fill="rgb(216,125,52)" rx="2" ry="2" />
<text  x="1083.27" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="679.1" y="245" width="1.8" height="15.0" fill="rgb(233,101,23)" rx="2" ry="2" />
<text  x="682.15" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="11.8" y="325" width="1.8" height="15.0" fill="rgb(232,100,33)" rx="2" ry="2" />
<text  x="14.80" y="335.5" ></text>
</g>
<g >
<title>TCMallocInternalMalloc (363,636,360 samples, 5.49%)</title><rect x="1015.5" y="357" width="64.8" height="15.0" fill="rgb(253,60,50)" rx="2" ry="2" />
<text  x="1018.52" y="367.5" >TCMallo..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.61%)</title><rect x="1182.8" y="293" width="7.2" height="15.0" fill="rgb(218,34,0)" rx="2" ry="2" />
<text  x="1185.80" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="10.0" y="277" width="1.8" height="15.0" fill="rgb(206,156,48)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.61%)</title><rect x="1175.6" y="309" width="7.2" height="15.0" fill="rgb(221,171,50)" rx="2" ry="2" />
<text  x="1178.61" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="679.1" y="213" width="1.8" height="15.0" fill="rgb(242,220,7)" rx="2" ry="2" />
<text  x="682.15" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="673.8" y="181" width="1.7" height="15.0" fill="rgb(244,224,32)" rx="2" ry="2" />
<text  x="676.75" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 1.37%)</title><rect x="1080.3" y="325" width="16.2" height="15.0" fill="rgb(254,74,5)" rx="2" ry="2" />
<text  x="1083.27" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="673.8" y="69" width="1.7" height="15.0" fill="rgb(217,193,9)" rx="2" ry="2" />
<text  x="676.75" y="79.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SystemRelease (10,101,010 samples, 0.15%)</title><rect x="634.2" y="261" width="1.8" height="15.0" fill="rgb(206,48,7)" rx="2" ry="2" />
<text  x="637.18" y="271.5" ></text>
</g>
<g >
<title>TcmallocSlab_Internal_PushBatch (30,303,030 samples, 0.46%)</title><rect x="1060.5" y="309" width="5.4" height="15.0" fill="rgb(227,222,8)" rx="2" ry="2" />
<text  x="1063.49" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1073.1" y="181" width="1.8" height="15.0" fill="rgb(222,55,30)" rx="2" ry="2" />
<text  x="1076.08" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="11.8" y="245" width="1.8" height="15.0" fill="rgb(235,102,32)" rx="2" ry="2" />
<text  x="14.80" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="680.9" y="357" width="1.8" height="15.0" fill="rgb(235,31,20)" rx="2" ry="2" />
<text  x="683.95" y="367.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Deallocate (10,101,010 samples, 0.15%)</title><rect x="173.7" y="309" width="1.8" height="15.0" fill="rgb(221,2,40)" rx="2" ry="2" />
<text  x="176.69" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="679.1" y="197" width="1.8" height="15.0" fill="rgb(234,185,25)" rx="2" ry="2" />
<text  x="682.15" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="11.8" y="309" width="1.8" height="15.0" fill="rgb(226,138,1)" rx="2" ry="2" />
<text  x="14.80" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 1.37%)</title><rect x="1080.3" y="293" width="16.2" height="15.0" fill="rgb(253,121,33)" rx="2" ry="2" />
<text  x="1083.27" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1096.5" y="357" width="1.8" height="15.0" fill="rgb(246,141,12)" rx="2" ry="2" />
<text  x="1099.46" y="367.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::huge_page_allocator_internal::HugePageAwareAllocator&lt;tcmalloc::tcmalloc_internal::huge_page_allocator_internal::StaticForwarder&gt;::New (10,101,010 samples, 0.15%)</title><rect x="1076.7" y="277" width="1.8" height="15.0" fill="rgb(211,149,13)" rx="2" ry="2" />
<text  x="1079.68" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="680.9" y="245" width="1.8" height="15.0" fill="rgb(215,17,33)" rx="2" ry="2" />
<text  x="683.95" y="255.5" ></text>
</g>
<g >
<title>start_thread (10,101,010 samples, 0.15%)</title><rect x="1096.5" y="373" width="1.8" height="15.0" fill="rgb(241,212,36)" rx="2" ry="2" />
<text  x="1099.46" y="383.5" ></text>
</g>
<g >
<title>[unknown] (40,404,040 samples, 0.61%)</title><rect x="1182.8" y="309" width="7.2" height="15.0" fill="rgb(245,149,38)" rx="2" ry="2" />
<text  x="1185.80" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="10.0" y="309" width="1.8" height="15.0" fill="rgb(230,62,16)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1073.1" y="133" width="1.8" height="15.0" fill="rgb(232,204,43)" rx="2" ry="2" />
<text  x="1076.08" y="143.5" ></text>
</g>
<g >
<title>__tls_get_addr (10,101,010 samples, 0.15%)</title><rect x="650.4" y="277" width="1.8" height="15.0" fill="rgb(211,123,2)" rx="2" ry="2" />
<text  x="653.37" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="10.0" y="261" width="1.8" height="15.0" fill="rgb(236,11,29)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="680.9" y="325" width="1.8" height="15.0" fill="rgb(223,133,9)" rx="2" ry="2" />
<text  x="683.95" y="335.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugePageFiller&lt;tcmalloc::tcmalloc_internal::PageTracker&gt;::UpdateFillerStatsTracker (10,101,010 samples, 0.15%)</title><rect x="1051.5" y="277" width="1.8" height="15.0" fill="rgb(208,130,4)" rx="2" ry="2" />
<text  x="1054.49" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="673.8" y="245" width="1.7" height="15.0" fill="rgb(246,227,44)" rx="2" ry="2" />
<text  x="676.75" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.61%)</title><rect x="1175.6" y="277" width="7.2" height="15.0" fill="rgb(249,170,38)" rx="2" ry="2" />
<text  x="1178.61" y="287.5" ></text>
</g>
<g >
<title>TcmallocSlab_Internal_PopBatch (50,505,050 samples, 0.76%)</title><rect x="643.2" y="293" width="9.0" height="15.0" fill="rgb(212,133,51)" rx="2" ry="2" />
<text  x="646.17" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 1.37%)</title><rect x="1080.3" y="261" width="16.2" height="15.0" fill="rgb(226,49,37)" rx="2" ry="2" />
<text  x="1083.27" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.15%)</title><rect x="1096.5" y="277" width="1.8" height="15.0" fill="rgb(249,225,7)" rx="2" ry="2" />
<text  x="1099.46" y="287.5" ></text>
</g>
<g >
<title>thread_entry (424,242,420 samples, 6.40%)</title><rect x="1098.3" y="373" width="75.5" height="15.0" fill="rgb(239,27,5)" rx="2" ry="2" />
<text  x="1101.26" y="383.5" >thread_e..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 1.37%)</title><rect x="1080.3" y="341" width="16.2" height="15.0" fill="rgb(214,166,11)" rx="2" ry="2" />
<text  x="1083.27" y="351.5" ></text>
</g>
</g>
</svg>
