<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="278" onload="init(evt)" viewBox="0 0 1200 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="278.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="261" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="261" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (5,676,767,620 samples, 40.09%)</title><rect x="600.8" y="101" width="473.1" height="15.0" fill="rgb(209,122,3)" rx="2" ry="2" />
<text  x="603.84" y="111.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>sm_delcol.part.0 (10,101,010 samples, 0.07%)</title><rect x="16.7" y="149" width="0.9" height="15.0" fill="rgb(249,40,44)" rx="2" ry="2" />
<text  x="19.73" y="159.5" ></text>
</g>
<g >
<title>_int_free (232,323,230 samples, 1.64%)</title><rect x="266.7" y="181" width="19.4" height="15.0" fill="rgb(248,204,19)" rx="2" ry="2" />
<text  x="269.70" y="191.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (20,202,020 samples, 0.14%)</title><rect x="14.2" y="133" width="1.7" height="15.0" fill="rgb(207,212,51)" rx="2" ry="2" />
<text  x="17.21" y="143.5" ></text>
</g>
<g >
<title>_int_free (10,101,010 samples, 0.07%)</title><rect x="20.1" y="165" width="0.8" height="15.0" fill="rgb(210,61,40)" rx="2" ry="2" />
<text  x="23.10" y="175.5" ></text>
</g>
<g >
<title>scofactor (333,333,330 samples, 2.35%)</title><rect x="540.2" y="197" width="27.8" height="15.0" fill="rgb(229,66,13)" rx="2" ry="2" />
<text  x="543.24" y="207.5" >s..</text>
</g>
<g >
<title>sm_row_free (20,202,020 samples, 0.14%)</title><rect x="387.9" y="181" width="1.7" height="15.0" fill="rgb(249,214,31)" rx="2" ry="2" />
<text  x="390.90" y="191.5" ></text>
</g>
<g >
<title>sm_delrow.part.0 (20,202,020 samples, 0.14%)</title><rect x="585.7" y="197" width="1.7" height="15.0" fill="rgb(252,76,8)" rx="2" ry="2" />
<text  x="588.69" y="207.5" ></text>
</g>
<g >
<title>irred_split_cover (10,101,010 samples, 0.07%)</title><rect x="355.9" y="181" width="0.9" height="15.0" fill="rgb(215,229,10)" rx="2" ry="2" />
<text  x="358.92" y="191.5" ></text>
</g>
<g >
<title>[unknown] (1,393,939,380 samples, 9.84%)</title><rect x="1073.9" y="165" width="116.1" height="15.0" fill="rgb(225,39,17)" rx="2" ry="2" />
<text  x="1076.85" y="175.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (4,545,454,500 samples, 32.10%)</title><rect x="11.7" y="197" width="378.7" height="15.0" fill="rgb(223,184,38)" rx="2" ry="2" />
<text  x="14.68" y="207.5" >[unknown]</text>
</g>
<g >
<title>bit_index (10,101,010 samples, 0.07%)</title><rect x="425.8" y="197" width="0.8" height="15.0" fill="rgb(227,141,36)" rx="2" ry="2" />
<text  x="428.78" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,676,767,620 samples, 40.09%)</title><rect x="600.8" y="117" width="473.1" height="15.0" fill="rgb(228,204,41)" rx="2" ry="2" />
<text  x="603.84" y="127.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,393,939,380 samples, 9.84%)</title><rect x="1073.9" y="85" width="116.1" height="15.0" fill="rgb(254,54,24)" rx="2" ry="2" />
<text  x="1076.85" y="95.5" >[[kernel.kalls..</text>
</g>
<g >
<title>sm_insert (20,202,020 samples, 0.14%)</title><rect x="590.7" y="197" width="1.7" height="15.0" fill="rgb(248,154,19)" rx="2" ry="2" />
<text  x="593.74" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="393.8" y="149" width="1.7" height="15.0" fill="rgb(247,20,27)" rx="2" ry="2" />
<text  x="396.79" y="159.5" ></text>
</g>
<g >
<title>[unknown] (1,393,939,380 samples, 9.84%)</title><rect x="1073.9" y="149" width="116.1" height="15.0" fill="rgb(247,94,9)" rx="2" ry="2" />
<text  x="1076.85" y="159.5" >[unknown]</text>
</g>
<g >
<title>visit_row.isra.0.part.0 (10,101,010 samples, 0.07%)</title><rect x="389.6" y="181" width="0.8" height="15.0" fill="rgb(208,193,5)" rx="2" ry="2" />
<text  x="392.59" y="191.5" ></text>
</g>
<g >
<title>setp_implies (40,404,040 samples, 0.29%)</title><rect x="240.6" y="165" width="3.4" height="15.0" fill="rgb(214,149,41)" rx="2" ry="2" />
<text  x="243.61" y="175.5" ></text>
</g>
<g >
<title>complement (30,303,030 samples, 0.21%)</title><rect x="307.1" y="181" width="2.5" height="15.0" fill="rgb(250,205,23)" rx="2" ry="2" />
<text  x="310.10" y="191.5" ></text>
</g>
<g >
<title>redis-server (10,101,010 samples, 0.07%)</title><rect x="600.0" y="213" width="0.8" height="15.0" fill="rgb(231,49,54)" rx="2" ry="2" />
<text  x="603.00" y="223.5" ></text>
</g>
<g >
<title>tautology (40,404,040 samples, 0.29%)</title><rect x="263.3" y="165" width="3.4" height="15.0" fill="rgb(206,80,37)" rx="2" ry="2" />
<text  x="266.34" y="175.5" ></text>
</g>
<g >
<title>scofactor (20,202,020 samples, 0.14%)</title><rect x="238.1" y="165" width="1.7" height="15.0" fill="rgb(249,192,32)" rx="2" ry="2" />
<text  x="241.09" y="175.5" ></text>
</g>
<g >
<title>[unknown] (80,808,080 samples, 0.57%)</title><rect x="11.7" y="165" width="6.7" height="15.0" fill="rgb(229,58,5)" rx="2" ry="2" />
<text  x="14.68" y="175.5" ></text>
</g>
<g >
<title>_int_malloc (353,535,350 samples, 2.50%)</title><rect x="396.3" y="197" width="29.5" height="15.0" fill="rgb(219,8,31)" rx="2" ry="2" />
<text  x="399.32" y="207.5" >_i..</text>
</g>
<g >
<title>binate_split_select (80,808,080 samples, 0.57%)</title><rect x="286.1" y="181" width="6.7" height="15.0" fill="rgb(239,193,21)" rx="2" ry="2" />
<text  x="289.06" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,393,939,380 samples, 9.84%)</title><rect x="1073.9" y="117" width="116.1" height="15.0" fill="rgb(226,156,23)" rx="2" ry="2" />
<text  x="1076.85" y="127.5" >[[kernel.kalls..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="393.8" y="181" width="1.7" height="15.0" fill="rgb(212,117,49)" rx="2" ry="2" />
<text  x="396.79" y="191.5" ></text>
</g>
<g >
<title>__libc_read (10,101,010 samples, 0.07%)</title><rect x="600.0" y="197" width="0.8" height="15.0" fill="rgb(249,169,24)" rx="2" ry="2" />
<text  x="603.00" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="394.6" y="101" width="0.9" height="15.0" fill="rgb(248,42,43)" rx="2" ry="2" />
<text  x="397.64" y="111.5" ></text>
</g>
<g >
<title>_int_free (10,101,010 samples, 0.07%)</title><rect x="395.5" y="197" width="0.8" height="15.0" fill="rgb(221,158,32)" rx="2" ry="2" />
<text  x="398.48" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="393.8" y="165" width="1.7" height="15.0" fill="rgb(251,208,27)" rx="2" ry="2" />
<text  x="396.79" y="175.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (40,404,040 samples, 0.29%)</title><rect x="536.0" y="197" width="3.4" height="15.0" fill="rgb(223,0,38)" rx="2" ry="2" />
<text  x="539.03" y="207.5" ></text>
</g>
<g >
<title>read_cube (10,101,010 samples, 0.07%)</title><rect x="539.4" y="197" width="0.8" height="15.0" fill="rgb(228,70,9)" rx="2" ry="2" />
<text  x="542.40" y="207.5" ></text>
</g>
<g >
<title>ccommon (10,101,010 samples, 0.07%)</title><rect x="292.8" y="181" width="0.8" height="15.0" fill="rgb(227,46,4)" rx="2" ry="2" />
<text  x="295.80" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10,101,010 samples, 0.07%)</title><rect x="15.9" y="149" width="0.8" height="15.0" fill="rgb(234,100,1)" rx="2" ry="2" />
<text  x="18.89" y="159.5" ></text>
</g>
<g >
<title>_dl_addr (10,101,010 samples, 0.07%)</title><rect x="10.8" y="197" width="0.9" height="15.0" fill="rgb(237,188,10)" rx="2" ry="2" />
<text  x="13.84" y="207.5" ></text>
</g>
<g >
<title>[unknown] (1,393,939,380 samples, 9.84%)</title><rect x="1073.9" y="133" width="116.1" height="15.0" fill="rgb(237,158,10)" rx="2" ry="2" />
<text  x="1076.85" y="143.5" >[unknown]</text>
</g>
<g >
<title>swapper (7,070,707,000 samples, 49.93%)</title><rect x="600.8" y="213" width="589.2" height="15.0" fill="rgb(211,30,30)" rx="2" ry="2" />
<text  x="603.84" y="223.5" >swapper</text>
</g>
<g >
<title>sm_row_contains (10,101,010 samples, 0.07%)</title><rect x="594.1" y="197" width="0.9" height="15.0" fill="rgb(245,10,6)" rx="2" ry="2" />
<text  x="597.11" y="207.5" ></text>
</g>
<g >
<title>select_feasible (40,404,040 samples, 0.29%)</title><rect x="568.0" y="197" width="3.4" height="15.0" fill="rgb(211,218,2)" rx="2" ry="2" />
<text  x="571.02" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,676,767,620 samples, 40.09%)</title><rect x="600.8" y="149" width="473.1" height="15.0" fill="rgb(233,19,10)" rx="2" ry="2" />
<text  x="603.84" y="159.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>espresso (7,060,605,990 samples, 49.86%)</title><rect x="11.7" y="213" width="588.3" height="15.0" fill="rgb(206,147,32)" rx="2" ry="2" />
<text  x="14.68" y="223.5" >espresso</text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,676,767,620 samples, 40.09%)</title><rect x="600.8" y="181" width="473.1" height="15.0" fill="rgb(219,42,2)" rx="2" ry="2" />
<text  x="603.84" y="191.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>sm_dup (40,404,040 samples, 0.29%)</title><rect x="587.4" y="197" width="3.3" height="15.0" fill="rgb(233,48,52)" rx="2" ry="2" />
<text  x="590.38" y="207.5" ></text>
</g>
<g >
<title>massive_count (444,444,440 samples, 3.14%)</title><rect x="499.0" y="197" width="37.0" height="15.0" fill="rgb(214,193,40)" rx="2" ry="2" />
<text  x="502.00" y="207.5" >mas..</text>
</g>
<g >
<title>bench.sh (10,101,010 samples, 0.07%)</title><rect x="10.0" y="213" width="0.8" height="15.0" fill="rgb(220,141,38)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>sm_col_contains (10,101,010 samples, 0.07%)</title><rect x="584.9" y="197" width="0.8" height="15.0" fill="rgb(220,226,15)" rx="2" ry="2" />
<text  x="587.85" y="207.5" ></text>
</g>
<g >
<title>sm_row_intersects (30,303,030 samples, 0.21%)</title><rect x="244.8" y="165" width="2.5" height="15.0" fill="rgb(230,198,40)" rx="2" ry="2" />
<text  x="247.82" y="175.5" ></text>
</g>
<g >
<title>full_row (282,828,280 samples, 2.00%)</title><rect x="21.8" y="165" width="23.5" height="15.0" fill="rgb(218,6,21)" rx="2" ry="2" />
<text  x="24.78" y="175.5" >f..</text>
</g>
<g >
<title>compl_lift (90,909,090 samples, 0.64%)</title><rect x="297.8" y="181" width="7.6" height="15.0" fill="rgb(224,184,24)" rx="2" ry="2" />
<text  x="300.85" y="191.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (30,303,030 samples, 0.21%)</title><rect x="596.6" y="197" width="2.6" height="15.0" fill="rgb(206,167,1)" rx="2" ry="2" />
<text  x="599.63" y="207.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.14%)</title><rect x="11.7" y="101" width="1.7" height="15.0" fill="rgb(218,68,7)" rx="2" ry="2" />
<text  x="14.68" y="111.5" ></text>
</g>
<g >
<title>set_or (50,505,050 samples, 0.36%)</title><rect x="579.0" y="197" width="4.2" height="15.0" fill="rgb(218,86,32)" rx="2" ry="2" />
<text  x="581.96" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,070,707,000 samples, 49.93%)</title><rect x="600.8" y="197" width="589.2" height="15.0" fill="rgb(236,46,16)" rx="2" ry="2" />
<text  x="603.84" y="207.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>taut_special_cases (10,101,010 samples, 0.07%)</title><rect x="12.5" y="85" width="0.9" height="15.0" fill="rgb(219,21,51)" rx="2" ry="2" />
<text  x="15.52" y="95.5" ></text>
</g>
<g >
<title>sm_minimum_cover (20,202,020 samples, 0.14%)</title><rect x="592.4" y="197" width="1.7" height="15.0" fill="rgb(234,163,30)" rx="2" ry="2" />
<text  x="595.43" y="207.5" ></text>
</g>
<g >
<title>full_row (10,101,010 samples, 0.07%)</title><rect x="355.1" y="181" width="0.8" height="15.0" fill="rgb(211,223,53)" rx="2" ry="2" />
<text  x="358.08" y="191.5" ></text>
</g>
<g >
<title>malloc (272,727,270 samples, 1.93%)</title><rect x="467.0" y="197" width="22.7" height="15.0" fill="rgb(218,151,20)" rx="2" ry="2" />
<text  x="470.02" y="207.5" >m..</text>
</g>
<g >
<title>force_lower (10,101,010 samples, 0.07%)</title><rect x="354.2" y="181" width="0.9" height="15.0" fill="rgb(205,91,26)" rx="2" ry="2" />
<text  x="357.24" y="191.5" ></text>
</g>
<g >
<title>sccc_special_cases (10,101,010 samples, 0.07%)</title><rect x="237.2" y="165" width="0.9" height="15.0" fill="rgb(216,173,33)" rx="2" ry="2" />
<text  x="240.25" y="175.5" ></text>
</g>
<g >
<title>sm_maximal_independent_set (10,101,010 samples, 0.07%)</title><rect x="13.4" y="117" width="0.8" height="15.0" fill="rgb(242,43,19)" rx="2" ry="2" />
<text  x="16.37" y="127.5" ></text>
</g>
<g >
<title>setup_BB_CC (171,717,170 samples, 1.21%)</title><rect x="366.0" y="181" width="14.3" height="15.0" fill="rgb(205,101,50)" rx="2" ry="2" />
<text  x="369.02" y="191.5" ></text>
</g>
<g >
<title>[bash] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="181" width="0.8" height="15.0" fill="rgb(208,205,40)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>elim_lowering (282,828,280 samples, 2.00%)</title><rect x="313.8" y="181" width="23.6" height="15.0" fill="rgb(214,79,2)" rx="2" ry="2" />
<text  x="316.84" y="191.5" >e..</text>
</g>
<g >
<title>compl_merge (20,202,020 samples, 0.14%)</title><rect x="305.4" y="181" width="1.7" height="15.0" fill="rgb(223,85,25)" rx="2" ry="2" />
<text  x="308.42" y="191.5" ></text>
</g>
<g >
<title>all (14,161,616,020 samples, 100%)</title><rect x="10.0" y="229" width="1180.0" height="15.0" fill="rgb(245,41,12)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>massive_count (2,282,828,260 samples, 16.12%)</title><rect x="46.2" y="165" width="190.2" height="15.0" fill="rgb(240,118,54)" rx="2" ry="2" />
<text  x="49.19" y="175.5" >massive_count</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.14%)</title><rect x="11.7" y="117" width="1.7" height="15.0" fill="rgb(252,78,19)" rx="2" ry="2" />
<text  x="14.68" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="165" width="0.8" height="15.0" fill="rgb(228,200,27)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>taut_special_cases (191,919,190 samples, 1.36%)</title><rect x="247.3" y="165" width="16.0" height="15.0" fill="rgb(217,179,32)" rx="2" ry="2" />
<text  x="250.35" y="175.5" ></text>
</g>
<g >
<title>set_copy (20,202,020 samples, 0.14%)</title><rect x="573.9" y="197" width="1.7" height="15.0" fill="rgb(241,9,45)" rx="2" ry="2" />
<text  x="576.91" y="207.5" ></text>
</g>
<g >
<title>dirname (10,101,010 samples, 0.07%)</title><rect x="10.8" y="213" width="0.9" height="15.0" fill="rgb(237,27,47)" rx="2" ry="2" />
<text  x="13.84" y="223.5" ></text>
</g>
<g >
<title>mini_sort (50,505,050 samples, 0.36%)</title><rect x="359.3" y="181" width="4.2" height="15.0" fill="rgb(248,229,12)" rx="2" ry="2" />
<text  x="362.29" y="191.5" ></text>
</g>
<g >
<title>setp_disjoint (10,101,010 samples, 0.07%)</title><rect x="365.2" y="181" width="0.8" height="15.0" fill="rgb(240,177,12)" rx="2" ry="2" />
<text  x="368.18" y="191.5" ></text>
</g>
<g >
<title>set_copy (10,101,010 samples, 0.07%)</title><rect x="239.8" y="165" width="0.8" height="15.0" fill="rgb(205,74,0)" rx="2" ry="2" />
<text  x="242.77" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,393,939,380 samples, 9.84%)</title><rect x="1073.9" y="69" width="116.1" height="15.0" fill="rgb(230,196,4)" rx="2" ry="2" />
<text  x="1076.85" y="79.5" >[[kernel.kalls..</text>
</g>
<g >
<title>set_diff (30,303,030 samples, 0.21%)</title><rect x="575.6" y="197" width="2.5" height="15.0" fill="rgb(206,151,52)" rx="2" ry="2" />
<text  x="578.59" y="207.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (40,404,040 samples, 0.29%)</title><rect x="293.6" y="181" width="3.4" height="15.0" fill="rgb(206,12,37)" rx="2" ry="2" />
<text  x="296.64" y="191.5" ></text>
</g>
<g >
<title>compl_cube (10,101,010 samples, 0.07%)</title><rect x="297.0" y="181" width="0.8" height="15.0" fill="rgb(227,102,38)" rx="2" ry="2" />
<text  x="300.00" y="191.5" ></text>
</g>
<g >
<title>sm_col_contains (60,606,060 samples, 0.43%)</title><rect x="381.2" y="181" width="5.0" height="15.0" fill="rgb(235,210,11)" rx="2" ry="2" />
<text  x="384.17" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="133" width="0.8" height="15.0" fill="rgb(212,139,9)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="394.6" y="117" width="0.9" height="15.0" fill="rgb(239,10,8)" rx="2" ry="2" />
<text  x="397.64" y="127.5" ></text>
</g>
<g >
<title>sm_mincov (10,101,010 samples, 0.07%)</title><rect x="244.0" y="165" width="0.8" height="15.0" fill="rgb(216,194,37)" rx="2" ry="2" />
<text  x="246.98" y="175.5" ></text>
</g>
<g >
<title>mincov (20,202,020 samples, 0.14%)</title><rect x="357.6" y="181" width="1.7" height="15.0" fill="rgb(238,149,22)" rx="2" ry="2" />
<text  x="360.60" y="191.5" ></text>
</g>
<g >
<title>cofactor (464,646,460 samples, 3.28%)</title><rect x="427.5" y="197" width="38.7" height="15.0" fill="rgb(248,28,35)" rx="2" ry="2" />
<text  x="430.46" y="207.5" >cof..</text>
</g>
<g >
<title>sccc (10,101,010 samples, 0.07%)</title><rect x="236.4" y="165" width="0.8" height="15.0" fill="rgb(254,176,28)" rx="2" ry="2" />
<text  x="239.41" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.14%)</title><rect x="393.8" y="133" width="1.7" height="15.0" fill="rgb(240,228,21)" rx="2" ry="2" />
<text  x="396.79" y="143.5" ></text>
</g>
<g >
<title>[unknown] (30,303,030 samples, 0.21%)</title><rect x="11.7" y="133" width="2.5" height="15.0" fill="rgb(216,168,40)" rx="2" ry="2" />
<text  x="14.68" y="143.5" ></text>
</g>
<g >
<title>set_and (30,303,030 samples, 0.21%)</title><rect x="571.4" y="197" width="2.5" height="15.0" fill="rgb(254,79,9)" rx="2" ry="2" />
<text  x="574.38" y="207.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="197" width="0.8" height="15.0" fill="rgb(217,136,22)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,676,767,620 samples, 40.09%)</title><rect x="600.8" y="165" width="473.1" height="15.0" fill="rgb(226,177,3)" rx="2" ry="2" />
<text  x="603.84" y="175.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>complement (10,101,010 samples, 0.07%)</title><rect x="466.2" y="197" width="0.8" height="15.0" fill="rgb(247,219,22)" rx="2" ry="2" />
<text  x="469.18" y="207.5" ></text>
</g>
<g >
<title>sf_free (10,101,010 samples, 0.07%)</title><rect x="380.3" y="181" width="0.9" height="15.0" fill="rgb(253,201,8)" rx="2" ry="2" />
<text  x="383.33" y="191.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.07%)</title><rect x="45.3" y="165" width="0.9" height="15.0" fill="rgb(205,113,0)" rx="2" ry="2" />
<text  x="48.35" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,393,939,380 samples, 9.84%)</title><rect x="1073.9" y="101" width="116.1" height="15.0" fill="rgb(235,202,1)" rx="2" ry="2" />
<text  x="1076.85" y="111.5" >[[kernel.kalls..</text>
</g>
<g >
<title>read_cube (10,101,010 samples, 0.07%)</title><rect x="363.5" y="181" width="0.8" height="15.0" fill="rgb(231,157,6)" rx="2" ry="2" />
<text  x="366.50" y="191.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (10,101,010 samples, 0.07%)</title><rect x="20.9" y="165" width="0.9" height="15.0" fill="rgb(223,15,27)" rx="2" ry="2" />
<text  x="23.94" y="175.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (20,202,020 samples, 0.14%)</title><rect x="18.4" y="165" width="1.7" height="15.0" fill="rgb(228,123,37)" rx="2" ry="2" />
<text  x="21.42" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,676,767,620 samples, 40.09%)</title><rect x="600.8" y="133" width="473.1" height="15.0" fill="rgb(208,55,12)" rx="2" ry="2" />
<text  x="603.84" y="143.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[unknown] (3,060,606,030 samples, 21.61%)</title><rect x="11.7" y="181" width="255.0" height="15.0" fill="rgb(246,220,23)" rx="2" ry="2" />
<text  x="14.68" y="191.5" >[unknown]</text>
</g>
<g >
<title>essen_parts (171,717,170 samples, 1.21%)</title><rect x="337.4" y="181" width="14.3" height="15.0" fill="rgb(213,206,6)" rx="2" ry="2" />
<text  x="340.40" y="191.5" ></text>
</g>
<g >
<title>malloc_consolidate (111,111,110 samples, 0.78%)</title><rect x="489.7" y="197" width="9.3" height="15.0" fill="rgb(245,202,34)" rx="2" ry="2" />
<text  x="492.74" y="207.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (10,101,010 samples, 0.07%)</title><rect x="426.6" y="197" width="0.9" height="15.0" fill="rgb(211,59,43)" rx="2" ry="2" />
<text  x="429.62" y="207.5" ></text>
</g>
<g >
<title>do_sm_minimum_cover (50,505,050 samples, 0.36%)</title><rect x="309.6" y="181" width="4.2" height="15.0" fill="rgb(227,27,3)" rx="2" ry="2" />
<text  x="312.63" y="191.5" ></text>
</g>
<g >
<title>set_dist (10,101,010 samples, 0.07%)</title><rect x="364.3" y="181" width="0.9" height="15.0" fill="rgb(224,214,33)" rx="2" ry="2" />
<text  x="367.34" y="191.5" ></text>
</g>
<g >
<title>set_dist (10,101,010 samples, 0.07%)</title><rect x="578.1" y="197" width="0.9" height="15.0" fill="rgb(236,118,0)" rx="2" ry="2" />
<text  x="581.12" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10,101,010 samples, 0.07%)</title><rect x="390.4" y="197" width="0.9" height="15.0" fill="rgb(220,156,45)" rx="2" ry="2" />
<text  x="393.43" y="207.5" ></text>
</g>
<g >
<title>sm_col_dominance (20,202,020 samples, 0.14%)</title><rect x="386.2" y="181" width="1.7" height="15.0" fill="rgb(230,219,6)" rx="2" ry="2" />
<text  x="389.22" y="191.5" ></text>
</g>
<g >
<title>unravel_range (10,101,010 samples, 0.07%)</title><rect x="599.2" y="197" width="0.8" height="15.0" fill="rgb(214,46,41)" rx="2" ry="2" />
<text  x="602.16" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.07%)</title><rect x="10.0" y="149" width="0.8" height="15.0" fill="rgb(206,82,38)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>massive_count (10,101,010 samples, 0.07%)</title><rect x="356.8" y="181" width="0.8" height="15.0" fill="rgb(222,68,42)" rx="2" ry="2" />
<text  x="359.76" y="191.5" ></text>
</g>
<g >
<title>__times (50,505,050 samples, 0.36%)</title><rect x="391.3" y="197" width="4.2" height="15.0" fill="rgb(227,166,30)" rx="2" ry="2" />
<text  x="394.27" y="207.5" ></text>
</g>
<g >
<title>sm_row_dominance (20,202,020 samples, 0.14%)</title><rect x="595.0" y="197" width="1.6" height="15.0" fill="rgb(213,64,40)" rx="2" ry="2" />
<text  x="597.95" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,393,939,380 samples, 9.84%)</title><rect x="1073.9" y="37" width="116.1" height="15.0" fill="rgb(247,193,37)" rx="2" ry="2" />
<text  x="1076.85" y="47.5" >[[kernel.kalls..</text>
</g>
<g >
<title>[unknown] (50,505,050 samples, 0.36%)</title><rect x="11.7" y="149" width="4.2" height="15.0" fill="rgb(220,5,17)" rx="2" ry="2" />
<text  x="14.68" y="159.5" ></text>
</g>
<g >
<title>[unknown] (1,393,939,380 samples, 9.84%)</title><rect x="1073.9" y="181" width="116.1" height="15.0" fill="rgb(206,4,38)" rx="2" ry="2" />
<text  x="1076.85" y="191.5" >[unknown]</text>
</g>
<g >
<title>feasibly_covered (30,303,030 samples, 0.21%)</title><rect x="351.7" y="181" width="2.5" height="15.0" fill="rgb(220,0,38)" rx="2" ry="2" />
<text  x="354.71" y="191.5" ></text>
</g>
<g >
<title>sf_count (20,202,020 samples, 0.14%)</title><rect x="583.2" y="197" width="1.7" height="15.0" fill="rgb(205,140,26)" rx="2" ry="2" />
<text  x="586.17" y="207.5" ></text>
</g>
<g >
<title>sccc (10,101,010 samples, 0.07%)</title><rect x="11.7" y="85" width="0.8" height="15.0" fill="rgb(226,24,25)" rx="2" ry="2" />
<text  x="14.68" y="95.5" ></text>
</g>
<g >
<title>sm_mincov (10,101,010 samples, 0.07%)</title><rect x="17.6" y="149" width="0.8" height="15.0" fill="rgb(254,178,6)" rx="2" ry="2" />
<text  x="20.57" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,393,939,380 samples, 9.84%)</title><rect x="1073.9" y="53" width="116.1" height="15.0" fill="rgb(206,10,50)" rx="2" ry="2" />
<text  x="1076.85" y="63.5" >[[kernel.kalls..</text>
</g>
</g>
</svg>
