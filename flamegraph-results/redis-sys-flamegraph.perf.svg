<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="774.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="757" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="757" > </text>
<g id="frames">
<g >
<title>asm_sysvec_hyperv_stimer0 (10,101,010 samples, 0.09%)</title><rect x="1188.9" y="517" width="1.1" height="15.0" fill="rgb(241,205,8)" rx="2" ry="2" />
<text  x="1191.90" y="527.5" ></text>
</g>
<g >
<title>__strcspn_sse42 (10,101,010 samples, 0.09%)</title><rect x="10.0" y="677" width="1.1" height="15.0" fill="rgb(211,165,19)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>string2ll (10,101,010 samples, 0.09%)</title><rect x="50.8" y="677" width="1.1" height="15.0" fill="rgb(233,152,29)" rx="2" ry="2" />
<text  x="53.80" y="687.5" ></text>
</g>
<g >
<title>clear_page_erms (10,101,010 samples, 0.09%)</title><rect x="16.6" y="549" width="1.1" height="15.0" fill="rgb(250,76,24)" rx="2" ry="2" />
<text  x="19.62" y="559.5" ></text>
</g>
<g >
<title>zipIntSize (10,101,010 samples, 0.09%)</title><rect x="68.4" y="693" width="1.2" height="15.0" fill="rgb(224,136,49)" rx="2" ry="2" />
<text  x="71.45" y="703.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (10,101,010 samples, 0.09%)</title><rect x="24.3" y="501" width="1.1" height="15.0" fill="rgb(235,68,20)" rx="2" ry="2" />
<text  x="27.34" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.09%)</title><rect x="62.9" y="677" width="1.1" height="15.0" fill="rgb(247,223,20)" rx="2" ry="2" />
<text  x="65.93" y="687.5" ></text>
</g>
<g >
<title>vfs_read (10,101,010 samples, 0.09%)</title><rect x="37.6" y="597" width="1.1" height="15.0" fill="rgb(208,105,9)" rx="2" ry="2" />
<text  x="40.57" y="607.5" ></text>
</g>
<g >
<title>free_unref_page_list (10,101,010 samples, 0.09%)</title><rect x="17.7" y="517" width="1.1" height="15.0" fill="rgb(239,187,23)" rx="2" ry="2" />
<text  x="20.72" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (10,101,010 samples, 0.09%)</title><rect x="62.9" y="645" width="1.1" height="15.0" fill="rgb(226,228,17)" rx="2" ry="2" />
<text  x="65.93" y="655.5" ></text>
</g>
<g >
<title>cpumask_next_and (10,101,010 samples, 0.09%)</title><rect x="643.0" y="453" width="1.1" height="15.0" fill="rgb(238,123,33)" rx="2" ry="2" />
<text  x="646.01" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.09%)</title><rect x="24.3" y="645" width="1.1" height="15.0" fill="rgb(231,106,46)" rx="2" ry="2" />
<text  x="27.34" y="655.5" ></text>
</g>
<g >
<title>zfree (20,202,020 samples, 0.19%)</title><rect x="51.9" y="677" width="2.2" height="15.0" fill="rgb(251,83,12)" rx="2" ry="2" />
<text  x="54.91" y="687.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (10,101,010 samples, 0.09%)</title><rect x="71.8" y="677" width="1.1" height="15.0" fill="rgb(227,76,3)" rx="2" ry="2" />
<text  x="74.76" y="687.5" ></text>
</g>
<g >
<title>load_balance (10,101,010 samples, 0.09%)</title><rect x="643.0" y="485" width="1.1" height="15.0" fill="rgb(246,115,54)" rx="2" ry="2" />
<text  x="646.01" y="495.5" ></text>
</g>
<g >
<title>do_user_addr_fault (10,101,010 samples, 0.09%)</title><rect x="32.1" y="645" width="1.1" height="15.0" fill="rgb(242,47,5)" rx="2" ry="2" />
<text  x="35.06" y="655.5" ></text>
</g>
<g >
<title>apparmor_file_permission (10,101,010 samples, 0.09%)</title><rect x="12.2" y="549" width="1.1" height="15.0" fill="rgb(231,210,16)" rx="2" ry="2" />
<text  x="15.21" y="559.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (10,101,010 samples, 0.09%)</title><rect x="29.9" y="501" width="1.1" height="15.0" fill="rgb(247,128,3)" rx="2" ry="2" />
<text  x="32.85" y="511.5" ></text>
</g>
<g >
<title>release_pages (10,101,010 samples, 0.09%)</title><rect x="17.7" y="533" width="1.1" height="15.0" fill="rgb(251,215,6)" rx="2" ry="2" />
<text  x="20.72" y="543.5" ></text>
</g>
<g >
<title>prep_new_page (10,101,010 samples, 0.09%)</title><rect x="16.6" y="565" width="1.1" height="15.0" fill="rgb(249,151,11)" rx="2" ry="2" />
<text  x="19.62" y="575.5" ></text>
</g>
<g >
<title>[bash] (10,101,010 samples, 0.09%)</title><rect x="13.3" y="677" width="1.1" height="15.0" fill="rgb(211,70,40)" rx="2" ry="2" />
<text  x="16.31" y="687.5" ></text>
</g>
<g >
<title>do_idle (4,999,999,950 samples, 46.26%)</title><rect x="644.1" y="581" width="545.9" height="15.0" fill="rgb(225,204,2)" rx="2" ry="2" />
<text  x="647.11" y="591.5" >do_idle</text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.09%)</title><rect x="24.3" y="629" width="1.1" height="15.0" fill="rgb(217,27,14)" rx="2" ry="2" />
<text  x="27.34" y="639.5" ></text>
</g>
<g >
<title>tcp_write_xmit (10,101,010 samples, 0.09%)</title><rect x="29.9" y="485" width="1.1" height="15.0" fill="rgb(218,82,48)" rx="2" ry="2" />
<text  x="32.85" y="495.5" ></text>
</g>
<g >
<title>find_busiest_group (10,101,010 samples, 0.09%)</title><rect x="643.0" y="469" width="1.1" height="15.0" fill="rgb(251,215,52)" rx="2" ry="2" />
<text  x="646.01" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.09%)</title><rect x="39.8" y="661" width="1.1" height="15.0" fill="rgb(231,210,44)" rx="2" ry="2" />
<text  x="42.78" y="671.5" ></text>
</g>
<g >
<title>rcu_core (10,101,010 samples, 0.09%)</title><rect x="1188.9" y="437" width="1.1" height="15.0" fill="rgb(209,53,23)" rx="2" ry="2" />
<text  x="1191.90" y="447.5" ></text>
</g>
<g >
<title>do_anonymous_page (10,101,010 samples, 0.09%)</title><rect x="23.2" y="597" width="1.1" height="15.0" fill="rgb(239,52,42)" rx="2" ry="2" />
<text  x="26.23" y="607.5" ></text>
</g>
<g >
<title>tcp_recvmsg (10,101,010 samples, 0.09%)</title><rect x="37.6" y="517" width="1.1" height="15.0" fill="rgb(216,113,35)" rx="2" ry="2" />
<text  x="40.57" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_read (20,202,020 samples, 0.19%)</title><rect x="11.1" y="629" width="2.2" height="15.0" fill="rgb(208,12,42)" rx="2" ry="2" />
<text  x="14.10" y="639.5" ></text>
</g>
<g >
<title>redis-server (373,737,370 samples, 3.46%)</title><rect x="31.0" y="709" width="40.8" height="15.0" fill="rgb(224,121,25)" rx="2" ry="2" />
<text  x="33.95" y="719.5" >red..</text>
</g>
<g >
<title>vfs_read (20,202,020 samples, 0.19%)</title><rect x="11.1" y="597" width="2.2" height="15.0" fill="rgb(206,187,52)" rx="2" ry="2" />
<text  x="14.10" y="607.5" ></text>
</g>
<g >
<title>__ziplistInsert (20,202,020 samples, 0.19%)</title><rect x="58.5" y="693" width="2.2" height="15.0" fill="rgb(246,87,27)" rx="2" ry="2" />
<text  x="61.52" y="703.5" ></text>
</g>
<g >
<title>kthread (10,101,010 samples, 0.09%)</title><rect x="16.6" y="677" width="1.1" height="15.0" fill="rgb(249,190,29)" rx="2" ry="2" />
<text  x="19.62" y="687.5" ></text>
</g>
<g >
<title>[unknown] (60,606,060 samples, 0.56%)</title><rect x="24.3" y="677" width="6.7" height="15.0" fill="rgb(225,159,43)" rx="2" ry="2" />
<text  x="27.34" y="687.5" ></text>
</g>
<g >
<title>sysvec_hyperv_stimer0 (30,303,030 samples, 0.28%)</title><rect x="640.8" y="565" width="3.3" height="15.0" fill="rgb(228,41,54)" rx="2" ry="2" />
<text  x="643.80" y="575.5" ></text>
</g>
<g >
<title>sysvec_hyperv_stimer0 (10,101,010 samples, 0.09%)</title><rect x="1188.9" y="501" width="1.1" height="15.0" fill="rgb(208,30,18)" rx="2" ry="2" />
<text  x="1191.90" y="511.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (30,303,030 samples, 0.28%)</title><rect x="27.6" y="533" width="3.4" height="15.0" fill="rgb(235,220,39)" rx="2" ry="2" />
<text  x="30.64" y="543.5" ></text>
</g>
<g >
<title>_quicklistNodeAllowInsert (20,202,020 samples, 0.19%)</title><rect x="60.7" y="693" width="2.2" height="15.0" fill="rgb(235,65,1)" rx="2" ry="2" />
<text  x="63.73" y="703.5" ></text>
</g>
<g >
<title>do_exit (10,101,010 samples, 0.09%)</title><rect x="17.7" y="629" width="1.1" height="15.0" fill="rgb(250,179,1)" rx="2" ry="2" />
<text  x="20.72" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,202,020 samples, 0.19%)</title><rect x="11.1" y="661" width="2.2" height="15.0" fill="rgb(245,201,9)" rx="2" ry="2" />
<text  x="14.10" y="671.5" ></text>
</g>
<g >
<title>[unknown] (191,919,190 samples, 1.78%)</title><rect x="33.2" y="693" width="20.9" height="15.0" fill="rgb(249,77,40)" rx="2" ry="2" />
<text  x="36.16" y="703.5" ></text>
</g>
<g >
<title>next_uptodate_page (10,101,010 samples, 0.09%)</title><rect x="71.8" y="565" width="1.1" height="15.0" fill="rgb(220,59,8)" rx="2" ry="2" />
<text  x="74.76" y="575.5" ></text>
</g>
<g >
<title>__handle_mm_fault (10,101,010 samples, 0.09%)</title><rect x="71.8" y="613" width="1.1" height="15.0" fill="rgb(211,72,14)" rx="2" ry="2" />
<text  x="74.76" y="623.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.19%)</title><rect x="64.0" y="693" width="2.2" height="15.0" fill="rgb(251,185,39)" rx="2" ry="2" />
<text  x="67.04" y="703.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (10,101,010 samples, 0.09%)</title><rect x="17.7" y="581" width="1.1" height="15.0" fill="rgb(221,43,49)" rx="2" ry="2" />
<text  x="20.72" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,202,020 samples, 0.19%)</title><rect x="21.0" y="677" width="2.2" height="15.0" fill="rgb(235,95,25)" rx="2" ry="2" />
<text  x="24.03" y="687.5" ></text>
</g>
<g >
<title>handle_mm_fault (10,101,010 samples, 0.09%)</title><rect x="23.2" y="629" width="1.1" height="15.0" fill="rgb(252,196,39)" rx="2" ry="2" />
<text  x="26.23" y="639.5" ></text>
</g>
<g >
<title>rcu_do_batch (10,101,010 samples, 0.09%)</title><rect x="1188.9" y="421" width="1.1" height="15.0" fill="rgb(231,182,35)" rx="2" ry="2" />
<text  x="1191.90" y="431.5" ></text>
</g>
<g >
<title>common_file_perm (10,101,010 samples, 0.09%)</title><rect x="12.2" y="533" width="1.1" height="15.0" fill="rgb(254,170,36)" rx="2" ry="2" />
<text  x="15.21" y="543.5" ></text>
</g>
<g >
<title>do_user_addr_fault (10,101,010 samples, 0.09%)</title><rect x="71.8" y="645" width="1.1" height="15.0" fill="rgb(223,135,51)" rx="2" ry="2" />
<text  x="74.76" y="655.5" ></text>
</g>
<g >
<title>rest_init (4,999,999,950 samples, 46.26%)</title><rect x="644.1" y="613" width="545.9" height="15.0" fill="rgb(246,194,17)" rx="2" ry="2" />
<text  x="647.11" y="623.5" >rest_init</text>
</g>
<g >
<title>show_mountinfo (10,101,010 samples, 0.09%)</title><rect x="11.1" y="533" width="1.1" height="15.0" fill="rgb(234,117,52)" rx="2" ry="2" />
<text  x="14.10" y="543.5" ></text>
</g>
<g >
<title>ip_rcv (10,101,010 samples, 0.09%)</title><rect x="29.9" y="213" width="1.1" height="15.0" fill="rgb(242,54,28)" rx="2" ry="2" />
<text  x="32.85" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_stimer0 (30,303,030 samples, 0.28%)</title><rect x="640.8" y="581" width="3.3" height="15.0" fill="rgb(247,63,5)" rx="2" ry="2" />
<text  x="643.80" y="591.5" ></text>
</g>
<g >
<title>ip_finish_output (10,101,010 samples, 0.09%)</title><rect x="29.9" y="389" width="1.1" height="15.0" fill="rgb(225,125,6)" rx="2" ry="2" />
<text  x="32.85" y="399.5" ></text>
</g>
<g >
<title>epoll_ctl (10,101,010 samples, 0.09%)</title><rect x="62.9" y="693" width="1.1" height="15.0" fill="rgb(243,139,36)" rx="2" ry="2" />
<text  x="65.93" y="703.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,101,010 samples, 0.09%)</title><rect x="29.9" y="181" width="1.1" height="15.0" fill="rgb(254,89,0)" rx="2" ry="2" />
<text  x="32.85" y="191.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (10,101,010 samples, 0.09%)</title><rect x="24.3" y="533" width="1.1" height="15.0" fill="rgb(208,128,26)" rx="2" ry="2" />
<text  x="27.34" y="543.5" ></text>
</g>
<g >
<title>__handle_mm_fault (10,101,010 samples, 0.09%)</title><rect x="23.2" y="613" width="1.1" height="15.0" fill="rgb(229,17,26)" rx="2" ry="2" />
<text  x="26.23" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (10,101,010 samples, 0.09%)</title><rect x="24.3" y="613" width="1.1" height="15.0" fill="rgb(252,5,3)" rx="2" ry="2" />
<text  x="27.34" y="623.5" ></text>
</g>
<g >
<title>do_group_exit (10,101,010 samples, 0.09%)</title><rect x="17.7" y="645" width="1.1" height="15.0" fill="rgb(229,156,47)" rx="2" ry="2" />
<text  x="20.72" y="655.5" ></text>
</g>
<g >
<title>__handle_mm_fault (10,101,010 samples, 0.09%)</title><rect x="32.1" y="613" width="1.1" height="15.0" fill="rgb(239,32,8)" rx="2" ry="2" />
<text  x="35.06" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (20,202,020 samples, 0.19%)</title><rect x="11.1" y="645" width="2.2" height="15.0" fill="rgb(205,28,32)" rx="2" ry="2" />
<text  x="14.10" y="655.5" ></text>
</g>
<g >
<title>new_sync_read (10,101,010 samples, 0.09%)</title><rect x="11.1" y="581" width="1.1" height="15.0" fill="rgb(241,130,54)" rx="2" ry="2" />
<text  x="14.10" y="591.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (10,101,010 samples, 0.09%)</title><rect x="14.4" y="677" width="1.1" height="15.0" fill="rgb(214,6,45)" rx="2" ry="2" />
<text  x="17.41" y="687.5" ></text>
</g>
<g >
<title>processMultibulkBuffer (10,101,010 samples, 0.09%)</title><rect x="48.6" y="677" width="1.1" height="15.0" fill="rgb(224,201,38)" rx="2" ry="2" />
<text  x="51.60" y="687.5" ></text>
</g>
<g >
<title>get_page_from_freelist (10,101,010 samples, 0.09%)</title><rect x="16.6" y="581" width="1.1" height="15.0" fill="rgb(218,177,6)" rx="2" ry="2" />
<text  x="19.62" y="591.5" ></text>
</g>
<g >
<title>start_kernel (4,999,999,950 samples, 46.26%)</title><rect x="644.1" y="645" width="545.9" height="15.0" fill="rgb(205,111,13)" rx="2" ry="2" />
<text  x="647.11" y="655.5" >start_kernel</text>
</g>
<g >
<title>simple_copy_to_iter (10,101,010 samples, 0.09%)</title><rect x="24.3" y="485" width="1.1" height="15.0" fill="rgb(244,104,27)" rx="2" ry="2" />
<text  x="27.34" y="495.5" ></text>
</g>
<g >
<title>run_rebalance_domains (10,101,010 samples, 0.09%)</title><rect x="643.0" y="517" width="1.1" height="15.0" fill="rgb(248,87,29)" rx="2" ry="2" />
<text  x="646.01" y="527.5" ></text>
</g>
<g >
<title>sock_read_iter (10,101,010 samples, 0.09%)</title><rect x="37.6" y="565" width="1.1" height="15.0" fill="rgb(220,77,18)" rx="2" ry="2" />
<text  x="40.57" y="575.5" ></text>
</g>
<g >
<title>filemap_map_pages (10,101,010 samples, 0.09%)</title><rect x="71.8" y="581" width="1.1" height="15.0" fill="rgb(233,13,23)" rx="2" ry="2" />
<text  x="74.76" y="591.5" ></text>
</g>
<g >
<title>redis-benchmark (121,212,120 samples, 1.12%)</title><rect x="17.7" y="709" width="13.3" height="15.0" fill="rgb(217,59,44)" rx="2" ry="2" />
<text  x="20.72" y="719.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (10,101,010 samples, 0.09%)</title><rect x="29.9" y="229" width="1.1" height="15.0" fill="rgb(243,55,1)" rx="2" ry="2" />
<text  x="32.85" y="239.5" ></text>
</g>
<g >
<title>mmput (10,101,010 samples, 0.09%)</title><rect x="17.7" y="613" width="1.1" height="15.0" fill="rgb(234,200,8)" rx="2" ry="2" />
<text  x="20.72" y="623.5" ></text>
</g>
<g >
<title>do_fault (10,101,010 samples, 0.09%)</title><rect x="15.5" y="597" width="1.1" height="15.0" fill="rgb(213,11,16)" rx="2" ry="2" />
<text  x="18.51" y="607.5" ></text>
</g>
<g >
<title>rcu_core_si (10,101,010 samples, 0.09%)</title><rect x="1188.9" y="453" width="1.1" height="15.0" fill="rgb(214,126,29)" rx="2" ry="2" />
<text  x="1191.90" y="463.5" ></text>
</g>
<g >
<title>rebalance_domains (10,101,010 samples, 0.09%)</title><rect x="643.0" y="501" width="1.1" height="15.0" fill="rgb(219,162,30)" rx="2" ry="2" />
<text  x="646.01" y="511.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (5,222,222,170 samples, 48.32%)</title><rect x="74.0" y="597" width="570.1" height="15.0" fill="rgb(229,67,48)" rx="2" ry="2" />
<text  x="76.96" y="607.5" >__cpuidle_text_start</text>
</g>
<g >
<title>[libjemalloc.so.2] (20,202,020 samples, 0.19%)</title><rect x="31.0" y="693" width="2.2" height="15.0" fill="rgb(253,85,7)" rx="2" ry="2" />
<text  x="33.95" y="703.5" ></text>
</g>
<g >
<title>rcu_do_batch (10,101,010 samples, 0.09%)</title><rect x="641.9" y="485" width="1.1" height="15.0" fill="rgb(240,221,34)" rx="2" ry="2" />
<text  x="644.91" y="495.5" ></text>
</g>
<g >
<title>ktime_get (10,101,010 samples, 0.09%)</title><rect x="37.6" y="453" width="1.1" height="15.0" fill="rgb(221,208,18)" rx="2" ry="2" />
<text  x="40.57" y="463.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (10,101,010 samples, 0.09%)</title><rect x="23.2" y="677" width="1.1" height="15.0" fill="rgb(245,8,36)" rx="2" ry="2" />
<text  x="26.23" y="687.5" ></text>
</g>
<g >
<title>ip_queue_xmit (10,101,010 samples, 0.09%)</title><rect x="29.9" y="453" width="1.1" height="15.0" fill="rgb(209,52,27)" rx="2" ry="2" />
<text  x="32.85" y="463.5" ></text>
</g>
<g >
<title>ksys_read (10,101,010 samples, 0.09%)</title><rect x="37.6" y="613" width="1.1" height="15.0" fill="rgb(219,106,54)" rx="2" ry="2" />
<text  x="40.57" y="623.5" ></text>
</g>
<g >
<title>__libc_write (10,101,010 samples, 0.09%)</title><rect x="39.8" y="677" width="1.1" height="15.0" fill="rgb(246,41,14)" rx="2" ry="2" />
<text  x="42.78" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.09%)</title><rect x="62.9" y="661" width="1.1" height="15.0" fill="rgb(230,213,13)" rx="2" ry="2" />
<text  x="65.93" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.09%)</title><rect x="17.7" y="693" width="1.1" height="15.0" fill="rgb(254,10,8)" rx="2" ry="2" />
<text  x="20.72" y="703.5" ></text>
</g>
<g >
<title>irq_exit_rcu (30,303,030 samples, 0.28%)</title><rect x="640.8" y="549" width="3.3" height="15.0" fill="rgb(231,101,11)" rx="2" ry="2" />
<text  x="643.80" y="559.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (4,999,999,950 samples, 46.26%)</title><rect x="644.1" y="533" width="545.9" height="15.0" fill="rgb(218,32,44)" rx="2" ry="2" />
<text  x="647.11" y="543.5" >__cpuidle_text_start</text>
</g>
<g >
<title>net_rx_action (10,101,010 samples, 0.09%)</title><rect x="29.9" y="293" width="1.1" height="15.0" fill="rgb(220,79,44)" rx="2" ry="2" />
<text  x="32.85" y="303.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (10,101,010 samples, 0.09%)</title><rect x="24.3" y="517" width="1.1" height="15.0" fill="rgb(226,199,54)" rx="2" ry="2" />
<text  x="27.34" y="527.5" ></text>
</g>
<g >
<title>processInputBuffer (10,101,010 samples, 0.09%)</title><rect x="47.5" y="677" width="1.1" height="15.0" fill="rgb(212,148,7)" rx="2" ry="2" />
<text  x="50.50" y="687.5" ></text>
</g>
<g >
<title>prep_new_page (10,101,010 samples, 0.09%)</title><rect x="32.1" y="533" width="1.1" height="15.0" fill="rgb(220,89,48)" rx="2" ry="2" />
<text  x="35.06" y="543.5" ></text>
</g>
<g >
<title>ksys_read (20,202,020 samples, 0.19%)</title><rect x="11.1" y="613" width="2.2" height="15.0" fill="rgb(212,19,1)" rx="2" ry="2" />
<text  x="14.10" y="623.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10,101,010 samples, 0.09%)</title><rect x="29.9" y="133" width="1.1" height="15.0" fill="rgb(223,142,39)" rx="2" ry="2" />
<text  x="32.85" y="143.5" ></text>
</g>
<g >
<title>bench.sh (30,303,030 samples, 0.28%)</title><rect x="13.3" y="709" width="3.3" height="15.0" fill="rgb(240,114,50)" rx="2" ry="2" />
<text  x="16.31" y="719.5" ></text>
</g>
<g >
<title>page_add_file_rmap (10,101,010 samples, 0.09%)</title><rect x="15.5" y="549" width="1.1" height="15.0" fill="rgb(236,136,20)" rx="2" ry="2" />
<text  x="18.51" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_read (10,101,010 samples, 0.09%)</title><rect x="37.6" y="629" width="1.1" height="15.0" fill="rgb(253,182,37)" rx="2" ry="2" />
<text  x="40.57" y="639.5" ></text>
</g>
<g >
<title>do_user_addr_fault (10,101,010 samples, 0.09%)</title><rect x="23.2" y="645" width="1.1" height="15.0" fill="rgb(216,17,11)" rx="2" ry="2" />
<text  x="26.23" y="655.5" ></text>
</g>
<g >
<title>start_secondary (5,232,323,180 samples, 48.41%)</title><rect x="72.9" y="677" width="571.2" height="15.0" fill="rgb(230,130,40)" rx="2" ry="2" />
<text  x="75.86" y="687.5" >start_secondary</text>
</g>
<g >
<title>sock_recvmsg (10,101,010 samples, 0.09%)</title><rect x="24.3" y="581" width="1.1" height="15.0" fill="rgb(252,43,20)" rx="2" ry="2" />
<text  x="27.34" y="591.5" ></text>
</g>
<g >
<title>__lock_text_start (10,101,010 samples, 0.09%)</title><rect x="29.9" y="37" width="1.1" height="15.0" fill="rgb(251,212,12)" rx="2" ry="2" />
<text  x="32.85" y="47.5" ></text>
</g>
<g >
<title>__alloc_pages (10,101,010 samples, 0.09%)</title><rect x="16.6" y="597" width="1.1" height="15.0" fill="rgb(210,117,11)" rx="2" ry="2" />
<text  x="19.62" y="607.5" ></text>
</g>
<g >
<title>all (10,808,080,700 samples, 100%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(251,179,54)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>handle_mm_fault (10,101,010 samples, 0.09%)</title><rect x="32.1" y="629" width="1.1" height="15.0" fill="rgb(224,224,19)" rx="2" ry="2" />
<text  x="35.06" y="639.5" ></text>
</g>
<g >
<title>khugepaged (10,101,010 samples, 0.09%)</title><rect x="16.6" y="661" width="1.1" height="15.0" fill="rgb(209,204,41)" rx="2" ry="2" />
<text  x="19.62" y="671.5" ></text>
</g>
<g >
<title>read (20,202,020 samples, 0.19%)</title><rect x="11.1" y="677" width="2.2" height="15.0" fill="rgb(231,7,44)" rx="2" ry="2" />
<text  x="14.10" y="687.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (10,101,010 samples, 0.09%)</title><rect x="28.7" y="501" width="1.2" height="15.0" fill="rgb(224,37,12)" rx="2" ry="2" />
<text  x="31.75" y="511.5" ></text>
</g>
<g >
<title>__libc_recv (10,101,010 samples, 0.09%)</title><rect x="24.3" y="661" width="1.1" height="15.0" fill="rgb(213,36,38)" rx="2" ry="2" />
<text  x="27.34" y="671.5" ></text>
</g>
<g >
<title>new_sync_read (10,101,010 samples, 0.09%)</title><rect x="37.6" y="581" width="1.1" height="15.0" fill="rgb(210,163,43)" rx="2" ry="2" />
<text  x="40.57" y="591.5" ></text>
</g>
<g >
<title>tlb_remove_table_rcu (10,101,010 samples, 0.09%)</title><rect x="641.9" y="469" width="1.1" height="15.0" fill="rgb(205,194,47)" rx="2" ry="2" />
<text  x="644.91" y="479.5" ></text>
</g>
<g >
<title>do_softirq (10,101,010 samples, 0.09%)</title><rect x="29.9" y="325" width="1.1" height="15.0" fill="rgb(222,93,1)" rx="2" ry="2" />
<text  x="32.85" y="335.5" ></text>
</g>
<g >
<title>arch_call_rest_init (4,999,999,950 samples, 46.26%)</title><rect x="644.1" y="629" width="545.9" height="15.0" fill="rgb(209,4,20)" rx="2" ry="2" />
<text  x="647.11" y="639.5" >arch_call_rest_init</text>
</g>
<g >
<title>__mem_cgroup_uncharge (10,101,010 samples, 0.09%)</title><rect x="641.9" y="421" width="1.1" height="15.0" fill="rgb(231,145,34)" rx="2" ry="2" />
<text  x="644.91" y="431.5" ></text>
</g>
<g >
<title>do_set_pte (10,101,010 samples, 0.09%)</title><rect x="15.5" y="565" width="1.1" height="15.0" fill="rgb(209,114,34)" rx="2" ry="2" />
<text  x="18.51" y="575.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,101,010 samples, 0.09%)</title><rect x="1188.9" y="485" width="1.1" height="15.0" fill="rgb(235,165,19)" rx="2" ry="2" />
<text  x="1191.90" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (20,202,020 samples, 0.19%)</title><rect x="21.0" y="661" width="2.2" height="15.0" fill="rgb(254,190,26)" rx="2" ry="2" />
<text  x="24.03" y="671.5" ></text>
</g>
<g >
<title>collapse_huge_page (10,101,010 samples, 0.09%)</title><rect x="16.6" y="613" width="1.1" height="15.0" fill="rgb(231,117,52)" rx="2" ry="2" />
<text  x="19.62" y="623.5" ></text>
</g>
<g >
<title>__ip_finish_output (10,101,010 samples, 0.09%)</title><rect x="29.9" y="373" width="1.1" height="15.0" fill="rgb(243,108,0)" rx="2" ry="2" />
<text  x="32.85" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (10,101,010 samples, 0.09%)</title><rect x="17.7" y="661" width="1.1" height="15.0" fill="rgb(220,30,35)" rx="2" ry="2" />
<text  x="20.72" y="671.5" ></text>
</g>
<g >
<title>__sys_recvfrom (10,101,010 samples, 0.09%)</title><rect x="24.3" y="597" width="1.1" height="15.0" fill="rgb(219,4,45)" rx="2" ry="2" />
<text  x="27.34" y="607.5" ></text>
</g>
<g >
<title>_copy_to_iter (10,101,010 samples, 0.09%)</title><rect x="24.3" y="469" width="1.1" height="15.0" fill="rgb(230,98,14)" rx="2" ry="2" />
<text  x="27.34" y="479.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (10,101,010 samples, 0.09%)</title><rect x="23.2" y="581" width="1.1" height="15.0" fill="rgb(214,195,3)" rx="2" ry="2" />
<text  x="26.23" y="591.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (10,101,010 samples, 0.09%)</title><rect x="29.9" y="309" width="1.1" height="15.0" fill="rgb(207,201,27)" rx="2" ry="2" />
<text  x="32.85" y="319.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (10,101,010 samples, 0.09%)</title><rect x="37.6" y="469" width="1.1" height="15.0" fill="rgb(219,93,27)" rx="2" ry="2" />
<text  x="40.57" y="479.5" ></text>
</g>
<g >
<title>cpu_startup_entry (5,232,323,180 samples, 48.41%)</title><rect x="72.9" y="661" width="571.2" height="15.0" fill="rgb(205,28,53)" rx="2" ry="2" />
<text  x="75.86" y="671.5" >cpu_startup_entry</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (40,404,040 samples, 0.37%)</title><rect x="54.1" y="693" width="4.4" height="15.0" fill="rgb(208,187,33)" rx="2" ry="2" />
<text  x="57.11" y="703.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (10,101,010 samples, 0.09%)</title><rect x="29.9" y="341" width="1.1" height="15.0" fill="rgb(230,54,45)" rx="2" ry="2" />
<text  x="32.85" y="351.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (30,303,030 samples, 0.28%)</title><rect x="640.8" y="533" width="3.3" height="15.0" fill="rgb(220,157,51)" rx="2" ry="2" />
<text  x="643.80" y="543.5" ></text>
</g>
<g >
<title>_copy_from_iter (10,101,010 samples, 0.09%)</title><rect x="28.7" y="517" width="1.2" height="15.0" fill="rgb(239,73,36)" rx="2" ry="2" />
<text  x="31.75" y="527.5" ></text>
</g>
<g >
<title>__libc_read (20,202,020 samples, 0.19%)</title><rect x="37.6" y="677" width="2.2" height="15.0" fill="rgb(220,187,54)" rx="2" ry="2" />
<text  x="40.57" y="687.5" ></text>
</g>
<g >
<title>do_user_addr_fault (10,101,010 samples, 0.09%)</title><rect x="15.5" y="645" width="1.1" height="15.0" fill="rgb(209,180,31)" rx="2" ry="2" />
<text  x="18.51" y="655.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (4,999,999,950 samples, 46.26%)</title><rect x="644.1" y="661" width="545.9" height="15.0" fill="rgb(252,128,24)" rx="2" ry="2" />
<text  x="647.11" y="671.5" >x86_64_start_reservations</text>
</g>
<g >
<title>khugepaged_scan_pmd (10,101,010 samples, 0.09%)</title><rect x="16.6" y="629" width="1.1" height="15.0" fill="rgb(222,217,43)" rx="2" ry="2" />
<text  x="19.62" y="639.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (10,101,010 samples, 0.09%)</title><rect x="37.6" y="501" width="1.1" height="15.0" fill="rgb(231,33,34)" rx="2" ry="2" />
<text  x="40.57" y="511.5" ></text>
</g>
<g >
<title>sock_recvmsg (10,101,010 samples, 0.09%)</title><rect x="37.6" y="549" width="1.1" height="15.0" fill="rgb(248,165,8)" rx="2" ry="2" />
<text  x="40.57" y="559.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (4,999,999,950 samples, 46.26%)</title><rect x="644.1" y="677" width="545.9" height="15.0" fill="rgb(220,84,52)" rx="2" ry="2" />
<text  x="647.11" y="687.5" >x86_64_start_kernel</text>
</g>
<g >
<title>seq_read_iter (10,101,010 samples, 0.09%)</title><rect x="11.1" y="565" width="1.1" height="15.0" fill="rgb(223,163,2)" rx="2" ry="2" />
<text  x="14.10" y="575.5" ></text>
</g>
<g >
<title>__libc_fork (10,101,010 samples, 0.09%)</title><rect x="15.5" y="693" width="1.1" height="15.0" fill="rgb(249,134,45)" rx="2" ry="2" />
<text  x="18.51" y="703.5" ></text>
</g>
<g >
<title>[unknown] (30,303,030 samples, 0.28%)</title><rect x="10.0" y="693" width="3.3" height="15.0" fill="rgb(243,46,44)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>khugepaged_scan_mm_slot (10,101,010 samples, 0.09%)</title><rect x="16.6" y="645" width="1.1" height="15.0" fill="rgb(232,107,27)" rx="2" ry="2" />
<text  x="19.62" y="655.5" ></text>
</g>
<g >
<title>sed (10,101,010 samples, 0.09%)</title><rect x="71.8" y="709" width="1.1" height="15.0" fill="rgb(209,209,35)" rx="2" ry="2" />
<text  x="74.76" y="719.5" ></text>
</g>
<g >
<title>m_show (10,101,010 samples, 0.09%)</title><rect x="11.1" y="549" width="1.1" height="15.0" fill="rgb(214,152,5)" rx="2" ry="2" />
<text  x="14.10" y="559.5" ></text>
</g>
<g >
<title>uncharge_page (10,101,010 samples, 0.09%)</title><rect x="641.9" y="405" width="1.1" height="15.0" fill="rgb(239,103,36)" rx="2" ry="2" />
<text  x="644.91" y="415.5" ></text>
</g>
<g >
<title>sk_reset_timer (10,101,010 samples, 0.09%)</title><rect x="29.9" y="53" width="1.1" height="15.0" fill="rgb(224,22,34)" rx="2" ry="2" />
<text  x="32.85" y="63.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (10,101,010 samples, 0.09%)</title><rect x="29.9" y="437" width="1.1" height="15.0" fill="rgb(221,75,43)" rx="2" ry="2" />
<text  x="32.85" y="447.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (10,232,323,130 samples, 94.67%)</title><rect x="72.9" y="693" width="1117.1" height="15.0" fill="rgb(245,135,37)" rx="2" ry="2" />
<text  x="75.86" y="703.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>exc_page_fault (10,101,010 samples, 0.09%)</title><rect x="71.8" y="661" width="1.1" height="15.0" fill="rgb(250,5,28)" rx="2" ry="2" />
<text  x="74.76" y="671.5" ></text>
</g>
<g >
<title>handle_mm_fault (10,101,010 samples, 0.09%)</title><rect x="71.8" y="629" width="1.1" height="15.0" fill="rgb(215,31,46)" rx="2" ry="2" />
<text  x="74.76" y="639.5" ></text>
</g>
<g >
<title>do_epoll_ctl (20,202,020 samples, 0.19%)</title><rect x="21.0" y="629" width="2.2" height="15.0" fill="rgb(251,141,9)" rx="2" ry="2" />
<text  x="24.03" y="639.5" ></text>
</g>
<g >
<title>exc_page_fault (10,101,010 samples, 0.09%)</title><rect x="32.1" y="661" width="1.1" height="15.0" fill="rgb(226,37,45)" rx="2" ry="2" />
<text  x="35.06" y="671.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (10,101,010 samples, 0.09%)</title><rect x="37.6" y="485" width="1.1" height="15.0" fill="rgb(249,144,22)" rx="2" ry="2" />
<text  x="40.57" y="495.5" ></text>
</g>
<g >
<title>__sys_sendto (30,303,030 samples, 0.28%)</title><rect x="27.6" y="597" width="3.4" height="15.0" fill="rgb(236,22,52)" rx="2" ry="2" />
<text  x="30.64" y="607.5" ></text>
</g>
<g >
<title>get_page_from_freelist (10,101,010 samples, 0.09%)</title><rect x="32.1" y="549" width="1.1" height="15.0" fill="rgb(241,161,13)" rx="2" ry="2" />
<text  x="35.06" y="559.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (10,101,010 samples, 0.09%)</title><rect x="29.9" y="85" width="1.1" height="15.0" fill="rgb(244,88,41)" rx="2" ry="2" />
<text  x="32.85" y="95.5" ></text>
</g>
<g >
<title>malloc_usable_size (10,101,010 samples, 0.09%)</title><rect x="66.2" y="693" width="1.1" height="15.0" fill="rgb(217,118,7)" rx="2" ry="2" />
<text  x="69.24" y="703.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (10,101,010 samples, 0.09%)</title><rect x="24.3" y="453" width="1.1" height="15.0" fill="rgb(220,106,41)" rx="2" ry="2" />
<text  x="27.34" y="463.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (10,101,010 samples, 0.09%)</title><rect x="17.7" y="565" width="1.1" height="15.0" fill="rgb(212,211,44)" rx="2" ry="2" />
<text  x="20.72" y="575.5" ></text>
</g>
<g >
<title>rcu_core_si (10,101,010 samples, 0.09%)</title><rect x="641.9" y="517" width="1.1" height="15.0" fill="rgb(238,87,41)" rx="2" ry="2" />
<text  x="644.91" y="527.5" ></text>
</g>
<g >
<title>filemap_map_pages (10,101,010 samples, 0.09%)</title><rect x="15.5" y="581" width="1.1" height="15.0" fill="rgb(223,23,49)" rx="2" ry="2" />
<text  x="18.51" y="591.5" ></text>
</g>
<g >
<title>memcpy_erms (10,101,010 samples, 0.09%)</title><rect x="11.1" y="517" width="1.1" height="15.0" fill="rgb(236,159,14)" rx="2" ry="2" />
<text  x="14.10" y="527.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (10,101,010 samples, 0.09%)</title><rect x="29.9" y="69" width="1.1" height="15.0" fill="rgb(217,161,23)" rx="2" ry="2" />
<text  x="32.85" y="79.5" ></text>
</g>
<g >
<title>swapper (10,232,323,130 samples, 94.67%)</title><rect x="72.9" y="709" width="1117.1" height="15.0" fill="rgb(221,228,24)" rx="2" ry="2" />
<text  x="75.86" y="719.5" >swapper</text>
</g>
<g >
<title>__strchr_avx2 (20,202,020 samples, 0.19%)</title><rect x="40.9" y="677" width="2.2" height="15.0" fill="rgb(231,105,49)" rx="2" ry="2" />
<text  x="43.88" y="687.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,101,010 samples, 0.09%)</title><rect x="29.9" y="165" width="1.1" height="15.0" fill="rgb(244,76,49)" rx="2" ry="2" />
<text  x="32.85" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (50,505,050 samples, 0.47%)</title><rect x="25.4" y="629" width="5.6" height="15.0" fill="rgb(223,6,36)" rx="2" ry="2" />
<text  x="28.44" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (30,303,030 samples, 0.28%)</title><rect x="27.6" y="613" width="3.4" height="15.0" fill="rgb(218,180,45)" rx="2" ry="2" />
<text  x="30.64" y="623.5" ></text>
</g>
<g >
<title>ret_from_fork (10,101,010 samples, 0.09%)</title><rect x="16.6" y="693" width="1.1" height="15.0" fill="rgb(233,211,5)" rx="2" ry="2" />
<text  x="19.62" y="703.5" ></text>
</g>
<g >
<title>clear_page_erms (10,101,010 samples, 0.09%)</title><rect x="32.1" y="517" width="1.1" height="15.0" fill="rgb(254,218,21)" rx="2" ry="2" />
<text  x="35.06" y="527.5" ></text>
</g>
<g >
<title>cpu_startup_entry (4,999,999,950 samples, 46.26%)</title><rect x="644.1" y="597" width="545.9" height="15.0" fill="rgb(231,165,43)" rx="2" ry="2" />
<text  x="647.11" y="607.5" >cpu_startup_entry</text>
</g>
<g >
<title>inet_recvmsg (10,101,010 samples, 0.09%)</title><rect x="24.3" y="565" width="1.1" height="15.0" fill="rgb(205,163,6)" rx="2" ry="2" />
<text  x="27.34" y="575.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (10,101,010 samples, 0.09%)</title><rect x="38.7" y="629" width="1.1" height="15.0" fill="rgb(210,107,53)" rx="2" ry="2" />
<text  x="41.67" y="639.5" ></text>
</g>
<g >
<title>process_backlog (10,101,010 samples, 0.09%)</title><rect x="29.9" y="261" width="1.1" height="15.0" fill="rgb(254,113,10)" rx="2" ry="2" />
<text  x="32.85" y="271.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.19%)</title><rect x="13.3" y="693" width="2.2" height="15.0" fill="rgb(211,205,2)" rx="2" ry="2" />
<text  x="16.31" y="703.5" ></text>
</g>
<g >
<title>ip_finish_output2 (10,101,010 samples, 0.09%)</title><rect x="29.9" y="357" width="1.1" height="15.0" fill="rgb(216,97,0)" rx="2" ry="2" />
<text  x="32.85" y="367.5" ></text>
</g>
<g >
<title>[redis-check-rdb] (10,101,010 samples, 0.09%)</title><rect x="36.5" y="677" width="1.1" height="15.0" fill="rgb(237,213,17)" rx="2" ry="2" />
<text  x="39.47" y="687.5" ></text>
</g>
<g >
<title>_nl_intern_locale_data (10,101,010 samples, 0.09%)</title><rect x="71.8" y="693" width="1.1" height="15.0" fill="rgb(235,51,45)" rx="2" ry="2" />
<text  x="74.76" y="703.5" ></text>
</g>
<g >
<title>arch_cpu_idle (4,999,999,950 samples, 46.26%)</title><rect x="644.1" y="549" width="545.9" height="15.0" fill="rgb(216,64,53)" rx="2" ry="2" />
<text  x="647.11" y="559.5" >arch_cpu_idle</text>
</g>
<g >
<title>exc_page_fault (10,101,010 samples, 0.09%)</title><rect x="23.2" y="661" width="1.1" height="15.0" fill="rgb(236,147,28)" rx="2" ry="2" />
<text  x="26.23" y="671.5" ></text>
</g>
<g >
<title>redisAsyncRead (60,606,060 samples, 0.56%)</title><rect x="24.3" y="693" width="6.7" height="15.0" fill="rgb(250,183,40)" rx="2" ry="2" />
<text  x="27.34" y="703.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (30,303,030 samples, 0.28%)</title><rect x="33.2" y="677" width="3.3" height="15.0" fill="rgb(232,136,1)" rx="2" ry="2" />
<text  x="36.16" y="687.5" ></text>
</g>
<g >
<title>do_idle (5,232,323,180 samples, 48.41%)</title><rect x="72.9" y="645" width="571.2" height="15.0" fill="rgb(247,12,53)" rx="2" ry="2" />
<text  x="75.86" y="655.5" >do_idle</text>
</g>
<g >
<title>tcp_recvmsg (10,101,010 samples, 0.09%)</title><rect x="24.3" y="549" width="1.1" height="15.0" fill="rgb(215,138,27)" rx="2" ry="2" />
<text  x="27.34" y="559.5" ></text>
</g>
<g >
<title>security_file_permission (10,101,010 samples, 0.09%)</title><rect x="12.2" y="565" width="1.1" height="15.0" fill="rgb(207,79,21)" rx="2" ry="2" />
<text  x="15.21" y="575.5" ></text>
</g>
<g >
<title>init_genrand64 (10,101,010 samples, 0.09%)</title><rect x="23.2" y="693" width="1.1" height="15.0" fill="rgb(227,88,4)" rx="2" ry="2" />
<text  x="26.23" y="703.5" ></text>
</g>
<g >
<title>default_idle_call (4,999,999,950 samples, 46.26%)</title><rect x="644.1" y="565" width="545.9" height="15.0" fill="rgb(212,104,13)" rx="2" ry="2" />
<text  x="647.11" y="575.5" >default_idle_call</text>
</g>
<g >
<title>read_hv_clock_tsc (10,101,010 samples, 0.09%)</title><rect x="37.6" y="437" width="1.1" height="15.0" fill="rgb(230,107,30)" rx="2" ry="2" />
<text  x="40.57" y="447.5" ></text>
</g>
<g >
<title>__libc_send (50,505,050 samples, 0.47%)</title><rect x="25.4" y="661" width="5.6" height="15.0" fill="rgb(244,23,27)" rx="2" ry="2" />
<text  x="28.44" y="671.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,101,010 samples, 0.09%)</title><rect x="29.9" y="149" width="1.1" height="15.0" fill="rgb(244,54,38)" rx="2" ry="2" />
<text  x="32.85" y="159.5" ></text>
</g>
<g >
<title>(s-server) (30,303,030 samples, 0.28%)</title><rect x="10.0" y="709" width="3.3" height="15.0" fill="rgb(245,178,31)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>rb_erase (10,101,010 samples, 0.09%)</title><rect x="62.9" y="613" width="1.1" height="15.0" fill="rgb(214,75,29)" rx="2" ry="2" />
<text  x="65.93" y="623.5" ></text>
</g>
<g >
<title>khugepaged (10,101,010 samples, 0.09%)</title><rect x="16.6" y="709" width="1.1" height="15.0" fill="rgb(209,153,22)" rx="2" ry="2" />
<text  x="19.62" y="719.5" ></text>
</g>
<g >
<title>readQueryFromClient (10,101,010 samples, 0.09%)</title><rect x="49.7" y="677" width="1.1" height="15.0" fill="rgb(219,50,35)" rx="2" ry="2" />
<text  x="52.70" y="687.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (10,101,010 samples, 0.09%)</title><rect x="1188.9" y="469" width="1.1" height="15.0" fill="rgb(235,69,26)" rx="2" ry="2" />
<text  x="1191.90" y="479.5" ></text>
</g>
<g >
<title>tcp_rcv_established (10,101,010 samples, 0.09%)</title><rect x="29.9" y="101" width="1.1" height="15.0" fill="rgb(226,131,54)" rx="2" ry="2" />
<text  x="32.85" y="111.5" ></text>
</g>
<g >
<title>charge_memcg (10,101,010 samples, 0.09%)</title><rect x="23.2" y="565" width="1.1" height="15.0" fill="rgb(215,17,15)" rx="2" ry="2" />
<text  x="26.23" y="575.5" ></text>
</g>
<g >
<title>ip_output (10,101,010 samples, 0.09%)</title><rect x="29.9" y="405" width="1.1" height="15.0" fill="rgb(227,102,49)" rx="2" ry="2" />
<text  x="32.85" y="415.5" ></text>
</g>
<g >
<title>zrealloc (10,101,010 samples, 0.09%)</title><rect x="70.7" y="693" width="1.1" height="15.0" fill="rgb(225,37,47)" rx="2" ry="2" />
<text  x="73.65" y="703.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (10,101,010 samples, 0.09%)</title><rect x="15.5" y="677" width="1.1" height="15.0" fill="rgb(207,31,51)" rx="2" ry="2" />
<text  x="18.51" y="687.5" ></text>
</g>
<g >
<title>quicklistPushHead (10,101,010 samples, 0.09%)</title><rect x="67.3" y="693" width="1.1" height="15.0" fill="rgb(248,157,50)" rx="2" ry="2" />
<text  x="70.35" y="703.5" ></text>
</g>
<g >
<title>do_fault (10,101,010 samples, 0.09%)</title><rect x="71.8" y="597" width="1.1" height="15.0" fill="rgb(248,6,7)" rx="2" ry="2" />
<text  x="74.76" y="607.5" ></text>
</g>
<g >
<title>rw_verify_area (10,101,010 samples, 0.09%)</title><rect x="12.2" y="581" width="1.1" height="15.0" fill="rgb(218,6,53)" rx="2" ry="2" />
<text  x="15.21" y="591.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (10,101,010 samples, 0.09%)</title><rect x="29.9" y="469" width="1.1" height="15.0" fill="rgb(244,38,46)" rx="2" ry="2" />
<text  x="32.85" y="479.5" ></text>
</g>
<g >
<title>__handle_mm_fault (10,101,010 samples, 0.09%)</title><rect x="15.5" y="613" width="1.1" height="15.0" fill="rgb(239,6,36)" rx="2" ry="2" />
<text  x="18.51" y="623.5" ></text>
</g>
<g >
<title>__napi_poll (10,101,010 samples, 0.09%)</title><rect x="29.9" y="277" width="1.1" height="15.0" fill="rgb(219,93,36)" rx="2" ry="2" />
<text  x="32.85" y="287.5" ></text>
</g>
<g >
<title>decrRefCount (10,101,010 samples, 0.09%)</title><rect x="43.1" y="677" width="1.1" height="15.0" fill="rgb(210,88,31)" rx="2" ry="2" />
<text  x="46.08" y="687.5" ></text>
</g>
<g >
<title>__netif_receive_skb (10,101,010 samples, 0.09%)</title><rect x="29.9" y="245" width="1.1" height="15.0" fill="rgb(235,120,32)" rx="2" ry="2" />
<text  x="32.85" y="255.5" ></text>
</g>
<g >
<title>zmalloc (10,101,010 samples, 0.09%)</title><rect x="69.6" y="693" width="1.1" height="15.0" fill="rgb(248,3,39)" rx="2" ry="2" />
<text  x="72.55" y="703.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (10,101,010 samples, 0.09%)</title><rect x="17.7" y="549" width="1.1" height="15.0" fill="rgb(230,15,52)" rx="2" ry="2" />
<text  x="20.72" y="559.5" ></text>
</g>
<g >
<title>sock_sendmsg (30,303,030 samples, 0.28%)</title><rect x="27.6" y="581" width="3.4" height="15.0" fill="rgb(245,188,23)" rx="2" ry="2" />
<text  x="30.64" y="591.5" ></text>
</g>
<g >
<title>handle_mm_fault (10,101,010 samples, 0.09%)</title><rect x="15.5" y="629" width="1.1" height="15.0" fill="rgb(246,111,12)" rx="2" ry="2" />
<text  x="18.51" y="639.5" ></text>
</g>
<g >
<title>free (20,202,020 samples, 0.19%)</title><rect x="45.3" y="677" width="2.2" height="15.0" fill="rgb(239,48,51)" rx="2" ry="2" />
<text  x="48.29" y="687.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (10,101,010 samples, 0.09%)</title><rect x="32.1" y="597" width="1.1" height="15.0" fill="rgb(220,156,4)" rx="2" ry="2" />
<text  x="35.06" y="607.5" ></text>
</g>
<g >
<title>__alloc_pages (10,101,010 samples, 0.09%)</title><rect x="32.1" y="565" width="1.1" height="15.0" fill="rgb(216,145,22)" rx="2" ry="2" />
<text  x="35.06" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,202,020 samples, 0.19%)</title><rect x="37.6" y="661" width="2.2" height="15.0" fill="rgb(221,51,17)" rx="2" ry="2" />
<text  x="40.57" y="671.5" ></text>
</g>
<g >
<title>inet_sendmsg (30,303,030 samples, 0.28%)</title><rect x="27.6" y="565" width="3.4" height="15.0" fill="rgb(245,21,38)" rx="2" ry="2" />
<text  x="30.64" y="575.5" ></text>
</g>
<g >
<title>digits10 (10,101,010 samples, 0.09%)</title><rect x="44.2" y="677" width="1.1" height="15.0" fill="rgb(225,220,52)" rx="2" ry="2" />
<text  x="47.19" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.09%)</title><rect x="17.7" y="677" width="1.1" height="15.0" fill="rgb(253,160,8)" rx="2" ry="2" />
<text  x="20.72" y="687.5" ></text>
</g>
<g >
<title>default_idle_call (5,222,222,170 samples, 48.32%)</title><rect x="74.0" y="629" width="570.1" height="15.0" fill="rgb(221,167,28)" rx="2" ry="2" />
<text  x="76.96" y="639.5" >default_idle_call</text>
</g>
<g >
<title>inet_recvmsg (10,101,010 samples, 0.09%)</title><rect x="37.6" y="533" width="1.1" height="15.0" fill="rgb(236,5,50)" rx="2" ry="2" />
<text  x="40.57" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (20,202,020 samples, 0.19%)</title><rect x="21.0" y="645" width="2.2" height="15.0" fill="rgb(247,164,30)" rx="2" ry="2" />
<text  x="24.03" y="655.5" ></text>
</g>
<g >
<title>exc_page_fault (10,101,010 samples, 0.09%)</title><rect x="15.5" y="661" width="1.1" height="15.0" fill="rgb(246,151,54)" rx="2" ry="2" />
<text  x="18.51" y="671.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (10,101,010 samples, 0.09%)</title><rect x="29.9" y="117" width="1.1" height="15.0" fill="rgb(245,180,2)" rx="2" ry="2" />
<text  x="32.85" y="127.5" ></text>
</g>
<g >
<title>tcp_push (10,101,010 samples, 0.09%)</title><rect x="29.9" y="517" width="1.1" height="15.0" fill="rgb(244,116,25)" rx="2" ry="2" />
<text  x="32.85" y="527.5" ></text>
</g>
<g >
<title>arch_cpu_idle (5,222,222,170 samples, 48.32%)</title><rect x="74.0" y="613" width="570.1" height="15.0" fill="rgb(206,192,43)" rx="2" ry="2" />
<text  x="76.96" y="623.5" >arch_cpu_idle</text>
</g>
<g >
<title>tcp_sendmsg (30,303,030 samples, 0.28%)</title><rect x="27.6" y="549" width="3.4" height="15.0" fill="rgb(234,135,1)" rx="2" ry="2" />
<text  x="30.64" y="559.5" ></text>
</g>
<g >
<title>exit_mmap (10,101,010 samples, 0.09%)</title><rect x="17.7" y="597" width="1.1" height="15.0" fill="rgb(246,89,42)" rx="2" ry="2" />
<text  x="20.72" y="607.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (10,101,010 samples, 0.09%)</title><rect x="32.1" y="677" width="1.1" height="15.0" fill="rgb(211,18,32)" rx="2" ry="2" />
<text  x="35.06" y="687.5" ></text>
</g>
<g >
<title>__put_page (10,101,010 samples, 0.09%)</title><rect x="641.9" y="437" width="1.1" height="15.0" fill="rgb(237,126,6)" rx="2" ry="2" />
<text  x="644.91" y="447.5" ></text>
</g>
<g >
<title>alloc_pages_vma (10,101,010 samples, 0.09%)</title><rect x="32.1" y="581" width="1.1" height="15.0" fill="rgb(240,199,34)" rx="2" ry="2" />
<text  x="35.06" y="591.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (10,101,010 samples, 0.09%)</title><rect x="1188.9" y="405" width="1.1" height="15.0" fill="rgb(208,46,41)" rx="2" ry="2" />
<text  x="1191.90" y="415.5" ></text>
</g>
<g >
<title>ip_rcv_finish (10,101,010 samples, 0.09%)</title><rect x="29.9" y="197" width="1.1" height="15.0" fill="rgb(250,10,16)" rx="2" ry="2" />
<text  x="32.85" y="207.5" ></text>
</g>
<g >
<title>free_page_and_swap_cache (10,101,010 samples, 0.09%)</title><rect x="641.9" y="453" width="1.1" height="15.0" fill="rgb(222,70,36)" rx="2" ry="2" />
<text  x="644.91" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (50,505,050 samples, 0.47%)</title><rect x="25.4" y="645" width="5.6" height="15.0" fill="rgb(246,201,44)" rx="2" ry="2" />
<text  x="28.44" y="655.5" ></text>
</g>
<g >
<title>do_epoll_ctl (10,101,010 samples, 0.09%)</title><rect x="62.9" y="629" width="1.1" height="15.0" fill="rgb(243,194,3)" rx="2" ry="2" />
<text  x="65.93" y="639.5" ></text>
</g>
<g >
<title>epoll_ctl (40,404,040 samples, 0.37%)</title><rect x="18.8" y="693" width="4.4" height="15.0" fill="rgb(251,177,3)" rx="2" ry="2" />
<text  x="21.82" y="703.5" ></text>
</g>
<g >
<title>ip_local_out (10,101,010 samples, 0.09%)</title><rect x="29.9" y="421" width="1.1" height="15.0" fill="rgb(212,52,21)" rx="2" ry="2" />
<text  x="32.85" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_write (10,101,010 samples, 0.09%)</title><rect x="39.8" y="645" width="1.1" height="15.0" fill="rgb(241,167,54)" rx="2" ry="2" />
<text  x="42.78" y="655.5" ></text>
</g>
<g >
<title>rcu_core (10,101,010 samples, 0.09%)</title><rect x="641.9" y="501" width="1.1" height="15.0" fill="rgb(250,5,36)" rx="2" ry="2" />
<text  x="644.91" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (20,202,020 samples, 0.19%)</title><rect x="37.6" y="645" width="2.2" height="15.0" fill="rgb(249,56,16)" rx="2" ry="2" />
<text  x="40.57" y="655.5" ></text>
</g>
</g>
</svg>
