<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="26.0" y="197" width="1.1" height="15.0" fill="rgb(214,168,33)" rx="2" ry="2" />
<text  x="28.98" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="30.8" y="229" width="0.4" height="15.0" fill="rgb(225,220,23)" rx="2" ry="2" />
<text  x="33.81" y="239.5" ></text>
</g>
<g >
<title>python3 (10,101,010 samples, 0.03%)</title><rect x="11.1" y="277" width="0.4" height="15.0" fill="rgb(241,146,10)" rx="2" ry="2" />
<text  x="14.11" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="245" width="0.4" height="15.0" fill="rgb(218,131,31)" rx="2" ry="2" />
<text  x="15.60" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="102.5" y="213" width="0.4" height="15.0" fill="rgb(219,121,39)" rx="2" ry="2" />
<text  x="105.51" y="223.5" ></text>
</g>
<g >
<title>swapper (29,555,555,260 samples, 92.13%)</title><rect x="102.9" y="277" width="1087.1" height="15.0" fill="rgb(220,166,16)" rx="2" ry="2" />
<text  x="105.88" y="287.5" >swapper</text>
</g>
<g >
<title>[unknown] (30,303,030 samples, 0.09%)</title><rect x="13.7" y="245" width="1.1" height="15.0" fill="rgb(241,71,10)" rx="2" ry="2" />
<text  x="16.72" y="255.5" ></text>
</g>
<g >
<title>[libscudo.so] (10,101,010 samples, 0.03%)</title><rect x="13.3" y="245" width="0.4" height="15.0" fill="rgb(240,49,8)" rx="2" ry="2" />
<text  x="16.34" y="255.5" ></text>
</g>
<g >
<title>[unknown] (14,848,484,700 samples, 46.28%)</title><rect x="643.8" y="213" width="546.2" height="15.0" fill="rgb(221,38,16)" rx="2" ry="2" />
<text  x="646.84" y="223.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,686,868,540 samples, 45.78%)</title><rect x="103.6" y="165" width="540.2" height="15.0" fill="rgb(217,169,19)" rx="2" ry="2" />
<text  x="106.63" y="175.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="133" width="0.4" height="15.0" fill="rgb(238,12,42)" rx="2" ry="2" />
<text  x="15.23" y="143.5" ></text>
</g>
<g >
<title>[unknown] (343,434,340 samples, 1.07%)</title><rect x="13.3" y="261" width="12.7" height="15.0" fill="rgb(214,48,10)" rx="2" ry="2" />
<text  x="16.34" y="271.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocatorLocalCache&lt;scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt; &gt;::drain (10,101,010 samples, 0.03%)</title><rect x="101.8" y="261" width="0.3" height="15.0" fill="rgb(241,132,30)" rx="2" ry="2" />
<text  x="104.77" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="149" width="0.4" height="15.0" fill="rgb(247,87,53)" rx="2" ry="2" />
<text  x="14.49" y="159.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::releaseToOSMaybe (20,202,020 samples, 0.06%)</title><rect x="22.3" y="245" width="0.7" height="15.0" fill="rgb(238,221,1)" rx="2" ry="2" />
<text  x="25.26" y="255.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (525,252,520 samples, 1.64%)</title><rect x="52.0" y="245" width="19.3" height="15.0" fill="rgb(235,50,0)" rx="2" ry="2" />
<text  x="54.98" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="197" width="0.4" height="15.0" fill="rgb(238,19,49)" rx="2" ry="2" />
<text  x="14.49" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="49.4" y="117" width="0.4" height="15.0" fill="rgb(219,169,11)" rx="2" ry="2" />
<text  x="52.38" y="127.5" ></text>
</g>
<g >
<title>__madvise (30,303,030 samples, 0.09%)</title><rect x="26.0" y="261" width="1.1" height="15.0" fill="rgb(247,173,24)" rx="2" ry="2" />
<text  x="28.98" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (373,737,370 samples, 1.16%)</title><rect x="83.2" y="165" width="13.7" height="15.0" fill="rgb(237,134,44)" rx="2" ry="2" />
<text  x="86.19" y="175.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocatorLocalCache&lt;scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt; &gt;::drain (30,303,030 samples, 0.09%)</title><rect x="23.0" y="245" width="1.1" height="15.0" fill="rgb(215,80,32)" rx="2" ry="2" />
<text  x="26.00" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="69.8" y="101" width="1.5" height="15.0" fill="rgb(241,112,50)" rx="2" ry="2" />
<text  x="72.82" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="149" width="0.4" height="15.0" fill="rgb(235,151,8)" rx="2" ry="2" />
<text  x="15.60" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (353,535,350 samples, 1.10%)</title><rect x="83.9" y="149" width="13.0" height="15.0" fill="rgb(219,183,49)" rx="2" ry="2" />
<text  x="86.94" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.16%)</title><rect x="69.4" y="165" width="1.9" height="15.0" fill="rgb(253,91,12)" rx="2" ry="2" />
<text  x="72.45" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="181" width="0.4" height="15.0" fill="rgb(250,76,27)" rx="2" ry="2" />
<text  x="14.49" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,555,555,260 samples, 92.13%)</title><rect x="102.9" y="261" width="1087.1" height="15.0" fill="rgb(221,130,37)" rx="2" ry="2" />
<text  x="105.88" y="271.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="213" width="0.3" height="15.0" fill="rgb(242,145,42)" rx="2" ry="2" />
<text  x="14.86" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="72.4" y="197" width="0.4" height="15.0" fill="rgb(234,35,36)" rx="2" ry="2" />
<text  x="75.42" y="207.5" ></text>
</g>
<g >
<title>epoll_wait (10,101,010 samples, 0.03%)</title><rect x="12.2" y="261" width="0.4" height="15.0" fill="rgb(236,49,45)" rx="2" ry="2" />
<text  x="15.23" y="271.5" ></text>
</g>
<g >
<title>syscall (10,101,010 samples, 0.03%)</title><rect x="102.5" y="261" width="0.4" height="15.0" fill="rgb(208,143,17)" rx="2" ry="2" />
<text  x="105.51" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="69" width="0.4" height="15.0" fill="rgb(254,143,36)" rx="2" ry="2" />
<text  x="15.60" y="79.5" ></text>
</g>
<g >
<title>dirname (10,101,010 samples, 0.03%)</title><rect x="10.7" y="277" width="0.4" height="15.0" fill="rgb(253,215,48)" rx="2" ry="2" />
<text  x="13.74" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="101" width="0.4" height="15.0" fill="rgb(234,215,49)" rx="2" ry="2" />
<text  x="14.49" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="165" width="0.4" height="15.0" fill="rgb(235,19,40)" rx="2" ry="2" />
<text  x="14.49" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="229" width="0.4" height="15.0" fill="rgb(223,169,1)" rx="2" ry="2" />
<text  x="15.23" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10,101,010 samples, 0.03%)</title><rect x="27.1" y="261" width="0.4" height="15.0" fill="rgb(235,80,15)" rx="2" ry="2" />
<text  x="30.09" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 1.20%)</title><rect x="82.8" y="181" width="14.1" height="15.0" fill="rgb(248,156,32)" rx="2" ry="2" />
<text  x="85.82" y="191.5" ></text>
</g>
<g >
<title>__mmap (10,101,010 samples, 0.03%)</title><rect x="30.8" y="261" width="0.4" height="15.0" fill="rgb(232,110,7)" rx="2" ry="2" />
<text  x="33.81" y="271.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (10,101,010 samples, 0.03%)</title><rect x="31.9" y="261" width="0.4" height="15.0" fill="rgb(251,56,34)" rx="2" ry="2" />
<text  x="34.92" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,828,282,680 samples, 46.22%)</title><rect x="644.6" y="101" width="545.4" height="15.0" fill="rgb(219,166,30)" rx="2" ry="2" />
<text  x="647.58" y="111.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="49.4" y="181" width="0.4" height="15.0" fill="rgb(235,36,3)" rx="2" ry="2" />
<text  x="52.38" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="49.4" y="229" width="0.4" height="15.0" fill="rgb(241,45,52)" rx="2" ry="2" />
<text  x="52.38" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="133" width="0.4" height="15.0" fill="rgb(229,82,46)" rx="2" ry="2" />
<text  x="15.60" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="165" width="0.3" height="15.0" fill="rgb(254,54,43)" rx="2" ry="2" />
<text  x="14.86" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="26.0" y="245" width="1.1" height="15.0" fill="rgb(211,75,43)" rx="2" ry="2" />
<text  x="28.98" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="149" width="0.4" height="15.0" fill="rgb(207,95,13)" rx="2" ry="2" />
<text  x="15.23" y="159.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="261" width="0.4" height="15.0" fill="rgb(218,120,53)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>[unknown] (14,848,484,700 samples, 46.28%)</title><rect x="643.8" y="245" width="546.2" height="15.0" fill="rgb(250,218,47)" rx="2" ry="2" />
<text  x="646.84" y="255.5" >[unknown]</text>
</g>
<g >
<title>all (32,080,807,760 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(240,127,31)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="49.4" y="133" width="0.4" height="15.0" fill="rgb(209,96,29)" rx="2" ry="2" />
<text  x="52.38" y="143.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (10,101,010 samples, 0.03%)</title><rect x="77.2" y="261" width="0.4" height="15.0" fill="rgb(216,173,45)" rx="2" ry="2" />
<text  x="80.25" y="271.5" ></text>
</g>
<g >
<title>[libscudo.so] (10,101,010 samples, 0.03%)</title><rect x="13.0" y="261" width="0.3" height="15.0" fill="rgb(218,52,22)" rx="2" ry="2" />
<text  x="15.97" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="213" width="0.4" height="15.0" fill="rgb(206,192,42)" rx="2" ry="2" />
<text  x="15.60" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.79%)</title><rect x="87.7" y="117" width="9.2" height="15.0" fill="rgb(254,5,39)" rx="2" ry="2" />
<text  x="90.65" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="101" width="0.4" height="15.0" fill="rgb(214,219,35)" rx="2" ry="2" />
<text  x="15.60" y="111.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="11.1" y="261" width="0.4" height="15.0" fill="rgb(237,59,7)" rx="2" ry="2" />
<text  x="14.11" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="197" width="0.4" height="15.0" fill="rgb(221,135,42)" rx="2" ry="2" />
<text  x="15.60" y="207.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (40,404,040 samples, 0.13%)</title><rect x="71.3" y="245" width="1.5" height="15.0" fill="rgb(236,34,20)" rx="2" ry="2" />
<text  x="74.30" y="255.5" ></text>
</g>
<g >
<title>bench.sh (20,202,020 samples, 0.06%)</title><rect x="10.0" y="277" width="0.7" height="15.0" fill="rgb(206,57,2)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="165" width="0.4" height="15.0" fill="rgb(240,197,33)" rx="2" ry="2" />
<text  x="15.60" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="53" width="0.4" height="15.0" fill="rgb(206,56,19)" rx="2" ry="2" />
<text  x="15.60" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="26.0" y="117" width="1.1" height="15.0" fill="rgb(236,104,17)" rx="2" ry="2" />
<text  x="28.98" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="26.0" y="101" width="1.1" height="15.0" fill="rgb(238,197,44)" rx="2" ry="2" />
<text  x="28.98" y="111.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="261" width="0.4" height="15.0" fill="rgb(233,180,49)" rx="2" ry="2" />
<text  x="14.49" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (424,242,420 samples, 1.32%)</title><rect x="81.3" y="229" width="15.6" height="15.0" fill="rgb(234,154,13)" rx="2" ry="2" />
<text  x="84.34" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,848,484,700 samples, 46.28%)</title><rect x="643.8" y="181" width="546.2" height="15.0" fill="rgb(223,127,34)" rx="2" ry="2" />
<text  x="646.84" y="191.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="30.8" y="245" width="0.4" height="15.0" fill="rgb(227,150,4)" rx="2" ry="2" />
<text  x="33.81" y="255.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocatorLocalCache&lt;scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt; &gt;::refill (10,101,010 samples, 0.03%)</title><rect x="49.8" y="245" width="0.3" height="15.0" fill="rgb(206,114,48)" rx="2" ry="2" />
<text  x="52.75" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="26.0" y="133" width="1.1" height="15.0" fill="rgb(241,156,26)" rx="2" ry="2" />
<text  x="28.98" y="143.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocatorLocalCache&lt;scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt; &gt;::refill (10,101,010 samples, 0.03%)</title><rect x="102.1" y="261" width="0.4" height="15.0" fill="rgb(214,126,5)" rx="2" ry="2" />
<text  x="105.14" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="69.1" y="181" width="2.2" height="15.0" fill="rgb(238,212,43)" rx="2" ry="2" />
<text  x="72.07" y="191.5" ></text>
</g>
<g >
<title>thread_sleep (10,101,010 samples, 0.03%)</title><rect x="25.6" y="245" width="0.4" height="15.0" fill="rgb(252,94,52)" rx="2" ry="2" />
<text  x="28.60" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (414,141,410 samples, 1.29%)</title><rect x="81.7" y="213" width="15.2" height="15.0" fill="rgb(227,195,17)" rx="2" ry="2" />
<text  x="84.71" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="165" width="0.4" height="15.0" fill="rgb(236,109,12)" rx="2" ry="2" />
<text  x="15.23" y="175.5" ></text>
</g>
<g >
<title>[bash] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="245" width="0.4" height="15.0" fill="rgb(242,131,31)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="10.4" y="261" width="0.3" height="15.0" fill="rgb(252,155,50)" rx="2" ry="2" />
<text  x="13.37" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="117" width="0.4" height="15.0" fill="rgb(225,2,17)" rx="2" ry="2" />
<text  x="15.60" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,848,484,700 samples, 46.28%)</title><rect x="643.8" y="165" width="546.2" height="15.0" fill="rgb(237,152,11)" rx="2" ry="2" />
<text  x="646.84" y="175.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="49.4" y="149" width="0.4" height="15.0" fill="rgb(227,94,15)" rx="2" ry="2" />
<text  x="52.38" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="261" width="0.4" height="15.0" fill="rgb(251,215,16)" rx="2" ry="2" />
<text  x="15.60" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="245" width="0.3" height="15.0" fill="rgb(208,214,2)" rx="2" ry="2" />
<text  x="14.86" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,707,070,560 samples, 45.84%)</title><rect x="102.9" y="229" width="540.9" height="15.0" fill="rgb(215,64,38)" rx="2" ry="2" />
<text  x="105.88" y="239.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (424,242,420 samples, 1.32%)</title><rect x="81.3" y="245" width="15.6" height="15.0" fill="rgb(246,5,12)" rx="2" ry="2" />
<text  x="84.34" y="255.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::pushBlocksImpl (30,303,030 samples, 0.09%)</title><rect x="99.5" y="261" width="1.2" height="15.0" fill="rgb(248,118,44)" rx="2" ry="2" />
<text  x="102.54" y="271.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::quarantineOrDeallocateChunk (10,101,010 samples, 0.03%)</title><rect x="14.8" y="245" width="0.4" height="15.0" fill="rgb(230,170,2)" rx="2" ry="2" />
<text  x="17.83" y="255.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::allocate (111,111,110 samples, 0.35%)</title><rect x="72.8" y="245" width="4.1" height="15.0" fill="rgb(219,145,54)" rx="2" ry="2" />
<text  x="75.79" y="255.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::popBatchImpl (80,808,080 samples, 0.25%)</title><rect x="18.5" y="245" width="3.0" height="15.0" fill="rgb(240,109,39)" rx="2" ry="2" />
<text  x="21.55" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="213" width="0.4" height="15.0" fill="rgb(249,70,38)" rx="2" ry="2" />
<text  x="14.49" y="223.5" ></text>
</g>
<g >
<title>__libc_read (10,101,010 samples, 0.03%)</title><rect x="11.9" y="261" width="0.3" height="15.0" fill="rgb(241,185,30)" rx="2" ry="2" />
<text  x="14.86" y="271.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::quarantineOrDeallocateChunk (30,303,030 samples, 0.09%)</title><rect x="98.4" y="261" width="1.1" height="15.0" fill="rgb(216,17,24)" rx="2" ry="2" />
<text  x="101.43" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,828,282,680 samples, 46.22%)</title><rect x="644.6" y="117" width="545.4" height="15.0" fill="rgb(209,164,49)" rx="2" ry="2" />
<text  x="647.58" y="127.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="26.0" y="229" width="1.1" height="15.0" fill="rgb(243,91,14)" rx="2" ry="2" />
<text  x="28.98" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="229" width="0.4" height="15.0" fill="rgb(209,95,7)" rx="2" ry="2" />
<text  x="14.49" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,707,070,560 samples, 45.84%)</title><rect x="102.9" y="213" width="540.9" height="15.0" fill="rgb(244,117,31)" rx="2" ry="2" />
<text  x="105.88" y="223.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="69.8" y="149" width="1.5" height="15.0" fill="rgb(205,121,14)" rx="2" ry="2" />
<text  x="72.82" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="70.2" y="69" width="1.1" height="15.0" fill="rgb(238,170,38)" rx="2" ry="2" />
<text  x="73.19" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="30.8" y="165" width="0.4" height="15.0" fill="rgb(215,57,50)" rx="2" ry="2" />
<text  x="33.81" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="26.0" y="181" width="1.1" height="15.0" fill="rgb(240,79,11)" rx="2" ry="2" />
<text  x="28.98" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="245" width="0.4" height="15.0" fill="rgb(253,146,50)" rx="2" ry="2" />
<text  x="15.23" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="102.5" y="149" width="0.4" height="15.0" fill="rgb(229,229,23)" rx="2" ry="2" />
<text  x="105.51" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="197" width="0.4" height="15.0" fill="rgb(230,37,47)" rx="2" ry="2" />
<text  x="15.23" y="207.5" ></text>
</g>
<g >
<title>[python3.8] (10,101,010 samples, 0.03%)</title><rect x="11.1" y="245" width="0.4" height="15.0" fill="rgb(222,67,13)" rx="2" ry="2" />
<text  x="14.11" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="229" width="0.4" height="15.0" fill="rgb(237,118,41)" rx="2" ry="2" />
<text  x="15.60" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,848,484,700 samples, 46.28%)</title><rect x="643.8" y="133" width="546.2" height="15.0" fill="rgb(244,121,25)" rx="2" ry="2" />
<text  x="646.84" y="143.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.22%)</title><rect x="68.7" y="229" width="2.6" height="15.0" fill="rgb(244,105,40)" rx="2" ry="2" />
<text  x="71.70" y="239.5" ></text>
</g>
<g >
<title>calloc (737,373,730 samples, 2.30%)</title><rect x="50.1" y="261" width="27.1" height="15.0" fill="rgb(209,90,6)" rx="2" ry="2" />
<text  x="53.13" y="271.5" >c..</text>
</g>
<g >
<title>[unknown] (14,848,484,700 samples, 46.28%)</title><rect x="643.8" y="197" width="546.2" height="15.0" fill="rgb(238,47,24)" rx="2" ry="2" />
<text  x="646.84" y="207.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,848,484,700 samples, 46.28%)</title><rect x="643.8" y="149" width="546.2" height="15.0" fill="rgb(231,175,29)" rx="2" ry="2" />
<text  x="646.84" y="159.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="133" width="0.4" height="15.0" fill="rgb(218,9,26)" rx="2" ry="2" />
<text  x="14.49" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="49.4" y="165" width="0.4" height="15.0" fill="rgb(231,212,42)" rx="2" ry="2" />
<text  x="52.38" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,696,969,550 samples, 45.81%)</title><rect x="103.3" y="197" width="540.5" height="15.0" fill="rgb(217,5,7)" rx="2" ry="2" />
<text  x="106.26" y="207.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[unknown] (14,848,484,700 samples, 46.28%)</title><rect x="643.8" y="229" width="546.2" height="15.0" fill="rgb(249,52,10)" rx="2" ry="2" />
<text  x="646.84" y="239.5" >[unknown]</text>
</g>
<g >
<title>__tls_get_addr (20,202,020 samples, 0.06%)</title><rect x="31.2" y="261" width="0.7" height="15.0" fill="rgb(245,89,10)" rx="2" ry="2" />
<text  x="34.18" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="26.0" y="149" width="1.1" height="15.0" fill="rgb(242,130,32)" rx="2" ry="2" />
<text  x="28.98" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="197" width="0.3" height="15.0" fill="rgb(229,77,47)" rx="2" ry="2" />
<text  x="14.86" y="207.5" ></text>
</g>
<g >
<title>benchmark_worker (10,101,010 samples, 0.03%)</title><rect x="13.7" y="213" width="0.4" height="15.0" fill="rgb(234,120,15)" rx="2" ry="2" />
<text  x="16.72" y="223.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocatorLocalCache&lt;scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt; &gt;::refill (40,404,040 samples, 0.13%)</title><rect x="24.1" y="245" width="1.5" height="15.0" fill="rgb(207,100,10)" rx="2" ry="2" />
<text  x="27.12" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="69.8" y="133" width="1.5" height="15.0" fill="rgb(226,115,47)" rx="2" ry="2" />
<text  x="72.82" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="26.0" y="213" width="1.1" height="15.0" fill="rgb(220,179,53)" rx="2" ry="2" />
<text  x="28.98" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="213" width="0.4" height="15.0" fill="rgb(226,133,22)" rx="2" ry="2" />
<text  x="15.23" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="69.8" y="117" width="1.5" height="15.0" fill="rgb(247,29,53)" rx="2" ry="2" />
<text  x="72.82" y="127.5" ></text>
</g>
<g >
<title>clock_nanosleep@@GLIBC_2.17 (525,252,520 samples, 1.64%)</title><rect x="77.6" y="261" width="19.3" height="15.0" fill="rgb(243,132,10)" rx="2" ry="2" />
<text  x="80.62" y="271.5" ></text>
</g>
<g >
<title>__open64 (10,101,010 samples, 0.03%)</title><rect x="11.5" y="245" width="0.4" height="15.0" fill="rgb(218,218,52)" rx="2" ry="2" />
<text  x="14.49" y="255.5" ></text>
</g>
<g >
<title>rptest (2,454,545,430 samples, 7.65%)</title><rect x="12.6" y="277" width="90.3" height="15.0" fill="rgb(230,50,53)" rx="2" ry="2" />
<text  x="15.60" y="287.5" >rptest</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="181" width="0.4" height="15.0" fill="rgb(252,222,24)" rx="2" ry="2" />
<text  x="15.60" y="191.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::allocate (90,909,090 samples, 0.28%)</title><rect x="46.4" y="245" width="3.4" height="15.0" fill="rgb(205,124,46)" rx="2" ry="2" />
<text  x="49.41" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="49.4" y="213" width="0.4" height="15.0" fill="rgb(218,217,54)" rx="2" ry="2" />
<text  x="52.38" y="223.5" ></text>
</g>
<g >
<title>benchmark_worker (484,848,480 samples, 1.51%)</title><rect x="32.3" y="261" width="17.8" height="15.0" fill="rgb(244,174,3)" rx="2" ry="2" />
<text  x="35.29" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="37" width="0.4" height="15.0" fill="rgb(235,106,9)" rx="2" ry="2" />
<text  x="15.60" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="72.4" y="229" width="0.4" height="15.0" fill="rgb(243,134,40)" rx="2" ry="2" />
<text  x="75.42" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="181" width="0.3" height="15.0" fill="rgb(241,59,9)" rx="2" ry="2" />
<text  x="14.86" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.6" y="85" width="0.4" height="15.0" fill="rgb(251,167,46)" rx="2" ry="2" />
<text  x="15.60" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="102.5" y="165" width="0.4" height="15.0" fill="rgb(240,29,5)" rx="2" ry="2" />
<text  x="105.51" y="175.5" ></text>
</g>
<g >
<title>scudo::Allocator&lt;scudo::DefaultConfig, &amp;malloc_postinit&gt;::deallocate (40,404,040 samples, 0.13%)</title><rect x="96.9" y="261" width="1.5" height="15.0" fill="rgb(247,176,5)" rx="2" ry="2" />
<text  x="99.94" y="271.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (50,505,050 samples, 0.16%)</title><rect x="28.9" y="261" width="1.9" height="15.0" fill="rgb(226,182,54)" rx="2" ry="2" />
<text  x="31.95" y="271.5" ></text>
</g>
<g >
<title>scudo::HybridMutex::lock (90,909,090 samples, 0.28%)</title><rect x="15.2" y="245" width="3.3" height="15.0" fill="rgb(238,116,0)" rx="2" ry="2" />
<text  x="18.20" y="255.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::pushBlocksImpl (20,202,020 samples, 0.06%)</title><rect x="14.1" y="213" width="0.7" height="15.0" fill="rgb(210,70,37)" rx="2" ry="2" />
<text  x="17.09" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="102.5" y="197" width="0.4" height="15.0" fill="rgb(209,55,46)" rx="2" ry="2" />
<text  x="105.51" y="207.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocatorLocalCache&lt;scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt; &gt;::refill (10,101,010 samples, 0.03%)</title><rect x="76.9" y="245" width="0.3" height="15.0" fill="rgb(225,15,40)" rx="2" ry="2" />
<text  x="79.88" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="102.5" y="245" width="0.4" height="15.0" fill="rgb(208,147,49)" rx="2" ry="2" />
<text  x="105.51" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="26.0" y="165" width="1.1" height="15.0" fill="rgb(240,77,10)" rx="2" ry="2" />
<text  x="28.98" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.22%)</title><rect x="68.7" y="197" width="2.6" height="15.0" fill="rgb(207,160,47)" rx="2" ry="2" />
<text  x="71.70" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="30.8" y="213" width="0.4" height="15.0" fill="rgb(205,225,13)" rx="2" ry="2" />
<text  x="33.81" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 1.20%)</title><rect x="82.8" y="197" width="14.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="85.82" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="102.5" y="181" width="0.4" height="15.0" fill="rgb(240,122,36)" rx="2" ry="2" />
<text  x="105.51" y="191.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (10,101,010 samples, 0.03%)</title><rect x="77.2" y="245" width="0.4" height="15.0" fill="rgb(208,215,22)" rx="2" ry="2" />
<text  x="80.25" y="255.5" ></text>
</g>
<g >
<title>__tls_get_addr (20,202,020 samples, 0.06%)</title><rect x="45.7" y="245" width="0.7" height="15.0" fill="rgb(235,192,9)" rx="2" ry="2" />
<text  x="48.67" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="30.8" y="197" width="0.4" height="15.0" fill="rgb(214,43,17)" rx="2" ry="2" />
<text  x="33.81" y="207.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::releaseToOSMaybe (30,303,030 samples, 0.09%)</title><rect x="100.7" y="261" width="1.1" height="15.0" fill="rgb(248,206,3)" rx="2" ry="2" />
<text  x="103.65" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="102.5" y="229" width="0.4" height="15.0" fill="rgb(240,216,27)" rx="2" ry="2" />
<text  x="105.51" y="239.5" ></text>
</g>
<g >
<title>__close_nocancel (10,101,010 samples, 0.03%)</title><rect x="10.7" y="261" width="0.4" height="15.0" fill="rgb(243,110,48)" rx="2" ry="2" />
<text  x="13.74" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.9" y="229" width="0.3" height="15.0" fill="rgb(232,131,31)" rx="2" ry="2" />
<text  x="14.86" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="70.2" y="85" width="1.1" height="15.0" fill="rgb(241,150,18)" rx="2" ry="2" />
<text  x="73.19" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="11.5" y="117" width="0.4" height="15.0" fill="rgb(219,29,46)" rx="2" ry="2" />
<text  x="14.49" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,686,868,540 samples, 45.78%)</title><rect x="103.6" y="181" width="540.2" height="15.0" fill="rgb(206,169,2)" rx="2" ry="2" />
<text  x="106.63" y="191.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (262,626,260 samples, 0.82%)</title><rect x="87.3" y="133" width="9.6" height="15.0" fill="rgb(211,170,46)" rx="2" ry="2" />
<text  x="90.28" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="72.4" y="213" width="0.4" height="15.0" fill="rgb(243,47,15)" rx="2" ry="2" />
<text  x="75.42" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="49.4" y="197" width="0.4" height="15.0" fill="rgb(240,185,33)" rx="2" ry="2" />
<text  x="52.38" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="30.8" y="181" width="0.4" height="15.0" fill="rgb(235,126,54)" rx="2" ry="2" />
<text  x="33.81" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="30.8" y="149" width="0.4" height="15.0" fill="rgb(220,24,43)" rx="2" ry="2" />
<text  x="33.81" y="159.5" ></text>
</g>
<g >
<title>[unknown] (30,303,030 samples, 0.09%)</title><rect x="13.7" y="229" width="1.1" height="15.0" fill="rgb(227,190,50)" rx="2" ry="2" />
<text  x="16.72" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,707,070,560 samples, 45.84%)</title><rect x="102.9" y="245" width="540.9" height="15.0" fill="rgb(207,111,3)" rx="2" ry="2" />
<text  x="105.88" y="255.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="12.2" y="181" width="0.4" height="15.0" fill="rgb(212,53,16)" rx="2" ry="2" />
<text  x="15.23" y="191.5" ></text>
</g>
<g >
<title>redis-server (30,303,030 samples, 0.09%)</title><rect x="11.5" y="277" width="1.1" height="15.0" fill="rgb(208,73,7)" rx="2" ry="2" />
<text  x="14.49" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (40,404,040 samples, 0.13%)</title><rect x="27.5" y="261" width="1.4" height="15.0" fill="rgb(222,75,39)" rx="2" ry="2" />
<text  x="30.46" y="271.5" ></text>
</g>
<g >
<title>scudo::SizeClassAllocator64&lt;scudo::DefaultConfig&gt;::pushBlocksImpl (20,202,020 samples, 0.06%)</title><rect x="21.5" y="245" width="0.8" height="15.0" fill="rgb(242,92,15)" rx="2" ry="2" />
<text  x="24.52" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.22%)</title><rect x="68.7" y="213" width="2.6" height="15.0" fill="rgb(231,140,44)" rx="2" ry="2" />
<text  x="71.70" y="223.5" ></text>
</g>
</g>
</svg>
