<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>sm_delrow.part.0 (20,202,020 samples, 0.15%)</title><rect x="399.7" y="277" width="1.8" height="15.0" fill="rgb(211,83,4)" rx="2" ry="2" />
<text  x="402.71" y="287.5" ></text>
</g>
<g >
<title>ftautology (20,202,020 samples, 0.15%)</title><rect x="21.8" y="261" width="1.8" height="15.0" fill="rgb(241,61,33)" rx="2" ry="2" />
<text  x="24.78" y="271.5" ></text>
</g>
<g >
<title>mlx5e_napi_poll (10,101,010 samples, 0.08%)</title><rect x="246.5" y="149" width="1.0" height="15.0" fill="rgb(228,63,27)" rx="2" ry="2" />
<text  x="249.54" y="159.5" ></text>
</g>
<g >
<title>sm_col_contains (30,303,030 samples, 0.23%)</title><rect x="392.5" y="277" width="2.7" height="15.0" fill="rgb(236,130,45)" rx="2" ry="2" />
<text  x="395.46" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10,101,010 samples, 0.08%)</title><rect x="294.6" y="261" width="0.9" height="15.0" fill="rgb(210,152,3)" rx="2" ry="2" />
<text  x="297.58" y="271.5" ></text>
</g>
<g >
<title>sccc_merge (20,202,020 samples, 0.15%)</title><rect x="359.8" y="277" width="1.8" height="15.0" fill="rgb(227,138,29)" rx="2" ry="2" />
<text  x="362.83" y="287.5" ></text>
</g>
<g >
<title>sf_count (40,404,040 samples, 0.31%)</title><rect x="546.5" y="293" width="3.7" height="15.0" fill="rgb(226,164,30)" rx="2" ry="2" />
<text  x="549.53" y="303.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (10,101,010 samples, 0.08%)</title><rect x="280.1" y="245" width="0.9" height="15.0" fill="rgb(244,195,54)" rx="2" ry="2" />
<text  x="283.08" y="255.5" ></text>
</g>
<g >
<title>unravel_range (20,202,020 samples, 0.15%)</title><rect x="599.1" y="293" width="1.8" height="15.0" fill="rgb(205,114,25)" rx="2" ry="2" />
<text  x="602.09" y="303.5" ></text>
</g>
<g >
<title>TCMallocInternalMalloc (20,202,020 samples, 0.15%)</title><rect x="487.6" y="277" width="1.8" height="15.0" fill="rgb(210,57,1)" rx="2" ry="2" />
<text  x="490.62" y="287.5" ></text>
</g>
<g >
<title>dirname (10,101,010 samples, 0.08%)</title><rect x="11.8" y="309" width="0.9" height="15.0" fill="rgb(207,58,5)" rx="2" ry="2" />
<text  x="14.81" y="319.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (10,101,010 samples, 0.08%)</title><rect x="360.7" y="261" width="0.9" height="15.0" fill="rgb(247,7,54)" rx="2" ry="2" />
<text  x="363.74" y="271.5" ></text>
</g>
<g >
<title>mini_sort (40,404,040 samples, 0.31%)</title><rect x="356.2" y="277" width="3.6" height="15.0" fill="rgb(211,154,40)" rx="2" ry="2" />
<text  x="359.21" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,797,979,750 samples, 36.48%)</title><rect x="603.6" y="245" width="430.5" height="15.0" fill="rgb(209,115,3)" rx="2" ry="2" />
<text  x="606.63" y="255.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::central_freelist_internal::CentralFreeList&lt;tcmalloc::tcmalloc_internal::central_freelist_internal::StaticForwarder&gt;::RemoveRange (20,202,020 samples, 0.15%)</title><rect x="566.5" y="229" width="1.8" height="15.0" fill="rgb(219,126,20)" rx="2" ry="2" />
<text  x="569.47" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,737,373,720 samples, 13.21%)</title><rect x="1034.1" y="165" width="155.9" height="15.0" fill="rgb(213,26,37)" rx="2" ry="2" />
<text  x="1037.12" y="175.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>sm_minimum_cover (20,202,020 samples, 0.15%)</title><rect x="256.5" y="261" width="1.8" height="15.0" fill="rgb(228,48,1)" rx="2" ry="2" />
<text  x="259.51" y="271.5" ></text>
</g>
<g >
<title>sm_insert (161,616,160 samples, 1.23%)</title><rect x="569.2" y="293" width="14.5" height="15.0" fill="rgb(225,200,26)" rx="2" ry="2" />
<text  x="572.19" y="303.5" ></text>
</g>
<g >
<title>mbschr (10,101,010 samples, 0.08%)</title><rect x="10.9" y="293" width="0.9" height="15.0" fill="rgb(245,169,39)" rx="2" ry="2" />
<text  x="13.91" y="303.5" ></text>
</g>
<g >
<title>[snapd] (10,101,010 samples, 0.08%)</title><rect x="602.7" y="245" width="0.9" height="15.0" fill="rgb(233,177,5)" rx="2" ry="2" />
<text  x="605.72" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,737,373,720 samples, 13.21%)</title><rect x="1034.1" y="213" width="155.9" height="15.0" fill="rgb(229,157,27)" rx="2" ry="2" />
<text  x="1037.12" y="223.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::UpdateCapacity (10,101,010 samples, 0.08%)</title><rect x="554.7" y="229" width="0.9" height="15.0" fill="rgb(230,4,44)" rx="2" ry="2" />
<text  x="557.69" y="239.5" ></text>
</g>
<g >
<title>sccc_special_cases (20,202,020 samples, 0.15%)</title><rect x="361.6" y="277" width="1.9" height="15.0" fill="rgb(216,16,50)" rx="2" ry="2" />
<text  x="364.64" y="287.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (10,101,010 samples, 0.08%)</title><rect x="13.6" y="261" width="0.9" height="15.0" fill="rgb(246,77,52)" rx="2" ry="2" />
<text  x="16.63" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="532.0" y="261" width="0.9" height="15.0" fill="rgb(232,190,1)" rx="2" ry="2" />
<text  x="535.03" y="271.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Refill (10,101,010 samples, 0.08%)</title><rect x="582.8" y="245" width="0.9" height="15.0" fill="rgb(248,30,18)" rx="2" ry="2" />
<text  x="585.78" y="255.5" ></text>
</g>
<g >
<title>sm_delrow.part.0 (40,404,040 samples, 0.31%)</title><rect x="552.0" y="293" width="3.6" height="15.0" fill="rgb(212,146,42)" rx="2" ry="2" />
<text  x="554.97" y="303.5" ></text>
</g>
<g >
<title>sf_new (10,101,010 samples, 0.08%)</title><rect x="550.2" y="293" width="0.9" height="15.0" fill="rgb(220,117,1)" rx="2" ry="2" />
<text  x="553.15" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,737,373,720 samples, 13.21%)</title><rect x="1034.1" y="133" width="155.9" height="15.0" fill="rgb(251,104,18)" rx="2" ry="2" />
<text  x="1037.12" y="143.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::central_freelist_internal::CentralFreeList&lt;tcmalloc::tcmalloc_internal::central_freelist_internal::StaticForwarder&gt;::RemoveRange (10,101,010 samples, 0.08%)</title><rect x="582.8" y="229" width="0.9" height="15.0" fill="rgb(226,141,37)" rx="2" ry="2" />
<text  x="585.78" y="239.5" ></text>
</g>
<g >
<title>set_or (141,414,140 samples, 1.08%)</title><rect x="533.8" y="293" width="12.7" height="15.0" fill="rgb(206,137,35)" rx="2" ry="2" />
<text  x="536.84" y="303.5" ></text>
</g>
<g >
<title>setp_equal (20,202,020 samples, 0.15%)</title><rect x="369.8" y="277" width="1.8" height="15.0" fill="rgb(213,98,3)" rx="2" ry="2" />
<text  x="372.80" y="287.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Deallocate (10,101,010 samples, 0.08%)</title><rect x="554.7" y="261" width="0.9" height="15.0" fill="rgb(243,208,0)" rx="2" ry="2" />
<text  x="557.69" y="271.5" ></text>
</g>
<g >
<title>__times (10,101,010 samples, 0.08%)</title><rect x="412.4" y="293" width="0.9" height="15.0" fill="rgb(246,211,21)" rx="2" ry="2" />
<text  x="415.40" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="246.5" y="53" width="1.0" height="15.0" fill="rgb(214,219,41)" rx="2" ry="2" />
<text  x="249.54" y="63.5" ></text>
</g>
<g >
<title>TCMallocInternalMalloc (10,101,010 samples, 0.08%)</title><rect x="584.6" y="277" width="0.9" height="15.0" fill="rgb(217,210,52)" rx="2" ry="2" />
<text  x="587.59" y="287.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (10,101,010 samples, 0.08%)</title><rect x="282.8" y="245" width="0.9" height="15.0" fill="rgb(243,24,33)" rx="2" ry="2" />
<text  x="285.80" y="255.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Allocate&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::MallocOomPolicy, tcmalloc::tcmalloc_internal::MallocAlignPolicy, tcmalloc::tcmalloc_internal::AllocationAccessHotPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::NonSizeReturningPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (20,202,020 samples, 0.15%)</title><rect x="581.9" y="261" width="1.8" height="15.0" fill="rgb(253,162,11)" rx="2" ry="2" />
<text  x="584.87" y="271.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.08%)</title><rect x="602.7" y="277" width="0.9" height="15.0" fill="rgb(212,15,15)" rx="2" ry="2" />
<text  x="605.72" y="287.5" ></text>
</g>
<g >
<title>sm_row_free (60,606,060 samples, 0.46%)</title><rect x="404.2" y="277" width="5.5" height="15.0" fill="rgb(229,184,3)" rx="2" ry="2" />
<text  x="407.24" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="532.0" y="165" width="0.9" height="15.0" fill="rgb(227,20,52)" rx="2" ry="2" />
<text  x="535.03" y="175.5" ></text>
</g>
<g >
<title>TCMallocInternalMalloc (10,101,010 samples, 0.08%)</title><rect x="16.3" y="229" width="1.0" height="15.0" fill="rgb(219,57,37)" rx="2" ry="2" />
<text  x="19.34" y="239.5" ></text>
</g>
<g >
<title>mincov (30,303,030 samples, 0.23%)</title><rect x="353.5" y="277" width="2.7" height="15.0" fill="rgb(215,45,24)" rx="2" ry="2" />
<text  x="356.49" y="287.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (10,101,010 samples, 0.08%)</title><rect x="362.5" y="261" width="1.0" height="15.0" fill="rgb(230,195,21)" rx="2" ry="2" />
<text  x="365.55" y="271.5" ></text>
</g>
<g >
<title>binate_split_select (20,202,020 samples, 0.15%)</title><rect x="284.6" y="277" width="1.8" height="15.0" fill="rgb(238,175,39)" rx="2" ry="2" />
<text  x="287.61" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="246.5" y="37" width="1.0" height="15.0" fill="rgb(245,158,13)" rx="2" ry="2" />
<text  x="249.54" y="47.5" ></text>
</g>
<g >
<title>[espresso] (10,101,010 samples, 0.08%)</title><rect x="12.7" y="293" width="0.9" height="15.0" fill="rgb(233,56,19)" rx="2" ry="2" />
<text  x="15.72" y="303.5" ></text>
</g>
<g >
<title>read_cube (10,101,010 samples, 0.08%)</title><rect x="486.7" y="293" width="0.9" height="15.0" fill="rgb(228,23,34)" rx="2" ry="2" />
<text  x="489.71" y="303.5" ></text>
</g>
<g >
<title>__tzfile_compute (10,101,010 samples, 0.08%)</title><rect x="601.8" y="277" width="0.9" height="15.0" fill="rgb(207,214,10)" rx="2" ry="2" />
<text  x="604.81" y="287.5" ></text>
</g>
<g >
<title>massive_count (2,202,020,180 samples, 16.74%)</title><rect x="49.9" y="261" width="197.6" height="15.0" fill="rgb(229,65,31)" rx="2" ry="2" />
<text  x="52.88" y="271.5" >massive_count</text>
</g>
<g >
<title>cubelist_partition (20,202,020 samples, 0.15%)</title><rect x="452.3" y="293" width="1.8" height="15.0" fill="rgb(206,195,41)" rx="2" ry="2" />
<text  x="455.27" y="303.5" ></text>
</g>
<g >
<title>full_row (292,929,290 samples, 2.23%)</title><rect x="23.6" y="261" width="26.3" height="15.0" fill="rgb(209,224,37)" rx="2" ry="2" />
<text  x="26.59" y="271.5" >f..</text>
</g>
<g >
<title>sm_row_contains (10,101,010 samples, 0.08%)</title><rect x="593.7" y="293" width="0.9" height="15.0" fill="rgb(224,146,52)" rx="2" ry="2" />
<text  x="596.66" y="303.5" ></text>
</g>
<g >
<title>set_dist (20,202,020 samples, 0.15%)</title><rect x="364.4" y="277" width="1.8" height="15.0" fill="rgb(219,179,10)" rx="2" ry="2" />
<text  x="367.36" y="287.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::central_freelist_internal::CentralFreeList&lt;tcmalloc::tcmalloc_internal::central_freelist_internal::StaticForwarder&gt;::InsertRange (20,202,020 samples, 0.15%)</title><rect x="407.9" y="213" width="1.8" height="15.0" fill="rgb(235,187,29)" rx="2" ry="2" />
<text  x="410.86" y="223.5" ></text>
</g>
<g >
<title>select_feasible (10,101,010 samples, 0.08%)</title><rect x="521.2" y="293" width="0.9" height="15.0" fill="rgb(246,227,30)" rx="2" ry="2" />
<text  x="524.15" y="303.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Allocate&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::MallocOomPolicy, tcmalloc::tcmalloc_internal::MallocAlignPolicy, tcmalloc::tcmalloc_internal::AllocationAccessHotPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::NonSizeReturningPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (30,303,030 samples, 0.23%)</title><rect x="566.5" y="261" width="2.7" height="15.0" fill="rgb(241,58,32)" rx="2" ry="2" />
<text  x="569.47" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,797,979,750 samples, 36.48%)</title><rect x="603.6" y="229" width="430.5" height="15.0" fill="rgb(228,199,2)" rx="2" ry="2" />
<text  x="606.63" y="239.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>compl_cube (10,101,010 samples, 0.08%)</title><rect x="288.2" y="277" width="0.9" height="15.0" fill="rgb(254,9,8)" rx="2" ry="2" />
<text  x="291.23" y="287.5" ></text>
</g>
<g >
<title>TCMallocInternalRealloc (10,101,010 samples, 0.08%)</title><rect x="585.5" y="277" width="0.9" height="15.0" fill="rgb(229,24,51)" rx="2" ry="2" />
<text  x="588.50" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,737,373,720 samples, 13.21%)</title><rect x="1034.1" y="181" width="155.9" height="15.0" fill="rgb(240,62,46)" rx="2" ry="2" />
<text  x="1037.12" y="191.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>intel_check_word.isra.0 (10,101,010 samples, 0.08%)</title><rect x="11.8" y="277" width="0.9" height="15.0" fill="rgb(219,73,24)" rx="2" ry="2" />
<text  x="14.81" y="287.5" ></text>
</g>
<g >
<title>[unknown] (1,737,373,720 samples, 13.21%)</title><rect x="1034.1" y="277" width="155.9" height="15.0" fill="rgb(213,17,50)" rx="2" ry="2" />
<text  x="1037.12" y="287.5" >[unknown]</text>
</g>
<g >
<title>sm_col_dominance (50,505,050 samples, 0.38%)</title><rect x="395.2" y="277" width="4.5" height="15.0" fill="rgb(208,18,6)" rx="2" ry="2" />
<text  x="398.18" y="287.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (10,101,010 samples, 0.08%)</title><rect x="10.0" y="277" width="0.9" height="15.0" fill="rgb(246,121,33)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>sf_list (10,101,010 samples, 0.08%)</title><rect x="391.6" y="277" width="0.9" height="15.0" fill="rgb(227,84,0)" rx="2" ry="2" />
<text  x="394.55" y="287.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.15%)</title><rect x="15.4" y="261" width="1.9" height="15.0" fill="rgb(234,13,46)" rx="2" ry="2" />
<text  x="18.44" y="271.5" ></text>
</g>
<g >
<title>[unknown] (4,434,343,390 samples, 33.72%)</title><rect x="13.6" y="293" width="397.9" height="15.0" fill="rgb(253,6,7)" rx="2" ry="2" />
<text  x="16.63" y="303.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="246.5" y="181" width="1.0" height="15.0" fill="rgb(241,165,5)" rx="2" ry="2" />
<text  x="249.54" y="191.5" ></text>
</g>
<g >
<title>taut_special_cases (242,424,240 samples, 1.84%)</title><rect x="259.2" y="261" width="21.8" height="15.0" fill="rgb(232,214,40)" rx="2" ry="2" />
<text  x="262.23" y="271.5" >t..</text>
</g>
<g >
<title>set_dist (10,101,010 samples, 0.08%)</title><rect x="532.9" y="293" width="0.9" height="15.0" fill="rgb(207,194,47)" rx="2" ry="2" />
<text  x="535.93" y="303.5" ></text>
</g>
<g >
<title>TCMallocInternalMalloc (10,101,010 samples, 0.08%)</title><rect x="550.2" y="277" width="0.9" height="15.0" fill="rgb(248,113,9)" rx="2" ry="2" />
<text  x="553.15" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="532.0" y="213" width="0.9" height="15.0" fill="rgb(233,164,18)" rx="2" ry="2" />
<text  x="535.03" y="223.5" ></text>
</g>
<g >
<title>TCMallocInternalMalloc (90,909,090 samples, 0.69%)</title><rect x="561.0" y="277" width="8.2" height="15.0" fill="rgb(244,97,31)" rx="2" ry="2" />
<text  x="564.03" y="287.5" ></text>
</g>
<g >
<title>TcmallocSlab_Internal_PopBatch (10,101,010 samples, 0.08%)</title><rect x="407.0" y="213" width="0.9" height="15.0" fill="rgb(212,46,9)" rx="2" ry="2" />
<text  x="409.96" y="223.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10,101,010 samples, 0.08%)</title><rect x="411.5" y="293" width="0.9" height="15.0" fill="rgb(205,92,43)" rx="2" ry="2" />
<text  x="414.49" y="303.5" ></text>
</g>
<g >
<title>complement (20,202,020 samples, 0.15%)</title><rect x="20.0" y="261" width="1.8" height="15.0" fill="rgb(253,131,21)" rx="2" ry="2" />
<text  x="22.97" y="271.5" ></text>
</g>
<g >
<title>sf_join (10,101,010 samples, 0.08%)</title><rect x="390.6" y="277" width="1.0" height="15.0" fill="rgb(236,199,29)" rx="2" ry="2" />
<text  x="393.65" y="287.5" ></text>
</g>
<g >
<title>[espresso] (10,101,010 samples, 0.08%)</title><rect x="14.5" y="261" width="0.9" height="15.0" fill="rgb(219,63,26)" rx="2" ry="2" />
<text  x="17.53" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,737,373,720 samples, 13.21%)</title><rect x="1034.1" y="197" width="155.9" height="15.0" fill="rgb(247,63,44)" rx="2" ry="2" />
<text  x="1037.12" y="207.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[unknown] (1,737,373,720 samples, 13.21%)</title><rect x="1034.1" y="261" width="155.9" height="15.0" fill="rgb(221,61,26)" rx="2" ry="2" />
<text  x="1037.12" y="271.5" >[unknown]</text>
</g>
<g >
<title>sm_maximal_independent_set (10,101,010 samples, 0.08%)</title><rect x="15.4" y="245" width="0.9" height="15.0" fill="rgb(223,83,21)" rx="2" ry="2" />
<text  x="18.44" y="255.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.08%)</title><rect x="10.0" y="293" width="0.9" height="15.0" fill="rgb(227,161,36)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.08%)</title><rect x="601.8" y="293" width="0.9" height="15.0" fill="rgb(216,62,40)" rx="2" ry="2" />
<text  x="604.81" y="303.5" ></text>
</g>
<g >
<title>sccc_special_cases (20,202,020 samples, 0.15%)</title><rect x="250.2" y="261" width="1.8" height="15.0" fill="rgb(251,80,8)" rx="2" ry="2" />
<text  x="253.17" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="532.0" y="197" width="0.9" height="15.0" fill="rgb(205,185,52)" rx="2" ry="2" />
<text  x="535.03" y="207.5" ></text>
</g>
<g >
<title>all (13,151,515,020 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(226,35,22)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>[unknown] (1,737,373,720 samples, 13.21%)</title><rect x="1034.1" y="245" width="155.9" height="15.0" fill="rgb(218,51,14)" rx="2" ry="2" />
<text  x="1037.12" y="255.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="11.8" y="245" width="0.9" height="15.0" fill="rgb(214,104,15)" rx="2" ry="2" />
<text  x="14.81" y="255.5" ></text>
</g>
<g >
<title>sm_row_insert (20,202,020 samples, 0.15%)</title><rect x="409.7" y="277" width="1.8" height="15.0" fill="rgb(237,19,24)" rx="2" ry="2" />
<text  x="412.68" y="287.5" ></text>
</g>
<g >
<title>espresso (6,555,555,490 samples, 49.85%)</title><rect x="12.7" y="309" width="588.2" height="15.0" fill="rgb(226,96,40)" rx="2" ry="2" />
<text  x="15.72" y="319.5" >espresso</text>
</g>
<g >
<title>python3 (10,101,010 samples, 0.08%)</title><rect x="600.9" y="309" width="0.9" height="15.0" fill="rgb(235,98,42)" rx="2" ry="2" />
<text  x="603.91" y="319.5" ></text>
</g>
<g >
<title>set_or (10,101,010 samples, 0.08%)</title><rect x="252.9" y="261" width="0.9" height="15.0" fill="rgb(216,89,52)" rx="2" ry="2" />
<text  x="255.89" y="271.5" ></text>
</g>
<g >
<title>[snapd] (10,101,010 samples, 0.08%)</title><rect x="602.7" y="213" width="0.9" height="15.0" fill="rgb(223,106,38)" rx="2" ry="2" />
<text  x="605.72" y="223.5" ></text>
</g>
<g >
<title>do_sm_minimum_cover (40,404,040 samples, 0.31%)</title><rect x="300.0" y="277" width="3.6" height="15.0" fill="rgb(228,23,30)" rx="2" ry="2" />
<text  x="303.02" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="532.0" y="277" width="0.9" height="15.0" fill="rgb(230,1,48)" rx="2" ry="2" />
<text  x="535.03" y="287.5" ></text>
</g>
<g >
<title>snapd (10,101,010 samples, 0.08%)</title><rect x="602.7" y="309" width="0.9" height="15.0" fill="rgb(215,188,5)" rx="2" ry="2" />
<text  x="605.72" y="319.5" ></text>
</g>
<g >
<title>massive_count (343,434,340 samples, 2.61%)</title><rect x="455.0" y="293" width="30.8" height="15.0" fill="rgb(236,153,29)" rx="2" ry="2" />
<text  x="457.99" y="303.5" >ma..</text>
</g>
<g >
<title>essen_parts (171,717,170 samples, 1.31%)</title><rect x="329.9" y="277" width="15.4" height="15.0" fill="rgb(249,14,45)" rx="2" ry="2" />
<text  x="332.92" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (10,101,010 samples, 0.08%)</title><rect x="600.9" y="277" width="0.9" height="15.0" fill="rgb(233,90,0)" rx="2" ry="2" />
<text  x="603.91" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="532.0" y="181" width="0.9" height="15.0" fill="rgb(214,74,24)" rx="2" ry="2" />
<text  x="535.03" y="191.5" ></text>
</g>
<g >
<title>set_diff (60,606,060 samples, 0.46%)</title><rect x="527.5" y="293" width="5.4" height="15.0" fill="rgb(228,126,25)" rx="2" ry="2" />
<text  x="530.50" y="303.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (10,101,010 samples, 0.08%)</title><rect x="249.3" y="245" width="0.9" height="15.0" fill="rgb(221,26,37)" rx="2" ry="2" />
<text  x="252.26" y="255.5" ></text>
</g>
<g >
<title>sm_row_insert (10,101,010 samples, 0.08%)</title><rect x="16.3" y="245" width="1.0" height="15.0" fill="rgb(209,93,12)" rx="2" ry="2" />
<text  x="19.34" y="255.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::Span::FreelistPopBatchSized&lt; (10,101,010 samples, 0.08%)</title><rect x="567.4" y="213" width="0.9" height="15.0" fill="rgb(227,127,14)" rx="2" ry="2" />
<text  x="570.37" y="223.5" ></text>
</g>
<g >
<title>[snapd] (10,101,010 samples, 0.08%)</title><rect x="602.7" y="197" width="0.9" height="15.0" fill="rgb(234,224,53)" rx="2" ry="2" />
<text  x="605.72" y="207.5" ></text>
</g>
<g >
<title>TCMallocInternalMalloc (101,010,100 samples, 0.77%)</title><rect x="574.6" y="277" width="9.1" height="15.0" fill="rgb(223,132,23)" rx="2" ry="2" />
<text  x="577.62" y="287.5" ></text>
</g>
<g >
<title>TCMallocInternalMalloc (70,707,070 samples, 0.54%)</title><rect x="514.8" y="277" width="6.4" height="15.0" fill="rgb(228,38,38)" rx="2" ry="2" />
<text  x="517.81" y="287.5" ></text>
</g>
<g >
<title>set_copy (10,101,010 samples, 0.08%)</title><rect x="363.5" y="277" width="0.9" height="15.0" fill="rgb(220,67,29)" rx="2" ry="2" />
<text  x="366.46" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,797,979,750 samples, 36.48%)</title><rect x="603.6" y="277" width="430.5" height="15.0" fill="rgb(217,184,5)" rx="2" ry="2" />
<text  x="606.63" y="287.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="246.5" y="101" width="1.0" height="15.0" fill="rgb(254,128,21)" rx="2" ry="2" />
<text  x="249.54" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,797,979,750 samples, 36.48%)</title><rect x="603.6" y="197" width="430.5" height="15.0" fill="rgb(236,157,46)" rx="2" ry="2" />
<text  x="606.63" y="207.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="532.0" y="149" width="0.9" height="15.0" fill="rgb(251,126,27)" rx="2" ry="2" />
<text  x="535.03" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="246.5" y="165" width="1.0" height="15.0" fill="rgb(235,60,38)" rx="2" ry="2" />
<text  x="249.54" y="175.5" ></text>
</g>
<g >
<title>[snapd] (10,101,010 samples, 0.08%)</title><rect x="602.7" y="261" width="0.9" height="15.0" fill="rgb(212,110,0)" rx="2" ry="2" />
<text  x="605.72" y="271.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (30,303,030 samples, 0.23%)</title><rect x="17.3" y="261" width="2.7" height="15.0" fill="rgb(206,43,52)" rx="2" ry="2" />
<text  x="20.25" y="271.5" ></text>
</g>
<g >
<title>TCMallocInternalMalloc (20,202,020 samples, 0.15%)</title><rect x="250.2" y="245" width="1.8" height="15.0" fill="rgb(242,113,26)" rx="2" ry="2" />
<text  x="253.17" y="255.5" ></text>
</g>
<g >
<title>d1_order (10,101,010 samples, 0.08%)</title><rect x="454.1" y="293" width="0.9" height="15.0" fill="rgb(233,70,2)" rx="2" ry="2" />
<text  x="457.09" y="303.5" ></text>
</g>
<g >
<title>TCMallocInternalMalloc (10,101,010 samples, 0.08%)</title><rect x="283.7" y="245" width="0.9" height="15.0" fill="rgb(233,157,15)" rx="2" ry="2" />
<text  x="286.70" y="255.5" ></text>
</g>
<g >
<title>sm_resize (30,303,030 samples, 0.23%)</title><rect x="583.7" y="293" width="2.7" height="15.0" fill="rgb(214,133,25)" rx="2" ry="2" />
<text  x="586.69" y="303.5" ></text>
</g>
<g >
<title>sm_insert (30,303,030 samples, 0.23%)</title><rect x="401.5" y="277" width="2.7" height="15.0" fill="rgb(230,87,34)" rx="2" ry="2" />
<text  x="404.52" y="287.5" ></text>
</g>
<g >
<title>[unknown] (1,737,373,720 samples, 13.21%)</title><rect x="1034.1" y="229" width="155.9" height="15.0" fill="rgb(254,29,43)" rx="2" ry="2" />
<text  x="1037.12" y="239.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="246.5" y="245" width="1.0" height="15.0" fill="rgb(253,138,28)" rx="2" ry="2" />
<text  x="249.54" y="255.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (10,101,010 samples, 0.08%)</title><rect x="22.7" y="245" width="0.9" height="15.0" fill="rgb(210,212,43)" rx="2" ry="2" />
<text  x="25.69" y="255.5" ></text>
</g>
<g >
<title>setp_equal (10,101,010 samples, 0.08%)</title><rect x="253.8" y="261" width="0.9" height="15.0" fill="rgb(224,28,7)" rx="2" ry="2" />
<text  x="256.79" y="271.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::UpdateCapacity (10,101,010 samples, 0.08%)</title><rect x="568.3" y="229" width="0.9" height="15.0" fill="rgb(221,135,1)" rx="2" ry="2" />
<text  x="571.28" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="246.5" y="213" width="1.0" height="15.0" fill="rgb(227,90,42)" rx="2" ry="2" />
<text  x="249.54" y="223.5" ></text>
</g>
<g >
<title>set_and (60,606,060 samples, 0.46%)</title><rect x="522.1" y="293" width="5.4" height="15.0" fill="rgb(213,74,27)" rx="2" ry="2" />
<text  x="525.06" y="303.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (60,606,060 samples, 0.46%)</title><rect x="404.2" y="261" width="5.5" height="15.0" fill="rgb(215,208,12)" rx="2" ry="2" />
<text  x="407.24" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="11.8" y="261" width="0.9" height="15.0" fill="rgb(234,208,52)" rx="2" ry="2" />
<text  x="14.81" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="246.5" y="117" width="1.0" height="15.0" fill="rgb(247,188,0)" rx="2" ry="2" />
<text  x="249.54" y="127.5" ></text>
</g>
<g >
<title>sm_row_insert (10,101,010 samples, 0.08%)</title><rect x="258.3" y="261" width="0.9" height="15.0" fill="rgb(230,128,18)" rx="2" ry="2" />
<text  x="261.33" y="271.5" ></text>
</g>
<g >
<title>setp_disjoint (40,404,040 samples, 0.31%)</title><rect x="366.2" y="277" width="3.6" height="15.0" fill="rgb(246,158,19)" rx="2" ry="2" />
<text  x="369.18" y="287.5" ></text>
</g>
<g >
<title>scofactor (353,535,350 samples, 2.69%)</title><rect x="489.4" y="293" width="31.8" height="15.0" fill="rgb(238,159,14)" rx="2" ry="2" />
<text  x="492.43" y="303.5" >sc..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,797,979,750 samples, 36.48%)</title><rect x="603.6" y="261" width="430.5" height="15.0" fill="rgb(222,184,42)" rx="2" ry="2" />
<text  x="606.63" y="271.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,535,353,470 samples, 49.69%)</title><rect x="603.6" y="293" width="586.4" height="15.0" fill="rgb(225,73,53)" rx="2" ry="2" />
<text  x="606.63" y="303.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>cdist01 (10,101,010 samples, 0.08%)</title><rect x="287.3" y="277" width="0.9" height="15.0" fill="rgb(210,225,3)" rx="2" ry="2" />
<text  x="290.33" y="287.5" ></text>
</g>
<g >
<title>tautology (40,404,040 samples, 0.31%)</title><rect x="281.0" y="261" width="3.6" height="15.0" fill="rgb(250,20,54)" rx="2" ry="2" />
<text  x="283.98" y="271.5" ></text>
</g>
<g >
<title>setup_BB_CC (212,121,210 samples, 1.61%)</title><rect x="371.6" y="277" width="19.0" height="15.0" fill="rgb(241,227,12)" rx="2" ry="2" />
<text  x="374.61" y="287.5" ></text>
</g>
<g >
<title>essen_raising (20,202,020 samples, 0.15%)</title><rect x="345.3" y="277" width="1.8" height="15.0" fill="rgb(243,203,18)" rx="2" ry="2" />
<text  x="348.33" y="287.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (10,101,010 samples, 0.08%)</title><rect x="20.9" y="245" width="0.9" height="15.0" fill="rgb(252,107,21)" rx="2" ry="2" />
<text  x="23.88" y="255.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (10,101,010 samples, 0.08%)</title><rect x="485.8" y="293" width="0.9" height="15.0" fill="rgb(232,201,8)" rx="2" ry="2" />
<text  x="488.81" y="303.5" ></text>
</g>
<g >
<title>ccommon (10,101,010 samples, 0.08%)</title><rect x="286.4" y="277" width="0.9" height="15.0" fill="rgb(235,194,5)" rx="2" ry="2" />
<text  x="289.42" y="287.5" ></text>
</g>
<g >
<title>sm_dup (151,515,150 samples, 1.15%)</title><rect x="555.6" y="293" width="13.6" height="15.0" fill="rgb(243,154,20)" rx="2" ry="2" />
<text  x="558.59" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="532.0" y="245" width="0.9" height="15.0" fill="rgb(241,182,39)" rx="2" ry="2" />
<text  x="535.03" y="255.5" ></text>
</g>
<g >
<title>set_dist (10,101,010 samples, 0.08%)</title><rect x="252.0" y="261" width="0.9" height="15.0" fill="rgb(253,122,22)" rx="2" ry="2" />
<text  x="254.98" y="271.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Overflow (30,303,030 samples, 0.23%)</title><rect x="407.0" y="229" width="2.7" height="15.0" fill="rgb(212,78,7)" rx="2" ry="2" />
<text  x="409.96" y="239.5" ></text>
</g>
<g >
<title>cofactor (434,343,430 samples, 3.30%)</title><rect x="413.3" y="293" width="39.0" height="15.0" fill="rgb(215,58,5)" rx="2" ry="2" />
<text  x="416.30" y="303.5" >cof..</text>
</g>
<g >
<title>elim_lowering (292,929,290 samples, 2.23%)</title><rect x="303.6" y="277" width="26.3" height="15.0" fill="rgb(211,91,7)" rx="2" ry="2" />
<text  x="306.64" y="287.5" >e..</text>
</g>
<g >
<title>bench.sh (20,202,020 samples, 0.15%)</title><rect x="10.0" y="309" width="1.8" height="15.0" fill="rgb(208,127,46)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>force_lower (60,606,060 samples, 0.46%)</title><rect x="348.0" y="277" width="5.5" height="15.0" fill="rgb(226,200,25)" rx="2" ry="2" />
<text  x="351.05" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,737,373,720 samples, 13.21%)</title><rect x="1034.1" y="149" width="155.9" height="15.0" fill="rgb(220,135,43)" rx="2" ry="2" />
<text  x="1037.12" y="159.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Refill (30,303,030 samples, 0.23%)</title><rect x="566.5" y="245" width="2.7" height="15.0" fill="rgb(227,115,45)" rx="2" ry="2" />
<text  x="569.47" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="246.5" y="69" width="1.0" height="15.0" fill="rgb(212,146,36)" rx="2" ry="2" />
<text  x="249.54" y="79.5" ></text>
</g>
<g >
<title>feasibly_covered (10,101,010 samples, 0.08%)</title><rect x="347.1" y="277" width="0.9" height="15.0" fill="rgb(232,48,40)" rx="2" ry="2" />
<text  x="350.14" y="287.5" ></text>
</g>
<g >
<title>sm_row_dominance (50,505,050 samples, 0.38%)</title><rect x="594.6" y="293" width="4.5" height="15.0" fill="rgb(245,166,4)" rx="2" ry="2" />
<text  x="597.56" y="303.5" ></text>
</g>
<g >
<title>sccc_special_cases (20,202,020 samples, 0.15%)</title><rect x="487.6" y="293" width="1.8" height="15.0" fill="rgb(206,186,20)" rx="2" ry="2" />
<text  x="490.62" y="303.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (20,202,020 samples, 0.15%)</title><rect x="399.7" y="261" width="1.8" height="15.0" fill="rgb(234,146,39)" rx="2" ry="2" />
<text  x="402.71" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,797,979,750 samples, 36.48%)</title><rect x="603.6" y="213" width="430.5" height="15.0" fill="rgb(236,173,42)" rx="2" ry="2" />
<text  x="606.63" y="223.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>compl_merge (30,303,030 samples, 0.23%)</title><rect x="292.8" y="277" width="2.7" height="15.0" fill="rgb(252,22,40)" rx="2" ry="2" />
<text  x="295.76" y="287.5" ></text>
</g>
<g >
<title>sm_col_dominance (10,101,010 samples, 0.08%)</title><rect x="551.1" y="293" width="0.9" height="15.0" fill="rgb(230,71,35)" rx="2" ry="2" />
<text  x="554.06" y="303.5" ></text>
</g>
<g >
<title>TCMallocInternalMalloc (10,101,010 samples, 0.08%)</title><rect x="391.6" y="261" width="0.9" height="15.0" fill="rgb(247,43,50)" rx="2" ry="2" />
<text  x="394.55" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="246.5" y="133" width="1.0" height="15.0" fill="rgb(236,192,32)" rx="2" ry="2" />
<text  x="249.54" y="143.5" ></text>
</g>
<g >
<title>complement (50,505,050 samples, 0.38%)</title><rect x="295.5" y="277" width="4.5" height="15.0" fill="rgb(211,8,8)" rx="2" ry="2" />
<text  x="298.48" y="287.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.08%)</title><rect x="11.8" y="293" width="0.9" height="15.0" fill="rgb(241,86,21)" rx="2" ry="2" />
<text  x="14.81" y="303.5" ></text>
</g>
<g >
<title>TCMallocInternalMalloc (40,404,040 samples, 0.31%)</title><rect x="590.0" y="277" width="3.7" height="15.0" fill="rgb(227,130,13)" rx="2" ry="2" />
<text  x="593.03" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="246.5" y="85" width="1.0" height="15.0" fill="rgb(245,175,30)" rx="2" ry="2" />
<text  x="249.54" y="95.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Deallocate (30,303,030 samples, 0.23%)</title><rect x="407.0" y="245" width="2.7" height="15.0" fill="rgb(228,214,34)" rx="2" ry="2" />
<text  x="409.96" y="255.5" ></text>
</g>
<g >
<title>compl_lift (40,404,040 samples, 0.31%)</title><rect x="289.1" y="277" width="3.7" height="15.0" fill="rgb(247,164,45)" rx="2" ry="2" />
<text  x="292.14" y="287.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.08%)</title><rect x="600.9" y="293" width="0.9" height="15.0" fill="rgb(215,38,7)" rx="2" ry="2" />
<text  x="603.91" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="532.0" y="229" width="0.9" height="15.0" fill="rgb(242,151,27)" rx="2" ry="2" />
<text  x="535.03" y="239.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (10,101,010 samples, 0.08%)</title><rect x="293.7" y="261" width="0.9" height="15.0" fill="rgb(222,4,36)" rx="2" ry="2" />
<text  x="296.67" y="271.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::cpu_cache_internal::CpuCache&lt;tcmalloc::tcmalloc_internal::cpu_cache_internal::StaticForwarder&gt;::Overflow (10,101,010 samples, 0.08%)</title><rect x="554.7" y="245" width="0.9" height="15.0" fill="rgb(247,55,4)" rx="2" ry="2" />
<text  x="557.69" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="11.8" y="229" width="0.9" height="15.0" fill="rgb(206,67,10)" rx="2" ry="2" />
<text  x="14.81" y="239.5" ></text>
</g>
<g >
<title>[snapd] (10,101,010 samples, 0.08%)</title><rect x="602.7" y="229" width="0.9" height="15.0" fill="rgb(246,228,24)" rx="2" ry="2" />
<text  x="605.72" y="239.5" ></text>
</g>
<g >
<title>sccc (30,303,030 samples, 0.23%)</title><rect x="247.5" y="261" width="2.7" height="15.0" fill="rgb(251,110,20)" rx="2" ry="2" />
<text  x="250.45" y="271.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (20,202,020 samples, 0.15%)</title><rect x="409.7" y="261" width="1.8" height="15.0" fill="rgb(247,140,6)" rx="2" ry="2" />
<text  x="412.68" y="271.5" ></text>
</g>
<g >
<title>setp_implies (20,202,020 samples, 0.15%)</title><rect x="254.7" y="261" width="1.8" height="15.0" fill="rgb(253,82,45)" rx="2" ry="2" />
<text  x="257.70" y="271.5" ></text>
</g>
<g >
<title>[unknown] (3,020,201,990 samples, 22.96%)</title><rect x="13.6" y="277" width="271.0" height="15.0" fill="rgb(233,68,38)" rx="2" ry="2" />
<text  x="16.63" y="287.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.08%)</title><rect x="602.7" y="293" width="0.9" height="15.0" fill="rgb(225,28,9)" rx="2" ry="2" />
<text  x="605.72" y="303.5" ></text>
</g>
<g >
<title>redis-server (10,101,010 samples, 0.08%)</title><rect x="601.8" y="309" width="0.9" height="15.0" fill="rgb(227,162,26)" rx="2" ry="2" />
<text  x="604.81" y="319.5" ></text>
</g>
<g >
<title>swapper (6,535,353,470 samples, 49.69%)</title><rect x="603.6" y="309" width="586.4" height="15.0" fill="rgb(251,96,29)" rx="2" ry="2" />
<text  x="606.63" y="319.5" >swapper</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="246.5" y="197" width="1.0" height="15.0" fill="rgb(206,158,53)" rx="2" ry="2" />
<text  x="249.54" y="207.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (20,202,020 samples, 0.15%)</title><rect x="553.8" y="277" width="1.8" height="15.0" fill="rgb(217,226,47)" rx="2" ry="2" />
<text  x="556.78" y="287.5" ></text>
</g>
<g >
<title>TCMallocInternalDeleteArrayAlignedNothrow (10,101,010 samples, 0.08%)</title><rect x="598.2" y="277" width="0.9" height="15.0" fill="rgb(231,210,2)" rx="2" ry="2" />
<text  x="601.19" y="287.5" ></text>
</g>
<g >
<title>sm_row_alloc (80,808,080 samples, 0.61%)</title><rect x="586.4" y="293" width="7.3" height="15.0" fill="rgb(240,153,47)" rx="2" ry="2" />
<text  x="589.41" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.08%)</title><rect x="246.5" y="229" width="1.0" height="15.0" fill="rgb(209,212,11)" rx="2" ry="2" />
<text  x="249.54" y="239.5" ></text>
</g>
</g>
</svg>
