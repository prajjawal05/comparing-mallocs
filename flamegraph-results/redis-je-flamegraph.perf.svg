<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="774.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="757" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="757" > </text>
<g id="frames">
<g >
<title>__lxstat64 (10,101,010 samples, 0.09%)</title><rect x="11.1" y="661" width="1.1" height="15.0" fill="rgb(232,8,50)" rx="2" ry="2" />
<text  x="14.10" y="671.5" ></text>
</g>
<g >
<title>arch_cpu_idle (5,010,100,960 samples, 46.36%)</title><rect x="75.1" y="613" width="547.0" height="15.0" fill="rgb(213,225,47)" rx="2" ry="2" />
<text  x="78.07" y="623.5" >arch_cpu_idle</text>
</g>
<g >
<title>__x64_sys_write (10,101,010 samples, 0.09%)</title><rect x="39.8" y="629" width="1.1" height="15.0" fill="rgb(227,24,24)" rx="2" ry="2" />
<text  x="42.78" y="639.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.09%)</title><rect x="1187.8" y="693" width="1.1" height="15.0" fill="rgb(222,66,49)" rx="2" ry="2" />
<text  x="1190.79" y="703.5" ></text>
</g>
<g >
<title>unmap_page_range (10,101,010 samples, 0.09%)</title><rect x="60.7" y="501" width="1.1" height="15.0" fill="rgb(232,189,47)" rx="2" ry="2" />
<text  x="63.73" y="511.5" ></text>
</g>
<g >
<title>zrealloc (30,303,030 samples, 0.28%)</title><rect x="71.8" y="693" width="3.3" height="15.0" fill="rgb(226,90,29)" rx="2" ry="2" />
<text  x="74.76" y="703.5" ></text>
</g>
<g >
<title>do_idle (5,181,818,130 samples, 47.94%)</title><rect x="622.1" y="581" width="565.7" height="15.0" fill="rgb(233,220,42)" rx="2" ry="2" />
<text  x="625.06" y="591.5" >do_idle</text>
</g>
<g >
<title>simple_copy_to_iter (10,101,010 samples, 0.09%)</title><rect x="37.6" y="453" width="1.1" height="15.0" fill="rgb(208,27,14)" rx="2" ry="2" />
<text  x="40.57" y="463.5" ></text>
</g>
<g >
<title>__ip_finish_output (10,101,010 samples, 0.09%)</title><rect x="39.8" y="341" width="1.1" height="15.0" fill="rgb(212,156,18)" rx="2" ry="2" />
<text  x="42.78" y="351.5" ></text>
</g>
<g >
<title>do_softirq (10,101,010 samples, 0.09%)</title><rect x="39.8" y="293" width="1.1" height="15.0" fill="rgb(210,18,42)" rx="2" ry="2" />
<text  x="42.78" y="303.5" ></text>
</g>
<g >
<title>__GI___execve (10,101,010 samples, 0.09%)</title><rect x="13.3" y="677" width="1.1" height="15.0" fill="rgb(252,204,44)" rx="2" ry="2" />
<text  x="16.31" y="687.5" ></text>
</g>
<g >
<title>ip_output (20,202,020 samples, 0.19%)</title><rect x="28.7" y="405" width="2.3" height="15.0" fill="rgb(240,219,31)" rx="2" ry="2" />
<text  x="31.75" y="415.5" ></text>
</g>
<g >
<title>do_softirq (20,202,020 samples, 0.19%)</title><rect x="28.7" y="325" width="2.3" height="15.0" fill="rgb(233,131,53)" rx="2" ry="2" />
<text  x="31.75" y="335.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (10,101,010 samples, 0.09%)</title><rect x="25.4" y="613" width="1.1" height="15.0" fill="rgb(243,49,46)" rx="2" ry="2" />
<text  x="28.44" y="623.5" ></text>
</g>
<g >
<title>process_backlog (20,202,020 samples, 0.19%)</title><rect x="28.7" y="261" width="2.3" height="15.0" fill="rgb(215,87,34)" rx="2" ry="2" />
<text  x="31.75" y="271.5" ></text>
</g>
<g >
<title>mmput (10,101,010 samples, 0.09%)</title><rect x="60.7" y="565" width="1.1" height="15.0" fill="rgb(237,67,16)" rx="2" ry="2" />
<text  x="63.73" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.09%)</title><rect x="1187.8" y="661" width="1.1" height="15.0" fill="rgb(254,86,35)" rx="2" ry="2" />
<text  x="1190.79" y="671.5" ></text>
</g>
<g >
<title>net_rx_action (10,101,010 samples, 0.09%)</title><rect x="39.8" y="261" width="1.1" height="15.0" fill="rgb(226,163,51)" rx="2" ry="2" />
<text  x="42.78" y="271.5" ></text>
</g>
<g >
<title>ip_output (10,101,010 samples, 0.09%)</title><rect x="39.8" y="373" width="1.1" height="15.0" fill="rgb(232,113,41)" rx="2" ry="2" />
<text  x="42.78" y="383.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (20,202,020 samples, 0.19%)</title><rect x="35.4" y="677" width="2.2" height="15.0" fill="rgb(229,37,8)" rx="2" ry="2" />
<text  x="38.36" y="687.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10,101,010 samples, 0.09%)</title><rect x="39.8" y="101" width="1.1" height="15.0" fill="rgb(233,132,44)" rx="2" ry="2" />
<text  x="42.78" y="111.5" ></text>
</g>
<g >
<title>ip_local_out (20,202,020 samples, 0.19%)</title><rect x="28.7" y="421" width="2.3" height="15.0" fill="rgb(240,220,24)" rx="2" ry="2" />
<text  x="31.75" y="431.5" ></text>
</g>
<g >
<title>getname_flags (10,101,010 samples, 0.09%)</title><rect x="14.4" y="565" width="1.1" height="15.0" fill="rgb(216,36,44)" rx="2" ry="2" />
<text  x="17.41" y="575.5" ></text>
</g>
<g >
<title>ip_rcv (10,101,010 samples, 0.09%)</title><rect x="39.8" y="181" width="1.1" height="15.0" fill="rgb(253,186,26)" rx="2" ry="2" />
<text  x="42.78" y="191.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (30,303,030 samples, 0.28%)</title><rect x="27.6" y="437" width="3.4" height="15.0" fill="rgb(251,93,30)" rx="2" ry="2" />
<text  x="30.64" y="447.5" ></text>
</g>
<g >
<title>swapper (10,191,919,090 samples, 94.30%)</title><rect x="75.1" y="709" width="1112.7" height="15.0" fill="rgb(232,124,3)" rx="2" ry="2" />
<text  x="78.07" y="719.5" >swapper</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.09%)</title><rect x="1188.9" y="629" width="1.1" height="15.0" fill="rgb(232,195,50)" rx="2" ry="2" />
<text  x="1191.90" y="639.5" ></text>
</g>
<g >
<title>ext4_setattr (10,101,010 samples, 0.09%)</title><rect x="1187.8" y="565" width="1.1" height="15.0" fill="rgb(246,145,39)" rx="2" ry="2" />
<text  x="1190.79" y="575.5" ></text>
</g>
<g >
<title>ret_from_fork (10,101,010 samples, 0.09%)</title><rect x="18.8" y="693" width="1.1" height="15.0" fill="rgb(207,188,13)" rx="2" ry="2" />
<text  x="21.82" y="703.5" ></text>
</g>
<g >
<title>zipStoreEntryEncoding (10,101,010 samples, 0.09%)</title><rect x="67.3" y="693" width="1.1" height="15.0" fill="rgb(231,211,24)" rx="2" ry="2" />
<text  x="70.35" y="703.5" ></text>
</g>
<g >
<title>epoll_ctl (30,303,030 samples, 0.28%)</title><rect x="21.0" y="693" width="3.3" height="15.0" fill="rgb(246,200,48)" rx="2" ry="2" />
<text  x="24.03" y="703.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,101,010 samples, 0.09%)</title><rect x="39.8" y="133" width="1.1" height="15.0" fill="rgb(242,141,0)" rx="2" ry="2" />
<text  x="42.78" y="143.5" ></text>
</g>
<g >
<title>__napi_poll (10,101,010 samples, 0.09%)</title><rect x="39.8" y="245" width="1.1" height="15.0" fill="rgb(205,2,28)" rx="2" ry="2" />
<text  x="42.78" y="255.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (10,101,010 samples, 0.09%)</title><rect x="39.8" y="469" width="1.1" height="15.0" fill="rgb(211,48,30)" rx="2" ry="2" />
<text  x="42.78" y="479.5" ></text>
</g>
<g >
<title>do_sys_open (10,101,010 samples, 0.09%)</title><rect x="14.4" y="613" width="1.1" height="15.0" fill="rgb(209,66,6)" rx="2" ry="2" />
<text  x="17.41" y="623.5" ></text>
</g>
<g >
<title>__ip_finish_output (20,202,020 samples, 0.19%)</title><rect x="28.7" y="373" width="2.3" height="15.0" fill="rgb(221,186,22)" rx="2" ry="2" />
<text  x="31.75" y="383.5" ></text>
</g>
<g >
<title>from_kuid_munged (10,101,010 samples, 0.09%)</title><rect x="12.2" y="581" width="1.1" height="15.0" fill="rgb(253,209,5)" rx="2" ry="2" />
<text  x="15.21" y="591.5" ></text>
</g>
<g >
<title>tcp_sendmsg (10,101,010 samples, 0.09%)</title><rect x="39.8" y="517" width="1.1" height="15.0" fill="rgb(221,56,18)" rx="2" ry="2" />
<text  x="42.78" y="527.5" ></text>
</g>
<g >
<title>ip_rcv_finish (10,101,010 samples, 0.09%)</title><rect x="29.9" y="197" width="1.1" height="15.0" fill="rgb(219,133,17)" rx="2" ry="2" />
<text  x="32.85" y="207.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (10,101,010 samples, 0.09%)</title><rect x="1187.8" y="485" width="1.1" height="15.0" fill="rgb(229,92,32)" rx="2" ry="2" />
<text  x="1190.79" y="495.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (10,101,010 samples, 0.09%)</title><rect x="1187.8" y="517" width="1.1" height="15.0" fill="rgb(229,17,33)" rx="2" ry="2" />
<text  x="1190.79" y="527.5" ></text>
</g>
<g >
<title>getname (10,101,010 samples, 0.09%)</title><rect x="14.4" y="581" width="1.1" height="15.0" fill="rgb(237,57,51)" rx="2" ry="2" />
<text  x="17.41" y="591.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (10,101,010 samples, 0.09%)</title><rect x="39.8" y="437" width="1.1" height="15.0" fill="rgb(210,77,34)" rx="2" ry="2" />
<text  x="42.78" y="447.5" ></text>
</g>
<g >
<title>notify_change (10,101,010 samples, 0.09%)</title><rect x="1187.8" y="581" width="1.1" height="15.0" fill="rgb(235,141,35)" rx="2" ry="2" />
<text  x="1190.79" y="591.5" ></text>
</g>
<g >
<title>systemd-journal (10,101,010 samples, 0.09%)</title><rect x="1187.8" y="709" width="1.1" height="15.0" fill="rgb(236,22,35)" rx="2" ry="2" />
<text  x="1190.79" y="719.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (5,181,818,130 samples, 47.94%)</title><rect x="622.1" y="677" width="565.7" height="15.0" fill="rgb(217,164,49)" rx="2" ry="2" />
<text  x="625.06" y="687.5" >x86_64_start_kernel</text>
</g>
<g >
<title>[unknown] (30,303,030 samples, 0.28%)</title><rect x="10.0" y="693" width="3.3" height="15.0" fill="rgb(213,0,4)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>__libc_read (10,101,010 samples, 0.09%)</title><rect x="37.6" y="677" width="1.1" height="15.0" fill="rgb(227,215,0)" rx="2" ry="2" />
<text  x="40.57" y="687.5" ></text>
</g>
<g >
<title>__libc_calloc (10,101,010 samples, 0.09%)</title><rect x="19.9" y="677" width="1.1" height="15.0" fill="rgb(235,226,23)" rx="2" ry="2" />
<text  x="22.93" y="687.5" ></text>
</g>
<g >
<title>make_child (10,101,010 samples, 0.09%)</title><rect x="16.6" y="677" width="1.1" height="15.0" fill="rgb(223,223,50)" rx="2" ry="2" />
<text  x="19.62" y="687.5" ></text>
</g>
<g >
<title>cpu_startup_entry (5,181,818,130 samples, 47.94%)</title><rect x="622.1" y="597" width="565.7" height="15.0" fill="rgb(229,187,18)" rx="2" ry="2" />
<text  x="625.06" y="607.5" >cpu_startup_entry</text>
</g>
<g >
<title>[libmount.so.1.1.0] (20,202,020 samples, 0.19%)</title><rect x="10.0" y="677" width="2.2" height="15.0" fill="rgb(253,165,0)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>worker_thread (10,101,010 samples, 0.09%)</title><rect x="18.8" y="661" width="1.1" height="15.0" fill="rgb(239,17,29)" rx="2" ry="2" />
<text  x="21.82" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (20,202,020 samples, 0.19%)</title><rect x="22.1" y="661" width="2.2" height="15.0" fill="rgb(215,145,1)" rx="2" ry="2" />
<text  x="25.13" y="671.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (10,101,010 samples, 0.09%)</title><rect x="37.6" y="469" width="1.1" height="15.0" fill="rgb(220,199,26)" rx="2" ry="2" />
<text  x="40.57" y="479.5" ></text>
</g>
<g >
<title>__strchr_avx2 (10,101,010 samples, 0.09%)</title><rect x="42.0" y="677" width="1.1" height="15.0" fill="rgb(215,153,45)" rx="2" ry="2" />
<text  x="44.98" y="687.5" ></text>
</g>
<g >
<title>redisAsyncRead (80,808,080 samples, 0.75%)</title><rect x="24.3" y="693" width="8.9" height="15.0" fill="rgb(224,69,25)" rx="2" ry="2" />
<text  x="27.34" y="703.5" ></text>
</g>
<g >
<title>realloc (10,101,010 samples, 0.09%)</title><rect x="66.2" y="693" width="1.1" height="15.0" fill="rgb(228,39,52)" rx="2" ry="2" />
<text  x="69.24" y="703.5" ></text>
</g>
<g >
<title>find_attach (10,101,010 samples, 0.09%)</title><rect x="13.3" y="533" width="1.1" height="15.0" fill="rgb(215,81,30)" rx="2" ry="2" />
<text  x="16.31" y="543.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.09%)</title><rect x="19.9" y="693" width="1.1" height="15.0" fill="rgb(248,208,7)" rx="2" ry="2" />
<text  x="22.93" y="703.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,101,010 samples, 0.09%)</title><rect x="39.8" y="117" width="1.1" height="15.0" fill="rgb(250,35,21)" rx="2" ry="2" />
<text  x="42.78" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,202,020 samples, 0.19%)</title><rect x="22.1" y="677" width="2.2" height="15.0" fill="rgb(226,87,52)" rx="2" ry="2" />
<text  x="25.13" y="687.5" ></text>
</g>
<g >
<title>tcp_data_queue (10,101,010 samples, 0.09%)</title><rect x="39.8" y="53" width="1.1" height="15.0" fill="rgb(253,22,5)" rx="2" ry="2" />
<text  x="42.78" y="63.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.09%)</title><rect x="12.2" y="645" width="1.1" height="15.0" fill="rgb(219,175,5)" rx="2" ry="2" />
<text  x="15.21" y="655.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (40,404,040 samples, 0.37%)</title><rect x="27.6" y="469" width="4.5" height="15.0" fill="rgb(218,158,33)" rx="2" ry="2" />
<text  x="30.64" y="479.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (10,101,010 samples, 0.09%)</title><rect x="37.6" y="501" width="1.1" height="15.0" fill="rgb(220,85,44)" rx="2" ry="2" />
<text  x="40.57" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_ftruncate (10,101,010 samples, 0.09%)</title><rect x="1187.8" y="629" width="1.1" height="15.0" fill="rgb(213,9,5)" rx="2" ry="2" />
<text  x="1190.79" y="639.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (10,101,010 samples, 0.09%)</title><rect x="32.1" y="613" width="1.1" height="15.0" fill="rgb(224,13,29)" rx="2" ry="2" />
<text  x="35.06" y="623.5" ></text>
</g>
<g >
<title>kworker/0:0-eve (10,101,010 samples, 0.09%)</title><rect x="18.8" y="709" width="1.1" height="15.0" fill="rgb(211,137,27)" rx="2" ry="2" />
<text  x="21.82" y="719.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (10,101,010 samples, 0.09%)</title><rect x="60.7" y="645" width="1.1" height="15.0" fill="rgb(236,25,37)" rx="2" ry="2" />
<text  x="63.73" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (20,202,020 samples, 0.19%)</title><rect x="39.8" y="645" width="2.2" height="15.0" fill="rgb(253,102,24)" rx="2" ry="2" />
<text  x="42.78" y="655.5" ></text>
</g>
<g >
<title>drm_atomic_commit (10,101,010 samples, 0.09%)</title><rect x="18.8" y="597" width="1.1" height="15.0" fill="rgb(250,225,3)" rx="2" ry="2" />
<text  x="21.82" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (10,101,010 samples, 0.09%)</title><rect x="12.2" y="629" width="1.1" height="15.0" fill="rgb(219,131,53)" rx="2" ry="2" />
<text  x="15.21" y="639.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (10,101,010 samples, 0.09%)</title><rect x="1187.8" y="501" width="1.1" height="15.0" fill="rgb(223,42,37)" rx="2" ry="2" />
<text  x="1190.79" y="511.5" ></text>
</g>
<g >
<title>ep_insert (10,101,010 samples, 0.09%)</title><rect x="23.2" y="613" width="1.1" height="15.0" fill="rgb(229,144,39)" rx="2" ry="2" />
<text  x="26.23" y="623.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (10,101,010 samples, 0.09%)</title><rect x="37.6" y="485" width="1.1" height="15.0" fill="rgb(254,123,44)" rx="2" ry="2" />
<text  x="40.57" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.09%)</title><rect x="25.4" y="645" width="1.1" height="15.0" fill="rgb(233,19,16)" rx="2" ry="2" />
<text  x="28.44" y="655.5" ></text>
</g>
<g >
<title>net_rx_action (20,202,020 samples, 0.19%)</title><rect x="28.7" y="293" width="2.3" height="15.0" fill="rgb(223,199,34)" rx="2" ry="2" />
<text  x="31.75" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.09%)</title><rect x="14.4" y="661" width="1.1" height="15.0" fill="rgb(215,75,35)" rx="2" ry="2" />
<text  x="17.41" y="671.5" ></text>
</g>
<g >
<title>_copy_to_iter (10,101,010 samples, 0.09%)</title><rect x="37.6" y="437" width="1.1" height="15.0" fill="rgb(215,159,37)" rx="2" ry="2" />
<text  x="40.57" y="447.5" ></text>
</g>
<g >
<title>sdsIncrLen (10,101,010 samples, 0.09%)</title><rect x="46.4" y="677" width="1.1" height="15.0" fill="rgb(212,40,38)" rx="2" ry="2" />
<text  x="49.39" y="687.5" ></text>
</g>
<g >
<title>tcp_rcv_established (10,101,010 samples, 0.09%)</title><rect x="39.8" y="69" width="1.1" height="15.0" fill="rgb(205,152,19)" rx="2" ry="2" />
<text  x="42.78" y="79.5" ></text>
</g>
<g >
<title>ip_rcv (20,202,020 samples, 0.19%)</title><rect x="28.7" y="213" width="2.3" height="15.0" fill="rgb(249,20,16)" rx="2" ry="2" />
<text  x="31.75" y="223.5" ></text>
</g>
<g >
<title>inet_sendmsg (10,101,010 samples, 0.09%)</title><rect x="39.8" y="533" width="1.1" height="15.0" fill="rgb(216,94,35)" rx="2" ry="2" />
<text  x="42.78" y="543.5" ></text>
</g>
<g >
<title>map_id_up (10,101,010 samples, 0.09%)</title><rect x="12.2" y="565" width="1.1" height="15.0" fill="rgb(241,183,19)" rx="2" ry="2" />
<text  x="15.21" y="575.5" ></text>
</g>
<g >
<title>__netif_receive_skb (20,202,020 samples, 0.19%)</title><rect x="28.7" y="245" width="2.3" height="15.0" fill="rgb(227,93,8)" rx="2" ry="2" />
<text  x="31.75" y="255.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (20,202,020 samples, 0.19%)</title><rect x="28.7" y="229" width="2.3" height="15.0" fill="rgb(225,75,33)" rx="2" ry="2" />
<text  x="31.75" y="239.5" ></text>
</g>
<g >
<title>__xstat64 (10,101,010 samples, 0.09%)</title><rect x="12.2" y="677" width="1.1" height="15.0" fill="rgb(245,122,37)" rx="2" ry="2" />
<text  x="15.21" y="687.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (5,181,818,130 samples, 47.94%)</title><rect x="622.1" y="533" width="565.7" height="15.0" fill="rgb(236,39,10)" rx="2" ry="2" />
<text  x="625.06" y="543.5" >__cpuidle_text_start</text>
</g>
<g >
<title>__x64_sys_openat (10,101,010 samples, 0.09%)</title><rect x="14.4" y="629" width="1.1" height="15.0" fill="rgb(214,76,12)" rx="2" ry="2" />
<text  x="17.41" y="639.5" ></text>
</g>
<g >
<title>vfs_read (10,101,010 samples, 0.09%)</title><rect x="37.6" y="597" width="1.1" height="15.0" fill="rgb(230,35,12)" rx="2" ry="2" />
<text  x="40.57" y="607.5" ></text>
</g>
<g >
<title>process_backlog (10,101,010 samples, 0.09%)</title><rect x="39.8" y="229" width="1.1" height="15.0" fill="rgb(241,178,20)" rx="2" ry="2" />
<text  x="42.78" y="239.5" ></text>
</g>
<g >
<title>luaLoadLibraries (10,101,010 samples, 0.09%)</title><rect x="45.3" y="677" width="1.1" height="15.0" fill="rgb(214,53,53)" rx="2" ry="2" />
<text  x="48.29" y="687.5" ></text>
</g>
<g >
<title>__fget_light (10,101,010 samples, 0.09%)</title><rect x="22.1" y="597" width="1.1" height="15.0" fill="rgb(254,16,16)" rx="2" ry="2" />
<text  x="25.13" y="607.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (10,101,010 samples, 0.09%)</title><rect x="26.5" y="501" width="1.1" height="15.0" fill="rgb(239,213,22)" rx="2" ry="2" />
<text  x="29.54" y="511.5" ></text>
</g>
<g >
<title>ip_finish_output (10,101,010 samples, 0.09%)</title><rect x="39.8" y="357" width="1.1" height="15.0" fill="rgb(217,139,47)" rx="2" ry="2" />
<text  x="42.78" y="367.5" ></text>
</g>
<g >
<title>tcp_sendmsg (50,505,050 samples, 0.47%)</title><rect x="26.5" y="549" width="5.6" height="15.0" fill="rgb(223,156,11)" rx="2" ry="2" />
<text  x="29.54" y="559.5" ></text>
</g>
<g >
<title>drm_fb_helper_damage_work (10,101,010 samples, 0.09%)</title><rect x="18.8" y="629" width="1.1" height="15.0" fill="rgb(214,39,11)" rx="2" ry="2" />
<text  x="21.82" y="639.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (50,505,050 samples, 0.47%)</title><rect x="26.5" y="533" width="5.6" height="15.0" fill="rgb(245,155,11)" rx="2" ry="2" />
<text  x="29.54" y="543.5" ></text>
</g>
<g >
<title>new_sync_read (10,101,010 samples, 0.09%)</title><rect x="37.6" y="581" width="1.1" height="15.0" fill="rgb(229,215,17)" rx="2" ry="2" />
<text  x="40.57" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_execve (10,101,010 samples, 0.09%)</title><rect x="13.3" y="629" width="1.1" height="15.0" fill="rgb(206,193,43)" rx="2" ry="2" />
<text  x="16.31" y="639.5" ></text>
</g>
<g >
<title>[unknown] (161,616,160 samples, 1.50%)</title><rect x="35.4" y="693" width="17.6" height="15.0" fill="rgb(217,66,9)" rx="2" ry="2" />
<text  x="38.36" y="703.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (20,202,020 samples, 0.19%)</title><rect x="28.7" y="341" width="2.3" height="15.0" fill="rgb(205,173,45)" rx="2" ry="2" />
<text  x="31.75" y="351.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (20,202,020 samples, 0.19%)</title><rect x="33.2" y="693" width="2.2" height="15.0" fill="rgb(219,17,46)" rx="2" ry="2" />
<text  x="36.16" y="703.5" ></text>
</g>
<g >
<title>listTypePush (10,101,010 samples, 0.09%)</title><rect x="44.2" y="677" width="1.1" height="15.0" fill="rgb(206,103,16)" rx="2" ry="2" />
<text  x="47.19" y="687.5" ></text>
</g>
<g >
<title>tcp_write_xmit (10,101,010 samples, 0.09%)</title><rect x="39.8" y="453" width="1.1" height="15.0" fill="rgb(226,201,5)" rx="2" ry="2" />
<text  x="42.78" y="463.5" ></text>
</g>
<g >
<title>hash_search (10,101,010 samples, 0.09%)</title><rect x="17.7" y="693" width="1.1" height="15.0" fill="rgb(211,82,16)" rx="2" ry="2" />
<text  x="20.72" y="703.5" ></text>
</g>
<g >
<title>__ziplistInsert (10,101,010 samples, 0.09%)</title><rect x="59.6" y="693" width="1.1" height="15.0" fill="rgb(244,147,37)" rx="2" ry="2" />
<text  x="62.63" y="703.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.09%)</title><rect x="1188.9" y="693" width="1.1" height="15.0" fill="rgb(226,158,44)" rx="2" ry="2" />
<text  x="1191.90" y="703.5" ></text>
</g>
<g >
<title>skb_clone (10,101,010 samples, 0.09%)</title><rect x="31.0" y="453" width="1.1" height="15.0" fill="rgb(251,82,29)" rx="2" ry="2" />
<text  x="33.95" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,202,020 samples, 0.19%)</title><rect x="39.8" y="661" width="2.2" height="15.0" fill="rgb(228,140,19)" rx="2" ry="2" />
<text  x="42.78" y="671.5" ></text>
</g>
<g >
<title>__find_get_block (10,101,010 samples, 0.09%)</title><rect x="1187.8" y="469" width="1.1" height="15.0" fill="rgb(225,25,37)" rx="2" ry="2" />
<text  x="1190.79" y="479.5" ></text>
</g>
<g >
<title>_int_free (10,101,010 samples, 0.09%)</title><rect x="15.5" y="677" width="1.1" height="15.0" fill="rgb(218,221,14)" rx="2" ry="2" />
<text  x="18.51" y="687.5" ></text>
</g>
<g >
<title>ip_queue_xmit (10,101,010 samples, 0.09%)</title><rect x="39.8" y="421" width="1.1" height="15.0" fill="rgb(222,87,35)" rx="2" ry="2" />
<text  x="42.78" y="431.5" ></text>
</g>
<g >
<title>vfs_write (10,101,010 samples, 0.09%)</title><rect x="39.8" y="597" width="1.1" height="15.0" fill="rgb(226,170,14)" rx="2" ry="2" />
<text  x="42.78" y="607.5" ></text>
</g>
<g >
<title>tcp_recvmsg (10,101,010 samples, 0.09%)</title><rect x="37.6" y="517" width="1.1" height="15.0" fill="rgb(216,164,54)" rx="2" ry="2" />
<text  x="40.57" y="527.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (10,101,010 samples, 0.09%)</title><rect x="39.8" y="37" width="1.1" height="15.0" fill="rgb(228,159,29)" rx="2" ry="2" />
<text  x="42.78" y="47.5" ></text>
</g>
<g >
<title>cpu_startup_entry (5,010,100,960 samples, 46.36%)</title><rect x="75.1" y="661" width="547.0" height="15.0" fill="rgb(225,186,37)" rx="2" ry="2" />
<text  x="78.07" y="671.5" >cpu_startup_entry</text>
</g>
<g >
<title>do_exit (10,101,010 samples, 0.09%)</title><rect x="60.7" y="581" width="1.1" height="15.0" fill="rgb(245,41,50)" rx="2" ry="2" />
<text  x="63.73" y="591.5" ></text>
</g>
<g >
<title>__libc_write (30,303,030 samples, 0.28%)</title><rect x="38.7" y="677" width="3.3" height="15.0" fill="rgb(249,161,8)" rx="2" ry="2" />
<text  x="41.67" y="687.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.09%)</title><rect x="1188.9" y="661" width="1.1" height="15.0" fill="rgb(232,169,2)" rx="2" ry="2" />
<text  x="1191.90" y="671.5" ></text>
</g>
<g >
<title>malloc_usable_size (30,303,030 samples, 0.28%)</title><rect x="61.8" y="693" width="3.3" height="15.0" fill="rgb(227,216,8)" rx="2" ry="2" />
<text  x="64.83" y="703.5" ></text>
</g>
<g >
<title>systemd (10,101,010 samples, 0.09%)</title><rect x="1188.9" y="709" width="1.1" height="15.0" fill="rgb(208,179,21)" rx="2" ry="2" />
<text  x="1191.90" y="719.5" ></text>
</g>
<g >
<title>zfree (30,303,030 samples, 0.28%)</title><rect x="48.6" y="677" width="3.3" height="15.0" fill="rgb(225,150,41)" rx="2" ry="2" />
<text  x="51.60" y="687.5" ></text>
</g>
<g >
<title>start_secondary (5,010,100,960 samples, 46.36%)</title><rect x="75.1" y="677" width="547.0" height="15.0" fill="rgb(250,108,30)" rx="2" ry="2" />
<text  x="78.07" y="687.5" >start_secondary</text>
</g>
<g >
<title>zap_pte_range (10,101,010 samples, 0.09%)</title><rect x="60.7" y="485" width="1.1" height="15.0" fill="rgb(230,175,54)" rx="2" ry="2" />
<text  x="63.73" y="495.5" ></text>
</g>
<g >
<title>__fdget (10,101,010 samples, 0.09%)</title><rect x="22.1" y="613" width="1.1" height="15.0" fill="rgb(216,74,10)" rx="2" ry="2" />
<text  x="25.13" y="623.5" ></text>
</g>
<g >
<title>process_one_work (10,101,010 samples, 0.09%)</title><rect x="18.8" y="645" width="1.1" height="15.0" fill="rgb(245,182,36)" rx="2" ry="2" />
<text  x="21.82" y="655.5" ></text>
</g>
<g >
<title>_copy_from_iter (10,101,010 samples, 0.09%)</title><rect x="26.5" y="517" width="1.1" height="15.0" fill="rgb(233,104,47)" rx="2" ry="2" />
<text  x="29.54" y="527.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (5,010,100,960 samples, 46.36%)</title><rect x="75.1" y="597" width="547.0" height="15.0" fill="rgb(225,210,31)" rx="2" ry="2" />
<text  x="78.07" y="607.5" >__cpuidle_text_start</text>
</g>
<g >
<title>tcp_v4_do_rcv (10,101,010 samples, 0.09%)</title><rect x="39.8" y="85" width="1.1" height="15.0" fill="rgb(251,160,1)" rx="2" ry="2" />
<text  x="42.78" y="95.5" ></text>
</g>
<g >
<title>__sys_sendto (50,505,050 samples, 0.47%)</title><rect x="26.5" y="597" width="5.6" height="15.0" fill="rgb(247,112,36)" rx="2" ry="2" />
<text  x="29.54" y="607.5" ></text>
</g>
<g >
<title>format_timespan (10,101,010 samples, 0.09%)</title><rect x="1188.9" y="613" width="1.1" height="15.0" fill="rgb(253,193,30)" rx="2" ry="2" />
<text  x="1191.90" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.09%)</title><rect x="13.3" y="661" width="1.1" height="15.0" fill="rgb(242,120,12)" rx="2" ry="2" />
<text  x="16.31" y="671.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.09%)</title><rect x="1188.9" y="645" width="1.1" height="15.0" fill="rgb(222,86,15)" rx="2" ry="2" />
<text  x="1191.90" y="655.5" ></text>
</g>
<g >
<title>__libc_recv (20,202,020 samples, 0.19%)</title><rect x="24.3" y="661" width="2.2" height="15.0" fill="rgb(220,64,47)" rx="2" ry="2" />
<text  x="27.34" y="671.5" ></text>
</g>
<g >
<title>tcp_push (10,101,010 samples, 0.09%)</title><rect x="39.8" y="485" width="1.1" height="15.0" fill="rgb(248,115,16)" rx="2" ry="2" />
<text  x="42.78" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (60,606,060 samples, 0.56%)</title><rect x="53.0" y="693" width="6.6" height="15.0" fill="rgb(218,202,25)" rx="2" ry="2" />
<text  x="56.01" y="703.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (40,404,040 samples, 0.37%)</title><rect x="27.6" y="501" width="4.5" height="15.0" fill="rgb(235,69,6)" rx="2" ry="2" />
<text  x="30.64" y="511.5" ></text>
</g>
<g >
<title>ip_finish_output2 (20,202,020 samples, 0.19%)</title><rect x="28.7" y="357" width="2.3" height="15.0" fill="rgb(219,37,21)" rx="2" ry="2" />
<text  x="31.75" y="367.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (10,101,010 samples, 0.09%)</title><rect x="39.8" y="501" width="1.1" height="15.0" fill="rgb(207,165,29)" rx="2" ry="2" />
<text  x="42.78" y="511.5" ></text>
</g>
<g >
<title>tcp_write_xmit (40,404,040 samples, 0.37%)</title><rect x="27.6" y="485" width="4.5" height="15.0" fill="rgb(254,16,24)" rx="2" ry="2" />
<text  x="30.64" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.09%)</title><rect x="1187.8" y="645" width="1.1" height="15.0" fill="rgb(243,170,10)" rx="2" ry="2" />
<text  x="1190.79" y="655.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,101,010 samples, 0.09%)</title><rect x="39.8" y="149" width="1.1" height="15.0" fill="rgb(246,25,12)" rx="2" ry="2" />
<text  x="42.78" y="159.5" ></text>
</g>
<g >
<title>__napi_poll (20,202,020 samples, 0.19%)</title><rect x="28.7" y="277" width="2.3" height="15.0" fill="rgb(244,82,0)" rx="2" ry="2" />
<text  x="31.75" y="287.5" ></text>
</g>
<g >
<title>do_epoll_ctl (20,202,020 samples, 0.19%)</title><rect x="22.1" y="629" width="2.2" height="15.0" fill="rgb(237,153,36)" rx="2" ry="2" />
<text  x="25.13" y="639.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (10,101,010 samples, 0.09%)</title><rect x="39.8" y="309" width="1.1" height="15.0" fill="rgb(251,0,7)" rx="2" ry="2" />
<text  x="42.78" y="319.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.isra.0 (10,101,010 samples, 0.09%)</title><rect x="29.9" y="181" width="1.1" height="15.0" fill="rgb(219,39,53)" rx="2" ry="2" />
<text  x="32.85" y="191.5" ></text>
</g>
<g >
<title>inet_sendmsg (50,505,050 samples, 0.47%)</title><rect x="26.5" y="565" width="5.6" height="15.0" fill="rgb(219,157,9)" rx="2" ry="2" />
<text  x="29.54" y="575.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (10,101,010 samples, 0.09%)</title><rect x="39.8" y="277" width="1.1" height="15.0" fill="rgb(225,0,9)" rx="2" ry="2" />
<text  x="42.78" y="287.5" ></text>
</g>
<g >
<title>do_truncate (10,101,010 samples, 0.09%)</title><rect x="1187.8" y="597" width="1.1" height="15.0" fill="rgb(236,166,19)" rx="2" ry="2" />
<text  x="1190.79" y="607.5" ></text>
</g>
<g >
<title>unmap_vmas (10,101,010 samples, 0.09%)</title><rect x="60.7" y="533" width="1.1" height="15.0" fill="rgb(249,129,19)" rx="2" ry="2" />
<text  x="63.73" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_read (10,101,010 samples, 0.09%)</title><rect x="37.6" y="629" width="1.1" height="15.0" fill="rgb(250,120,4)" rx="2" ry="2" />
<text  x="40.57" y="639.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (10,101,010 samples, 0.09%)</title><rect x="39.8" y="197" width="1.1" height="15.0" fill="rgb(214,175,34)" rx="2" ry="2" />
<text  x="42.78" y="207.5" ></text>
</g>
<g >
<title>tcp_push (40,404,040 samples, 0.37%)</title><rect x="27.6" y="517" width="4.5" height="15.0" fill="rgb(218,83,11)" rx="2" ry="2" />
<text  x="30.64" y="527.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (5,181,818,130 samples, 47.94%)</title><rect x="622.1" y="661" width="565.7" height="15.0" fill="rgb(252,160,8)" rx="2" ry="2" />
<text  x="625.06" y="671.5" >x86_64_start_reservations</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.09%)</title><rect x="12.2" y="661" width="1.1" height="15.0" fill="rgb(253,145,17)" rx="2" ry="2" />
<text  x="15.21" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.09%)</title><rect x="60.7" y="693" width="1.1" height="15.0" fill="rgb(213,35,35)" rx="2" ry="2" />
<text  x="63.73" y="703.5" ></text>
</g>
<g >
<title>drm_atomic_helper_check (10,101,010 samples, 0.09%)</title><rect x="18.8" y="581" width="1.1" height="15.0" fill="rgb(210,30,21)" rx="2" ry="2" />
<text  x="21.82" y="591.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (20,202,020 samples, 0.19%)</title><rect x="28.7" y="309" width="2.3" height="15.0" fill="rgb(252,2,12)" rx="2" ry="2" />
<text  x="31.75" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.09%)</title><rect x="13.3" y="645" width="1.1" height="15.0" fill="rgb(222,38,2)" rx="2" ry="2" />
<text  x="16.31" y="655.5" ></text>
</g>
<g >
<title>[unknown] (80,808,080 samples, 0.75%)</title><rect x="24.3" y="677" width="8.9" height="15.0" fill="rgb(207,113,37)" rx="2" ry="2" />
<text  x="27.34" y="687.5" ></text>
</g>
<g >
<title>zipIntSize (10,101,010 samples, 0.09%)</title><rect x="51.9" y="677" width="1.1" height="15.0" fill="rgb(216,18,33)" rx="2" ry="2" />
<text  x="54.91" y="687.5" ></text>
</g>
<g >
<title>redis-benchmark (121,212,120 samples, 1.12%)</title><rect x="19.9" y="709" width="13.3" height="15.0" fill="rgb(214,176,38)" rx="2" ry="2" />
<text  x="22.93" y="719.5" ></text>
</g>
<g >
<title>do_group_exit (10,101,010 samples, 0.09%)</title><rect x="60.7" y="597" width="1.1" height="15.0" fill="rgb(231,210,17)" rx="2" ry="2" />
<text  x="63.73" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.09%)</title><rect x="60.7" y="677" width="1.1" height="15.0" fill="rgb(213,40,46)" rx="2" ry="2" />
<text  x="63.73" y="687.5" ></text>
</g>
<g >
<title>do_idle (5,010,100,960 samples, 46.36%)</title><rect x="75.1" y="645" width="547.0" height="15.0" fill="rgb(230,209,33)" rx="2" ry="2" />
<text  x="78.07" y="655.5" >do_idle</text>
</g>
<g >
<title>sock_sendmsg (50,505,050 samples, 0.47%)</title><rect x="26.5" y="581" width="5.6" height="15.0" fill="rgb(234,35,13)" rx="2" ry="2" />
<text  x="29.54" y="591.5" ></text>
</g>
<g >
<title>cp_new_stat (10,101,010 samples, 0.09%)</title><rect x="12.2" y="597" width="1.1" height="15.0" fill="rgb(211,38,22)" rx="2" ry="2" />
<text  x="15.21" y="607.5" ></text>
</g>
<g >
<title>inet_recvmsg (10,101,010 samples, 0.09%)</title><rect x="37.6" y="533" width="1.1" height="15.0" fill="rgb(237,116,41)" rx="2" ry="2" />
<text  x="40.57" y="543.5" ></text>
</g>
<g >
<title>all (10,808,080,700 samples, 100%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(232,137,19)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (10,191,919,090 samples, 94.30%)</title><rect x="75.1" y="693" width="1112.7" height="15.0" fill="rgb(251,31,34)" rx="2" ry="2" />
<text  x="78.07" y="703.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>do_syscall_64 (60,606,060 samples, 0.56%)</title><rect x="26.5" y="629" width="6.7" height="15.0" fill="rgb(247,206,46)" rx="2" ry="2" />
<text  x="29.54" y="639.5" ></text>
</g>
<g >
<title>__GI___libc_open (10,101,010 samples, 0.09%)</title><rect x="14.4" y="677" width="1.1" height="15.0" fill="rgb(219,58,45)" rx="2" ry="2" />
<text  x="17.41" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.09%)</title><rect x="25.4" y="629" width="1.1" height="15.0" fill="rgb(251,123,27)" rx="2" ry="2" />
<text  x="28.44" y="639.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (10,101,010 samples, 0.09%)</title><rect x="1187.8" y="533" width="1.1" height="15.0" fill="rgb(227,131,36)" rx="2" ry="2" />
<text  x="1190.79" y="543.5" ></text>
</g>
<g >
<title>sock_read_iter (10,101,010 samples, 0.09%)</title><rect x="37.6" y="565" width="1.1" height="15.0" fill="rgb(227,61,17)" rx="2" ry="2" />
<text  x="40.57" y="575.5" ></text>
</g>
<g >
<title>start_kernel (5,181,818,130 samples, 47.94%)</title><rect x="622.1" y="645" width="565.7" height="15.0" fill="rgb(253,63,3)" rx="2" ry="2" />
<text  x="625.06" y="655.5" >start_kernel</text>
</g>
<g >
<title>do_sys_ftruncate (10,101,010 samples, 0.09%)</title><rect x="1187.8" y="613" width="1.1" height="15.0" fill="rgb(240,169,39)" rx="2" ry="2" />
<text  x="1190.79" y="623.5" ></text>
</g>
<g >
<title>profile_transition (10,101,010 samples, 0.09%)</title><rect x="13.3" y="549" width="1.1" height="15.0" fill="rgb(210,121,26)" rx="2" ry="2" />
<text  x="16.31" y="559.5" ></text>
</g>
<g >
<title>getDecodedObject (10,101,010 samples, 0.09%)</title><rect x="43.1" y="677" width="1.1" height="15.0" fill="rgb(224,73,33)" rx="2" ry="2" />
<text  x="46.08" y="687.5" ></text>
</g>
<g >
<title>arch_do_signal_or_restart (10,101,010 samples, 0.09%)</title><rect x="60.7" y="629" width="1.1" height="15.0" fill="rgb(210,66,18)" rx="2" ry="2" />
<text  x="63.73" y="639.5" ></text>
</g>
<g >
<title>redis-server (383,838,380 samples, 3.55%)</title><rect x="33.2" y="709" width="41.9" height="15.0" fill="rgb(248,137,3)" rx="2" ry="2" />
<text  x="36.16" y="719.5" >red..</text>
</g>
<g >
<title>arch_cpu_idle (5,181,818,130 samples, 47.94%)</title><rect x="622.1" y="549" width="565.7" height="15.0" fill="rgb(236,169,15)" rx="2" ry="2" />
<text  x="625.06" y="559.5" >arch_cpu_idle</text>
</g>
<g >
<title>rest_init (5,181,818,130 samples, 47.94%)</title><rect x="622.1" y="613" width="565.7" height="15.0" fill="rgb(212,5,22)" rx="2" ry="2" />
<text  x="625.06" y="623.5" >rest_init</text>
</g>
<g >
<title>ip_finish_output2 (10,101,010 samples, 0.09%)</title><rect x="39.8" y="325" width="1.1" height="15.0" fill="rgb(219,131,3)" rx="2" ry="2" />
<text  x="42.78" y="335.5" ></text>
</g>
<g >
<title>zmalloc (30,303,030 samples, 0.28%)</title><rect x="68.4" y="693" width="3.4" height="15.0" fill="rgb(243,209,3)" rx="2" ry="2" />
<text  x="71.45" y="703.5" ></text>
</g>
<g >
<title>__skb_clone (10,101,010 samples, 0.09%)</title><rect x="31.0" y="437" width="1.1" height="15.0" fill="rgb(240,162,19)" rx="2" ry="2" />
<text  x="33.95" y="447.5" ></text>
</g>
<g >
<title>bench.sh (50,505,050 samples, 0.47%)</title><rect x="13.3" y="709" width="5.5" height="15.0" fill="rgb(238,186,8)" rx="2" ry="2" />
<text  x="16.31" y="719.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (10,101,010 samples, 0.09%)</title><rect x="23.2" y="581" width="1.1" height="15.0" fill="rgb(248,26,43)" rx="2" ry="2" />
<text  x="26.23" y="591.5" ></text>
</g>
<g >
<title>do_sys_openat2 (10,101,010 samples, 0.09%)</title><rect x="14.4" y="597" width="1.1" height="15.0" fill="rgb(226,84,3)" rx="2" ry="2" />
<text  x="17.41" y="607.5" ></text>
</g>
<g >
<title>ksys_write (10,101,010 samples, 0.09%)</title><rect x="39.8" y="613" width="1.1" height="15.0" fill="rgb(206,69,39)" rx="2" ry="2" />
<text  x="42.78" y="623.5" ></text>
</g>
<g >
<title>apparmor_bprm_creds_for_exec (10,101,010 samples, 0.09%)</title><rect x="13.3" y="565" width="1.1" height="15.0" fill="rgb(210,122,19)" rx="2" ry="2" />
<text  x="16.31" y="575.5" ></text>
</g>
<g >
<title>new_sync_write (10,101,010 samples, 0.09%)</title><rect x="39.8" y="581" width="1.1" height="15.0" fill="rgb(252,63,1)" rx="2" ry="2" />
<text  x="42.78" y="591.5" ></text>
</g>
<g >
<title>ip_queue_xmit (30,303,030 samples, 0.28%)</title><rect x="27.6" y="453" width="3.4" height="15.0" fill="rgb(236,135,10)" rx="2" ry="2" />
<text  x="30.64" y="463.5" ></text>
</g>
<g >
<title>kthread (10,101,010 samples, 0.09%)</title><rect x="18.8" y="677" width="1.1" height="15.0" fill="rgb(206,138,19)" rx="2" ry="2" />
<text  x="21.82" y="687.5" ></text>
</g>
<g >
<title>arch_call_rest_init (5,181,818,130 samples, 47.94%)</title><rect x="622.1" y="629" width="565.7" height="15.0" fill="rgb(209,184,45)" rx="2" ry="2" />
<text  x="625.06" y="639.5" >arch_call_rest_init</text>
</g>
<g >
<title>exit_mmap (10,101,010 samples, 0.09%)</title><rect x="60.7" y="549" width="1.1" height="15.0" fill="rgb(238,114,20)" rx="2" ry="2" />
<text  x="63.73" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.09%)</title><rect x="14.4" y="645" width="1.1" height="15.0" fill="rgb(246,189,21)" rx="2" ry="2" />
<text  x="17.41" y="655.5" ></text>
</g>
<g >
<title>sock_write_iter (10,101,010 samples, 0.09%)</title><rect x="39.8" y="565" width="1.1" height="15.0" fill="rgb(211,82,18)" rx="2" ry="2" />
<text  x="42.78" y="575.5" ></text>
</g>
<g >
<title>default_idle_call (5,181,818,130 samples, 47.94%)</title><rect x="622.1" y="565" width="565.7" height="15.0" fill="rgb(208,124,49)" rx="2" ry="2" />
<text  x="625.06" y="575.5" >default_idle_call</text>
</g>
<g >
<title>ip_local_out (10,101,010 samples, 0.09%)</title><rect x="39.8" y="389" width="1.1" height="15.0" fill="rgb(224,69,51)" rx="2" ry="2" />
<text  x="42.78" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (20,202,020 samples, 0.19%)</title><rect x="22.1" y="645" width="2.2" height="15.0" fill="rgb(223,210,46)" rx="2" ry="2" />
<text  x="25.13" y="655.5" ></text>
</g>
<g >
<title>default_idle_call (5,010,100,960 samples, 46.36%)</title><rect x="75.1" y="629" width="547.0" height="15.0" fill="rgb(224,16,53)" rx="2" ry="2" />
<text  x="78.07" y="639.5" >default_idle_call</text>
</g>
<g >
<title>bprm_execve (10,101,010 samples, 0.09%)</title><rect x="13.3" y="597" width="1.1" height="15.0" fill="rgb(211,103,10)" rx="2" ry="2" />
<text  x="16.31" y="607.5" ></text>
</g>
<g >
<title>__do_sys_newstat (10,101,010 samples, 0.09%)</title><rect x="12.2" y="613" width="1.1" height="15.0" fill="rgb(246,37,5)" rx="2" ry="2" />
<text  x="15.21" y="623.5" ></text>
</g>
<g >
<title>quicklistPushHead (10,101,010 samples, 0.09%)</title><rect x="65.1" y="693" width="1.1" height="15.0" fill="rgb(245,201,54)" rx="2" ry="2" />
<text  x="68.14" y="703.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (10,101,010 samples, 0.09%)</title><rect x="40.9" y="629" width="1.1" height="15.0" fill="rgb(213,189,3)" rx="2" ry="2" />
<text  x="43.88" y="639.5" ></text>
</g>
<g >
<title>__netif_receive_skb (10,101,010 samples, 0.09%)</title><rect x="39.8" y="213" width="1.1" height="15.0" fill="rgb(228,36,12)" rx="2" ry="2" />
<text  x="42.78" y="223.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (10,101,010 samples, 0.09%)</title><rect x="1188.9" y="677" width="1.1" height="15.0" fill="rgb(249,10,6)" rx="2" ry="2" />
<text  x="1191.90" y="687.5" ></text>
</g>
<g >
<title>string2ll (10,101,010 samples, 0.09%)</title><rect x="47.5" y="677" width="1.1" height="15.0" fill="rgb(209,39,44)" rx="2" ry="2" />
<text  x="50.50" y="687.5" ></text>
</g>
<g >
<title>[unknown] (40,404,040 samples, 0.37%)</title><rect x="13.3" y="693" width="4.4" height="15.0" fill="rgb(244,101,33)" rx="2" ry="2" />
<text  x="16.31" y="703.5" ></text>
</g>
<g >
<title>__ftruncate64 (10,101,010 samples, 0.09%)</title><rect x="1187.8" y="677" width="1.1" height="15.0" fill="rgb(239,136,9)" rx="2" ry="2" />
<text  x="1190.79" y="687.5" ></text>
</g>
<g >
<title>ext4_truncate (10,101,010 samples, 0.09%)</title><rect x="1187.8" y="549" width="1.1" height="15.0" fill="rgb(216,109,15)" rx="2" ry="2" />
<text  x="1190.79" y="559.5" ></text>
</g>
<g >
<title>unmap_single_vma (10,101,010 samples, 0.09%)</title><rect x="60.7" y="517" width="1.1" height="15.0" fill="rgb(233,40,24)" rx="2" ry="2" />
<text  x="63.73" y="527.5" ></text>
</g>
<g >
<title>ip_rcv_finish (10,101,010 samples, 0.09%)</title><rect x="39.8" y="165" width="1.1" height="15.0" fill="rgb(229,133,36)" rx="2" ry="2" />
<text  x="42.78" y="175.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (10,101,010 samples, 0.09%)</title><rect x="23.2" y="597" width="1.1" height="15.0" fill="rgb(228,94,15)" rx="2" ry="2" />
<text  x="26.23" y="607.5" ></text>
</g>
<g >
<title>(s-server) (30,303,030 samples, 0.28%)</title><rect x="10.0" y="709" width="3.3" height="15.0" fill="rgb(238,64,46)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (10,101,010 samples, 0.09%)</title><rect x="13.3" y="613" width="1.1" height="15.0" fill="rgb(233,52,0)" rx="2" ry="2" />
<text  x="16.31" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.09%)</title><rect x="37.6" y="661" width="1.1" height="15.0" fill="rgb(246,226,14)" rx="2" ry="2" />
<text  x="40.57" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (50,505,050 samples, 0.47%)</title><rect x="26.5" y="613" width="5.6" height="15.0" fill="rgb(246,109,18)" rx="2" ry="2" />
<text  x="29.54" y="623.5" ></text>
</g>
<g >
<title>get_signal (10,101,010 samples, 0.09%)</title><rect x="60.7" y="613" width="1.1" height="15.0" fill="rgb(209,22,36)" rx="2" ry="2" />
<text  x="63.73" y="623.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (10,101,010 samples, 0.09%)</title><rect x="39.8" y="405" width="1.1" height="15.0" fill="rgb(241,23,7)" rx="2" ry="2" />
<text  x="42.78" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.09%)</title><rect x="37.6" y="645" width="1.1" height="15.0" fill="rgb(243,29,38)" rx="2" ry="2" />
<text  x="40.57" y="655.5" ></text>
</g>
<g >
<title>drm_atomic_helper_dirtyfb (10,101,010 samples, 0.09%)</title><rect x="18.8" y="613" width="1.1" height="15.0" fill="rgb(212,25,38)" rx="2" ry="2" />
<text  x="21.82" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (60,606,060 samples, 0.56%)</title><rect x="26.5" y="645" width="6.7" height="15.0" fill="rgb(207,84,38)" rx="2" ry="2" />
<text  x="29.54" y="655.5" ></text>
</g>
<g >
<title>sock_sendmsg (10,101,010 samples, 0.09%)</title><rect x="39.8" y="549" width="1.1" height="15.0" fill="rgb(252,168,11)" rx="2" ry="2" />
<text  x="42.78" y="559.5" ></text>
</g>
<g >
<title>__libc_send (60,606,060 samples, 0.56%)</title><rect x="26.5" y="661" width="6.7" height="15.0" fill="rgb(232,155,2)" rx="2" ry="2" />
<text  x="29.54" y="671.5" ></text>
</g>
<g >
<title>sock_recvmsg (10,101,010 samples, 0.09%)</title><rect x="37.6" y="549" width="1.1" height="15.0" fill="rgb(246,204,19)" rx="2" ry="2" />
<text  x="40.57" y="559.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (10,101,010 samples, 0.09%)</title><rect x="37.6" y="421" width="1.1" height="15.0" fill="rgb(243,101,15)" rx="2" ry="2" />
<text  x="40.57" y="431.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (10,101,010 samples, 0.09%)</title><rect x="60.7" y="661" width="1.1" height="15.0" fill="rgb(210,4,25)" rx="2" ry="2" />
<text  x="63.73" y="671.5" ></text>
</g>
<g >
<title>security_bprm_creds_for_exec (10,101,010 samples, 0.09%)</title><rect x="13.3" y="581" width="1.1" height="15.0" fill="rgb(227,195,24)" rx="2" ry="2" />
<text  x="16.31" y="591.5" ></text>
</g>
<g >
<title>ip_finish_output (20,202,020 samples, 0.19%)</title><rect x="28.7" y="389" width="2.3" height="15.0" fill="rgb(216,171,21)" rx="2" ry="2" />
<text  x="31.75" y="399.5" ></text>
</g>
<g >
<title>ksys_read (10,101,010 samples, 0.09%)</title><rect x="37.6" y="613" width="1.1" height="15.0" fill="rgb(223,60,22)" rx="2" ry="2" />
<text  x="40.57" y="623.5" ></text>
</g>
</g>
</svg>
